// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Inc16(in=rgstd, out=incd);

    Mux(a=inc, b=load, sel=load, out=w1);
    DMux(in=w1, sel=load, a=incdd, b=loadd);

    Or(a=reset, b=incdd, out=sel1);
    Or(a=reset, b=loadd, out=sel0);

    Mux4Way16(a=rgstd, b=in, c=incd, d=false, sel[0]=sel0, sel[1]=sel1, out=muxd);

    Register(in=muxd, load=true, out=rgstd, out=out);
}
