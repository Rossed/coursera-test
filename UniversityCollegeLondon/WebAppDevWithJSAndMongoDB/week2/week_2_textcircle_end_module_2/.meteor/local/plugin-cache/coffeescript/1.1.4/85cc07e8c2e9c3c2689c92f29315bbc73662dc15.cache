{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar Future, options, ref;         \n\nFuture = Npm.require('fibers/future');\n\nShareJS = ShareJS || {};\n\noptions = _.extend({\n  staticPath: null,\n  db: {\n    type: 'mongo',\n    opsCollectionPerDoc: false\n  }\n}, (ref = Meteor.settings.sharejs) != null ? ref.options : void 0);\n\nswitch (options.db.type) {\n  case 'mongo':\n\n    /*\n      ShareJS 0.6.3 mongo driver:\n      https://github.com/share/ShareJS/blob/v0.6.3/src/server/db/mongo.coffee\n      It will create its own indices on the 'ops' collection.\n     */\n    options.db.client = MongoInternals.defaultRemoteCollectionDriver().mongo.db;\n    options.db.client.open = function() {};\n    if (options.accounts_auth != null) {\n      options.auth = new MeteorAccountsAuthHandler(options.accounts_auth, options.db.client).handle;\n    }\n    break;\n  default:\n    Meteor._debug(\"ShareJS: using unsupported db type \" + options.db.type + \", falling back to in-memory.\");\n}\n\nRoutePolicy.declare('/channel/', 'network');\n\nNpm.require('share').server.attach(WebApp.connectHandlers, options);\n\n\n/*\n  ShareJS attaches the server API to a weird place. Oh well...\n  https://github.com/share/ShareJS/blob/v0.6.2/src/server/index.coffee\n */\n\nShareJS.model = WebApp.connectHandlers.model;\n\nShareJS.initializeDoc = function(docName, content) {\n  return ShareJS.model.create(docName, 'text', {}, function(err) {\n    var opData;\n    if (err) {\n      console.log(err);\n      return;\n    }\n    opData = {\n      op: [\n        {\n          i: content,\n          p: 0\n        }\n      ],\n      v: 0,\n      meta: {}\n    };\n    return ShareJS.model.applyOp(docName, opData, function(err, res) {\n      if (err) {\n        return console.log(err);\n      }\n    });\n  });\n};\n","sourceMap":{"version":3,"file":"/sharejs-server.coffee.js","sourceRoot":"","sources":["/packages/mizzao_sharejs/sharejs-server.coffee"],"names":[],"mappings":";AAEA,IAAA;;AAAA,MAAA,GAAS,GAAG,CAAC,OAAJ,CAAY,eAAZ;;AAET,OAAA,GAAU,OAAA,IAAW;;AAIrB,OAAA,GAAU,CAAC,CAAC,MAAF,CAAS;EACjB,UAAA,EAAY,IADK;EAGjB,EAAA,EAAI;IAEF,IAAA,EAAM,OAFJ;IAIF,mBAAA,EAAqB,KAJnB;GAHa;CAAT,+CASgB,CAAE,gBATlB;;AAWV,QAAO,OAAO,CAAC,EAAE,CAAC,IAAlB;AAAA,OACO,OADP;;AAEI;;;;;IAKA,OAAO,CAAC,EAAE,CAAC,MAAX,GAAoB,cAAc,CAAC,6BAAf,CAAA,CAA8C,CAAC,KAAK,CAAC;IAWzE,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,IAAlB,GAAyB,SAAA,GAAA;IAEzB,IAAG,6BAAH;MACE,OAAO,CAAC,IAAR,GAAe,IAAI,yBAAA,CAA0B,OAAO,CAAC,aAAlC,EAAiD,OAAO,CAAC,EAAE,CAAC,MAA5D,CAAmE,CAAC,OADzF;;AAnBG;AADP;IAuBI,MAAM,CAAC,MAAP,CAAc,qCAAA,GAAwC,OAAO,CAAC,EAAE,CAAC,IAAnD,GAA0D,8BAAxE;AAvBJ;;AA0BA,WAAW,CAAC,OAAZ,CAAoB,WAApB,EAAiC,SAAjC;;AAGA,GAAG,CAAC,OAAJ,CAAY,OAAZ,CAAoB,CAAC,MAAM,CAAC,MAA5B,CAAmC,MAAM,CAAC,eAA1C,EAA2D,OAA3D;;;AAEA;;;;;AAIA,OAAO,CAAC,KAAR,GAAgB,MAAM,CAAC,eAAe,CAAC;;AAGvC,OAAO,CAAC,aAAR,GAAwB,SAAC,OAAD,EAAU,OAAV;SACtB,OAAO,CAAC,KAAK,CAAC,MAAd,CAAqB,OAArB,EAA8B,MAA9B,EAAsC,EAAtC,EAA0C,SAAC,GAAD;AACxC,QAAA;IAAA,IAAG,GAAH;MACE,OAAO,CAAC,GAAR,CAAY,GAAZ;AACA,aAFF;;IAKA,MAAA,GAAS;MACP,EAAA,EAAI;QAAE;UAAC,CAAA,EAAG,OAAJ;UAAa,CAAA,EAAG,CAAhB;SAAF;OADG;MAEP,CAAA,EAAG,CAFI;MAGP,IAAA,EAAM,EAHC;;WAKT,OAAO,CAAC,KAAK,CAAC,OAAd,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,SAAC,GAAD,EAAM,GAAN;MACrC,IAAoB,GAApB;eAAA,OAAO,CAAC,GAAR,CAAY,GAAZ,EAAA;;IADqC,CAAvC;EAXwC,CAA1C;AADsB","sourcesContent":["# Creates a (persistent) ShareJS server\n# Based on https://github.com/share/ShareJS/wiki/Getting-started\nFuture = Npm.require('fibers/future')\n\nShareJS = ShareJS || {}\n# See docs for options. Uses mongo by default to enable persistence.\n\n# Using special options from https://github.com/share/ShareJS/blob/master/src/server/index.coffee\noptions = _.extend {\n  staticPath: null # Meteor is serving up this application\n  # rest: null # disable REST interface?\n  db: {\n    # Default option is Mongo because Meteor provides it\n    type: 'mongo'\n    # A doc/op indexed collection keeps the namespace cleaner in a Meteor app.\n    opsCollectionPerDoc: false\n  }\n}, Meteor.settings.sharejs?.options\n\nswitch options.db.type\n  when 'mongo'\n    ###\n      ShareJS 0.6.3 mongo driver:\n      https://github.com/share/ShareJS/blob/v0.6.3/src/server/db/mongo.coffee\n      It will create its own indices on the 'ops' collection.\n    ###\n    options.db.client = MongoInternals.defaultRemoteCollectionDriver().mongo.db\n\n    # Disable the open command due to the bug introduced in ShareJS 0.6.3\n    # where an open database connection is not accepted\n    # https://github.com/share/ShareJS/commit/f98a4adeca396df3ec6b1d838b965ff158f452a3\n\n    # Meteor has already opened the database connection, so this should work,\n    # but watch monkey-patch carefully with changes in how\n    # https://github.com/meteor/meteor/blob/devel/packages/mongo-livedata/mongo_driver.js\n    # uses the API at\n    # http://mongodb.github.io/node-mongodb-native/api-generated/mongoclient.html\n    options.db.client.open = ->\n\n    if options.accounts_auth?\n      options.auth = new MeteorAccountsAuthHandler(options.accounts_auth, options.db.client).handle\n  else\n    Meteor._debug \"ShareJS: using unsupported db type \" + options.db.type + \", falling back to in-memory.\"\n\n# Declare the path that ShareJS uses to Meteor\nRoutePolicy.declare('/channel/', 'network');\n\n# Attach the sharejs REST and bcsocket interfaces as middleware to the meteor connect server\nNpm.require('share').server.attach(WebApp.connectHandlers, options);\n\n###\n  ShareJS attaches the server API to a weird place. Oh well...\n  https://github.com/share/ShareJS/blob/v0.6.2/src/server/index.coffee\n###\nShareJS.model = WebApp.connectHandlers.model\n\n# A convenience function for creating a document on the server.\nShareJS.initializeDoc = (docName, content) ->\n  ShareJS.model.create docName, 'text', {}, (err) ->\n    if err\n      console.log(err)\n      return\n    # One op; insert all the content at position 0\n    # https://github.com/share/ShareJS/wiki/Server-api\n    opData = {\n      op: [ {i: content, p: 0} ]\n      v: 0\n      meta: {}\n    }\n    ShareJS.model.applyOp docName, opData, (err, res) ->\n      console.log(err) if err\n"]}}