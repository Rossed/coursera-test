[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nLog = Package.logging.Log;\nRandom = Package.random.Random;\nEJSON = Package.ejson.EJSON;\nSpacebars = Package.spacebars.Spacebars;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nShareJS = Package['mizzao:sharejs'].ShareJS;\nAccounts = Package['accounts-base'].Accounts;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){// this collection stores all the documents \nthis.Documents = new Mongo.Collection(\"documents\");\n// this collection stores sets of users that are editing documents\nEditingUsers = new Mongo.Collection(\"editingUsers\");\n\nif (Meteor.isClient) {\n  // return the id of the first document you can find\n  Template.editor.helpers({\n    docid:function(){\n      var doc = Documents.findOne();\n      if (doc){\n        return doc._id;\n      }\n      else {\n        return undefined;\n      }\n    }, \n    // configure the CodeMirror editor\n    config:function(){\n      return function(editor){\n        editor.setOption(\"lineNumbers\", true);\n        editor.setOption(\"theme\", \"cobalt\");\n        // set a callback that gets triggered whenever the user\n        // makes a change in the code editing window\n        editor.on(\"change\", function(cm_editor, info){\n          // send the current code over to the iframe for rendering\n          $(\"#viewer_iframe\").contents().find(\"html\").html(cm_editor.getValue());\n          Meteor.call(\"addEditingUser\");\n        });        \n      }\n    }, \n  });\n\n  Template.editingUsers.helpers({\n    // retrieve a set of users that are editing this document\n    users:function(){\n      var doc, eusers, users;\n      doc = Documents.findOne();\n      if (!doc){return;}// give up\n      eusers = EditingUsers.findOne({docid:doc._id});\n      if (!eusers){return;}// give up\n      users = new Array();\n      var i = 0;\n      for (var user_id in eusers.users){\n          users[i] = fixObjectKeys(eusers.users[user_id]);\n          i++;\n      }\n      return users;\n    }\n  })\n \n}// end isClient...\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // insert a document if there isn't one already\n    if (!Documents.findOne()){// no documents yet!\n        Documents.insert({title:\"my new document\"});\n    }\n  });\n}\n// methods that provide write access to the data\nMeteor.methods({\n  // allows changes to the editing users collection \n  addEditingUser:function(){\n    var doc, user, eusers;\n    doc = Documents.findOne();\n    if (!doc){return;}// no doc give up\n    if (!this.userId){return;}// no logged in user give up\n    // now I have a doc and possibly a user\n    user = Meteor.user().profile;\n    eusers = EditingUsers.findOne({docid:doc._id});\n    if (!eusers){// no editing users have been stored yet\n      eusers = {\n        docid:doc._id, \n        users:{}, \n      };\n    }\n    user.lastEdit = new Date();\n    eusers.users[this.userId] = user;\n    // upsert- insert or update if filter matches\n    EditingUsers.upsert({_id:eusers._id}, eusers);\n  }\n})\n\n// this renames object keys by removing hyphens to make the compatible \n// with spacebars. \nfunction fixObjectKeys(obj){\n  var newObj = {};\n  for (key in obj){\n    var key2 = key.replace(\"-\", \"\");\n    newObj[key2] = obj[key];\n  }\n  return newObj;\n}\n\n  \n\n\n\n\n\n}).call(this);\n","servePath":"/textcircle.js","sourceMap":null}]