{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/helpers.js","filenameRelative":"/client/helpers.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/helpers.js.map","sourceFileName":"/client/helpers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"helpers"},"ignored":false,"code":"Template.userList.helpers({\n  user: function () {\n    function user() {\n      return Meteor.users.find();\n    }\n\n    return user;\n  }(),\n\n  me: function () {\n    function me(id) {\n      var user = Meteor.users.findOne({ _id: id });\n      if (user._id == Meteor.userId()) {\n        return \"me\";\n      }\n    }\n\n    return me;\n  }()\n});\n\nTemplate.chat.helpers({\n  nowUser: function () {\n    function nowUser() {\n      var now = Meteor.users.findOne({ _id: Session.get(\"now\") });\n      if (now) {\n        return now.profile.username;\n      }\n    }\n\n    return nowUser;\n  }(),\n\n  history: function () {\n    function history() {\n      var me, user, filter, chats;\n      me = Meteor.userId();\n      user = Session.get(\"now\");\n      filter = {\n        $or: [{ from: user, to: me }, { from: me, to: user }]\n      };\n      chats = Chats.find(filter);\n      return chats;\n    }\n\n    return history;\n  }(),\n\n  getUsername: function () {\n    function getUsername(id) {\n      var user = Meteor.users.findOne({ _id: id });\n      if (user._id == Meteor.userId()) {\n        return \"me\";\n      } else {\n        return user.profile.username;\n      }\n    }\n\n    return getUsername;\n  }(),\n\n  getAvatar: function () {\n    function getAvatar(id) {\n      var user = Meteor.users.findOne({ _id: id });\n      return user.profile.avatar;\n    }\n\n    return getAvatar;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/client/helpers.js"],"names":[],"mappings":"AAAA,SAAS,QAAT,CAAkB,OAAlB,CAA0B;AACzB;AAAM,oBAAW;AAChB,aAAO,OAAO,KAAP,CAAa,IAAb,EAAP;AACA;;AAFD;AAAA,KADyB;;AAKxB;AAAI,gBAAS,EAAT,EAAa;AACf,UAAI,OAAO,OAAO,KAAP,CAAa,OAAb,CAAqB,EAAC,KAAK,EAAN,EAArB,CAAX;AACA,UAAI,KAAK,GAAL,IAAY,OAAO,MAAP,EAAhB,EAAiC;AAC/B,eAAO,IAAP;AACD;AACF;;AALD;AAAA;AALwB,CAA1B;;AAaA,SAAS,IAAT,CAAc,OAAd,CAAsB;AACpB;AAAS,uBAAW;AAClB,UAAI,MAAM,OAAO,KAAP,CAAa,OAAb,CAAqB,EAAC,KAAK,QAAQ,GAAR,CAAY,KAAZ,CAAN,EAArB,CAAV;AACA,UAAI,GAAJ,EAAS;AACP,eAAO,IAAI,OAAJ,CAAY,QAAnB;AACD;AACF;;AALD;AAAA,KADoB;;AAQpB;AAAS,uBAAW;AAClB,UAAI,EAAJ,EAAQ,IAAR,EAAc,MAAd,EAAsB,KAAtB;AACA,WAAK,OAAO,MAAP,EAAL;AACA,aAAO,QAAQ,GAAR,CAAY,KAAZ,CAAP;AACA,eAAS;AACP,aAAK,CACH,EAAC,MAAM,IAAP,EAAa,IAAI,EAAjB,EADG,EAEH,EAAC,MAAK,EAAN,EAAU,IAAG,IAAb,EAFG;AADE,OAAT;AAMA,cAAQ,MAAM,IAAN,CAAW,MAAX,CAAR;AACA,aAAO,KAAP;AACD;;AAZD;AAAA,KARoB;;AAsBpB;AAAa,yBAAS,EAAT,EAAa;AACxB,UAAI,OAAO,OAAO,KAAP,CAAa,OAAb,CAAqB,EAAC,KAAK,EAAN,EAArB,CAAX;AACA,UAAI,KAAK,GAAL,IAAY,OAAO,MAAP,EAAhB,EAAiC;AAC/B,eAAO,IAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAK,OAAL,CAAa,QAApB;AACD;AACF;;AAPD;AAAA,KAtBoB;;AA+BpB;AAAW,uBAAS,EAAT,EAAa;AACtB,UAAI,OAAO,OAAO,KAAP,CAAa,OAAb,CAAqB,EAAC,KAAK,EAAN,EAArB,CAAX;AACA,aAAO,KAAK,OAAL,CAAa,MAApB;AACD;;AAHD;AAAA;AA/BoB,CAAtB","file":"/client/helpers.js.map","sourcesContent":["Template.userList.helpers({\n\tuser: function() {\n\t\treturn Meteor.users.find();\n\t},\n\n  me: function(id) {\n    var user = Meteor.users.findOne({_id: id});\n    if (user._id == Meteor.userId()) {\n      return \"me\"\n    }\n  }\n});\n\nTemplate.chat.helpers({\n  nowUser: function() {\n    var now = Meteor.users.findOne({_id: Session.get(\"now\")});\n    if (now) {\n      return now.profile.username;\n    }\n  },\n\n  history: function() {\n    var me, user, filter, chats;\n    me = Meteor.userId();\n    user = Session.get(\"now\");\n    filter = {\n      $or: [\n        {from: user, to: me},\n        {from:me, to:user}\n      ]\n    };\n    chats = Chats.find(filter);\n    return chats;\n  },\n\n  getUsername: function(id) {\n    var user = Meteor.users.findOne({_id: id});\n    if (user._id == Meteor.userId()) {\n      return \"me\"\n    } else {\n      return user.profile.username;\n    }\n  },\n\n  getAvatar: function(id) {\n    var user = Meteor.users.findOne({_id: id});\n    return user.profile.avatar;\n  }\n})"]},"hash":"fc2fe590490480f5c59bc572ffe9fb9b0e133fea"}
