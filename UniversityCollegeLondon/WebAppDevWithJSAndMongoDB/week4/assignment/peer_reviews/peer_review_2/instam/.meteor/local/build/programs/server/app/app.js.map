{"version":3,"sources":["meteor://ðŸ’»app/lib/collections.js","meteor://ðŸ’»app/lib/schema.js","meteor://ðŸ’»app/common/methods.js","meteor://ðŸ’»app/server/startup.js","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,IAAI,MAAM,UAAV,CAAqB,OAArB,CAAR,wD;;;;;;;;;;;ACAA,MAAM,YAAN,CAAmB,IAAI,YAAJ,CAAiB;AACnC,UAAS;AACR,QAAM,MADE;AAER,OAAK;AAFG,EAD0B;AAKnC,OAAM;AACL,QAAM,MADD;AAEL,YAAU;AAFL,EAL6B;AASnC,KAAI;AACH,QAAM,MADH;AAEH,YAAU;AAFP,EAT+B;AAanC,YAAW;AACV,QAAM,IADI;AAET,YAAU;AAFD;AAbwB,CAAjB,CAAnB,2F;;;;;;;;;;;ACAA,IAAI,GAAJ;;AAEA,OAAO,OAAP,CAAe;AACd,YAAW,mBAAS,KAAT,EAAgB;AAC1B,QAAM,KAAN;;AAEA,EAJa;;AAMd,UAAS,iBAAS,OAAT,EAAkB;AAC1B,UAAQ,IAAR,GAAe,KAAK,MAApB;AACA,UAAQ,EAAR,GAAa,GAAb;AACA,UAAQ,SAAR,GAAoB,IAAI,IAAJ,EAApB;AACA,QAAM,MAAN,CAAa,OAAb;AACA;AAXa,CAAf,4F;;;;;;;;;;;ACFA,OAAO,OAAP,CAAe,YAAW;AACzB,KAAI,CAAC,OAAO,KAAP,CAAa,OAAb,EAAL,EAA6B;AAC5B,OAAK,IAAI,IAAE,CAAX,EAAa,IAAE,CAAf,EAAiB,GAAjB,EAAqB;AACd,OAAI,QAAQ,SAAO,CAAP,GAAS,WAArB;AACA,OAAI,WAAW,SAAO,CAAtB;AACA,OAAI,SAAS,WAAS,CAAT,GAAW,MAAxB;AACA,WAAQ,GAAR,CAAY,kEAAgE,KAA5E;AACA,UAAO,KAAP,CAAa,MAAb,CAAoB,EAAC,SAAQ,EAAC,UAAS,QAAV,EAAoB,QAAO,MAA3B,EAAT,EAA6C,QAAO,CAAC,EAAC,SAAQ,KAAT,EAAD,CAApD,EAAsE,UAAS,EAAE,UAAS,EAAC,UAAW,8DAAZ,EAAX,EAA/E,EAApB;AACD;AACN;AACD,CAVD,6F;;;;;;;;;;;;;ACEA,OAAO,OAAP,CAAe,OAAf,EAAwB,YAAW;AAClC,KAAI,KAAK,MAAT,EAAiB;AAChB,SAAO,OAAO,KAAP,CAAa,IAAb,CAAkB,EAAlB,CAAP;AACA,EAFD,MAEO;AACN,SAAO,SAAP;AACA;AACD,CAND;;AAQA,OAAO,OAAP,CAAe,OAAf,EAAwB,YAAW;AAClC,KAAI,KAAK,MAAT,EAAiB;AAChB,SAAO,MAAM,IAAN,CAAW,EAAX,CAAP;AACA,EAFD,MAEO;AACN,SAAO,SAAP;AACA;AACD,CAND,6F","file":"/app.js","sourcesContent":["Chats = new Mongo.Collection(\"chats\");","Chats.attachSchema(new SimpleSchema({\n\tmessage: {\n\t\ttype: String,\n\t\tmax: 500\n\t},\n\tfrom: {\n\t\ttype: String,\n\t\toptional: true\n\t},\n\tto: {\n\t\ttype: String,\n\t\toptional: true\n\t},\n\tcreatedOn: {\n\t\ttype: Date,\n\t \toptional: true\n\t}\n}));","var now;\n\nMeteor.methods({\n\tsendValue: function(value) {\n\t\tnow = value;\n\t\t//console.log(now + \" server\");\n\t},\n\n\tsendMsg: function(message) {\n\t\tmessage.from = this.userId;\n\t\tmessage.to = now;\n\t\tmessage.createdOn = new Date();\n\t\tChats.insert(message);\n\t}\n});","Meteor.startup(function() {\n\tif (!Meteor.users.findOne()) {\n\t\tfor (var i=1;i<5;i++){\n\t        var email = \"user\"+i+\"@test.com\";\n\t        var username = \"user\"+i;\n\t        var avatar = \"avator\"+i+\".png\"\n\t        console.log(\"creating a user with password 'test123' and username/ email: \"+email);\n\t        Meteor.users.insert({profile:{username:username, avatar:avatar}, emails:[{address:email}],services:{ password:{\"bcrypt\" : \"$2a$10$I3erQ084OiyILTv8ybtQ4ON6wusgPbMZ6.P33zzSDei.BbDL.Q4EO\"}}});\n      \t}\n\t}\n});","//read access \n\nMeteor.publish(\"users\", function() {\n\tif (this.userId) {\n\t\treturn Meteor.users.find({});\n\t} else {\n\t\treturn undefined;\n\t}\n});\n\nMeteor.publish(\"chats\", function() {\n\tif (this.userId) {\n\t\treturn Chats.find({});\n\t} else {\n\t\treturn undefined;\n\t}\n});"]}