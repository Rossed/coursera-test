{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/chat.js","filenameRelative":"/client/chat.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/chat.js.map","sourceFileName":"/client/chat.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"chat"},"ignored":false,"code":"Template.chat_page.helpers({\n  messages: function () {\n    function messages() {\n      var chat = Chats.findOne({ _id: Session.get(\"chatId\") });\n      if (chat) {\n        return chat.messages;\n      } else {\n        return [];\n      }\n    }\n\n    return messages;\n  }(),\n  chatWith: function () {\n    function chatWith() {\n      var chat = Chats.findOne({ _id: Session.get(\"chatId\") });\n      if (chat) {\n        if (chat.user1Id === Meteor.userId()) {\n          return Meteor.users.findOne(chat.user2Id);\n        } else {\n          return Meteor.users.findOne(chat.user1Id);\n        }\n      }\n      return;\n    }\n\n    return chatWith;\n  }()\n});\nTemplate.chat_page.events({\n  // this event fires when the user sends a message on the chat page\n  'submit .js-send-chat': function () {\n    function submitJsSendChat(event) {\n      // stop the form from triggering a page reload\n      event.preventDefault();\n      Meteor.call(\"sendMessage\", Session.get(\"chatId\"), event.target.chat.value, function (error, result) {\n        event.target.chat.value = \"\";\n      });\n    }\n\n    return submitJsSendChat;\n  }()\n});\n\nTemplate.chat_message.helpers({\n  isOwner: function () {\n    function isOwner() {\n      return this.userId === Meteor.userId();\n    }\n\n    return isOwner;\n  }(),\n  user: function () {\n    function user() {\n      return Meteor.users.findOne(this.userId);\n    }\n\n    return user;\n  }(),\n  formatedDate: function () {\n    function formatedDate() {\n      return moment(this.createdOn).fromNow();\n    }\n\n    return formatedDate;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/client/chat.js"],"names":[],"mappings":"AAAA,SAAS,SAAT,CAAmB,OAAnB,CAA2B;AACzB;AAAS,wBAAU;AACjB,UAAI,OAAO,MAAM,OAAN,CAAc,EAAC,KAAI,QAAQ,GAAR,CAAY,QAAZ,CAAJ,EAAf,CAAP,CADa;AAEjB,UAAI,IAAJ,EAAU;AACR,eAAO,KAAK,QAAL,CADC;OAAV,MAEO;AACL,eAAO,EAAP,CADK;OAFP;KAFO;;;KAAT;AAQA;AAAU,wBAAW;AACnB,UAAI,OAAO,MAAM,OAAN,CAAc,EAAC,KAAI,QAAQ,GAAR,CAAY,QAAZ,CAAJ,EAAf,CAAP,CADe;AAEnB,UAAI,IAAJ,EAAU;AACR,YAAI,KAAK,OAAL,KAAiB,OAAO,MAAP,EAAjB,EAAiC;AACnC,iBAAO,OAAO,KAAP,CAAa,OAAb,CAAqB,KAAK,OAAL,CAA5B,CADmC;SAArC,MAEO;AACL,iBAAO,OAAO,KAAP,CAAa,OAAb,CAAqB,KAAK,OAAL,CAA5B,CADK;SAFP;OADF;AAOA,aATmB;KAAX;;;KAAV;CATF;AAqBA,SAAS,SAAT,CAAmB,MAAnB,CAA0B;;AAE1B;AAAuB,8BAAS,KAAT,EAAe;;AAEpC,YAAM,cAAN,GAFoC;AAGpC,aAAO,IAAP,CAAY,aAAZ,EACE,QAAQ,GAAR,CAAY,QAAZ,CADF,EAEE,MAAM,MAAN,CAAa,IAAb,CAAkB,KAAlB,EACA,UAAS,KAAT,EAAgB,MAAhB,EAAuB;AACrB,cAAM,MAAN,CAAa,IAAb,CAAkB,KAAlB,GAA0B,EAA1B,CADqB;OAAvB,CAHF,CAHoC;KAAf;;;KAAvB;CAFA;;AAeA,SAAS,YAAT,CAAsB,OAAtB,CAA8B;AAC5B;AAAS,uBAAW;AAClB,aAAO,KAAK,MAAL,KAAgB,OAAO,MAAP,EAAhB,CADW;KAAX;;;KAAT;AAGA;AAAM,oBAAW;AACf,aAAO,OAAO,KAAP,CAAa,OAAb,CAAqB,KAAK,MAAL,CAA5B,CADe;KAAX;;;KAAN;AAGA;AAAc,4BAAW;AACvB,aAAO,OAAO,KAAK,SAAL,CAAP,CAAuB,OAAvB,EAAP,CADuB;KAAX;;;KAAd;CAPF","file":"/client/chat.js.map","sourcesContent":["Template.chat_page.helpers({\n  messages:function(){\n    var chat = Chats.findOne({_id:Session.get(\"chatId\")});\n    if (chat) {\n      return chat.messages;\n    } else {\n      return [];\n    }\n  },\n  chatWith: function (){\n    var chat = Chats.findOne({_id:Session.get(\"chatId\")});\n    if (chat) {\n      if (chat.user1Id === Meteor.userId()){\n        return Meteor.users.findOne(chat.user2Id);\n      } else {\n        return Meteor.users.findOne(chat.user1Id);\n      }\n    }\n    return ;\n  }\n})\nTemplate.chat_page.events({\n// this event fires when the user sends a message on the chat page\n'submit .js-send-chat':function(event){\n  // stop the form from triggering a page reload\n  event.preventDefault();\n  Meteor.call(\"sendMessage\",\n    Session.get(\"chatId\"),\n    event.target.chat.value,\n    function(error, result){\n      event.target.chat.value = \"\";\n    }\n  );\n}\n})\n\nTemplate.chat_message.helpers({\n  isOwner: function() {\n    return this.userId === Meteor.userId();\n  },\n  user: function() {\n    return Meteor.users.findOne(this.userId);\n  },\n  formatedDate: function() {\n    return moment(this.createdOn).fromNow();\n  }\n});\n"]},"hash":"4ef25af0c95536ab7b29cb04be57f80f04b71b24"}
