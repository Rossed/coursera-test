{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/lib/methods.js","filenameRelative":"/lib/methods.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/methods.js.map","sourceFileName":"/lib/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"methods"},"ignored":false,"code":"Meteor.methods({\n  \"getChat\": function () {\n    function getChat(otherUserId) {\n      // var otherUserId = this.params._id;\n      // find a chat that has two users that match current user id\n      // and the requested user id\n      if (this.userId) {\n        var filter = { $or: [{ user1Id: this.userId, user2Id: otherUserId }, { user2Id: this.userId, user1Id: otherUserId }] };\n        var chat = Chats.findOne(filter);\n        if (!chat) {\n          // no chat matching the filter - need to insert a new one\n          return Chats.insert({ user1Id: Meteor.userId(), user2Id: otherUserId });\n        } else {\n          // there is a chat going already - use that.\n          return chat._id;\n        }\n      }\n    }\n\n    return getChat;\n  }(),\n  \"sendMessage\": function () {\n    function sendMessage(chatId, message) {\n      if (this.userId) {\n        var chat = Chats.findOne({ _id: chatId });\n        if (chat) {\n          // ok - we have a chat to use\n          var msgs = chat.messages; // pull the messages property\n          if (!msgs) {\n            // no messages yet, create a new array\n            msgs = [];\n          }\n          // is a good idea to insert data straight from the form\n          // (i.e. the user) into the database?? certainly not.\n          // push adds the message to the end of the array\n          msgs.push({\n            text: message,\n            userId: this.userId,\n            createdOn: new Date()\n          });\n          // put the messages array onto the chat object\n          chat.messages = msgs;\n          // update the chat object in the database.\n          Chats.update(chat._id, chat);\n        }\n      }\n    }\n\n    return sendMessage;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/lib/methods.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,CAAe;AACb;AAAW,qBAAU,WAAV,EAAuB;;;;AAIhC,UAAI,KAAK,MAAL,EAAa;AACf,YAAI,SAAS,EAAC,KAAI,CAChB,EAAC,SAAQ,KAAK,MAAL,EAAa,SAAQ,WAAR,EADN,EAEhB,EAAC,SAAQ,KAAK,MAAL,EAAa,SAAQ,WAAR,EAFN,CAAJ,EAAV,CADW;AAKf,YAAI,OAAO,MAAM,OAAN,CAAc,MAAd,CAAP,CALW;AAMf,YAAI,CAAC,IAAD,EAAM;;AACR,iBAAO,MAAM,MAAN,CAAa,EAAC,SAAQ,OAAO,MAAP,EAAR,EAAyB,SAAQ,WAAR,EAAvC,CAAP,CADQ;SAAV,MAGK;;AACH,iBAAO,KAAK,GAAL,CADJ;SAHL;OANF;KAJS;;;KAAX;AAkBA;AAAe,yBAAS,MAAT,EAAiB,OAAjB,EAA0B;AACvC,UAAI,KAAK,MAAL,EAAa;AACf,YAAI,OAAO,MAAM,OAAN,CAAc,EAAC,KAAI,MAAJ,EAAf,CAAP,CADW;AAEf,YAAI,IAAJ,EAAS;;AACP,cAAI,OAAO,KAAK,QAAL;AADJ,cAEH,CAAC,IAAD,EAAM;;AACR,mBAAO,EAAP,CADQ;WAAV;;;;AAFO,cAQP,CAAK,IAAL,CAAU;AACR,kBAAM,OAAN;AACA,oBAAQ,KAAK,MAAL;AACR,uBAAW,IAAI,IAAJ,EAAX;WAHF;;AARO,cAcP,CAAK,QAAL,GAAgB,IAAhB;;AAdO,eAgBP,CAAM,MAAN,CAAa,KAAK,GAAL,EAAU,IAAvB,EAhBO;SAAT;OAFF;KADa;;;KAAf;CAnBF","file":"/lib/methods.js.map","sourcesContent":["Meteor.methods({\n  \"getChat\": function (otherUserId) {\n    // var otherUserId = this.params._id;\n    // find a chat that has two users that match current user id\n    // and the requested user id\n    if (this.userId) {\n      var filter = {$or:[\n        {user1Id:this.userId, user2Id:otherUserId},\n        {user2Id:this.userId, user1Id:otherUserId}\n      ]};\n      var chat = Chats.findOne(filter);\n      if (!chat){// no chat matching the filter - need to insert a new one\n        return Chats.insert({user1Id:Meteor.userId(), user2Id:otherUserId});\n      }\n      else {// there is a chat going already - use that.\n        return chat._id;\n      }\n    }\n  },\n  \"sendMessage\": function(chatId, message) {\n    if (this.userId) {\n      var chat = Chats.findOne({_id:chatId});\n      if (chat){// ok - we have a chat to use\n        var msgs = chat.messages; // pull the messages property\n        if (!msgs){// no messages yet, create a new array\n          msgs = [];\n        }\n        // is a good idea to insert data straight from the form\n        // (i.e. the user) into the database?? certainly not.\n        // push adds the message to the end of the array\n        msgs.push({\n          text: message,\n          userId: this.userId,\n          createdOn: new Date(),\n        });\n        // put the messages array onto the chat object\n        chat.messages = msgs;\n        // update the chat object in the database.\n        Chats.update(chat._id, chat);\n      }\n    }\n  }\n});\n"]},"hash":"4fe120f2fee073571e19a43bf6346237a393a35f"}
