{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"Meteor.subscribe(\"chats\", function () {\n  Session.set('db_data_loaded', true);\n});\nMeteor.subscribe(\"users\");\n\nMeteor.startup(function () {\n  Session.set('db_data_loaded', false);\n  Meteor.subscribe('emojis');\n});\n// set up the main template the the router will use to build pages\nRouter.configure({\n  layoutTemplate: 'ApplicationLayout'\n});\n// specify the top level route, the page users see when they arrive at the site\nRouter.route('/', function () {\n  console.log(\"rendering root /\");\n  this.render(\"navbar\", { to: \"header\" });\n  this.render(\"lobby_page\", { to: \"main\" });\n});\n\n// specify a route that allows the current user to chat to another users\nRouter.route('/chat/:_id', function () {\n  // the user they want to chat to has id equal to\n  // the id sent in after /chat/...\n  if (!Meteor.user()) {\n    alert('Please log in to chat');\n  } else {\n    var otherUserId = this.params._id;\n    // find a chat that has two users that match current user id\n    // and the requested user id\n    var filter = { $or: [{ user1Id: Meteor.userId(), user2Id: otherUserId }, { user2Id: Meteor.userId(), user1Id: otherUserId }] };\n    var chat = Chats.findOne(filter);\n    if (Session.get('db_data_loaded')) {\n      if (!chat) {\n        // no chat matching the filter - need to insert a new one\n        chatId = Meteor.call('insertChat', otherUserId);\n        console.log(\"no chat matching the filter - need to insert a new one\");\n      } else {\n        // there is a chat going already - use that.\n        console.log(\"there is a chat going already - use that.\");\n        chatId = chat._id;\n      }\n      if (chatId) {\n        // looking good, save the id to the session\n        Session.set(\"chatId\", chatId);\n      }\n    }\n    this.render(\"navbar\", { to: \"header\" });\n    this.render(\"chat_page\", { to: \"main\" });\n  }\n});\n\n///\n// helper functions\n///\nTemplate.available_user_list.helpers({\n  users: function () {\n    function users() {\n      return Meteor.users.find();\n    }\n\n    return users;\n  }(),\n  isMyUser: function () {\n    function isMyUser(userId) {\n      if (userId == Meteor.userId()) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    return isMyUser;\n  }(),\n  online: function () {\n    function online(userId) {\n      if (Meteor.users.findOne({ _id: userId }).services.resume && Meteor.users.findOne({ _id: userId }).services.resume.loginTokens.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    return online;\n  }()\n\n});\nTemplate.online_user.helpers({\n  getUsername: function () {\n    function getUsername(userId) {\n      user = Meteor.users.findOne({ _id: userId });\n      return user.profile.username;\n    }\n\n    return getUsername;\n  }()\n});\nTemplate.offline_user.helpers({\n  getUsername: function () {\n    function getUsername(userId) {\n      user = Meteor.users.findOne({ _id: userId });\n      return user.profile.username;\n    }\n\n    return getUsername;\n  }()\n});\n// Template.available_user.helpers({\n//    getUsername:function(userId){\n//      user = Meteor.users.findOne({_id:userId});\n//      return user.profile.username;\n//    },\n//    isMyUser:function(userId){\n//      if (userId == Meteor.userId()){\n//        return true;\n//      }\n//      else {\n//        return false;\n//      }\n//    },\n//    online:function(userId) {\n//    \tif(Meteor.users.findOne({_id:userId}).services.resume &&\n//    \t\tMeteor.users.findOne({_id:userId}).services.resume.loginTokens.length > 0) {\n//    \t\treturn true;\n//    \t} else {\n//    \t\treturn false\n//    \t}\n//    }\n//  })\nTemplate.chat_page.helpers({\n  messages: function () {\n    function messages() {\n      var chat = Chats.findOne({ _id: Session.get(\"chatId\") });\n      return chat.messages;\n    }\n\n    return messages;\n  }(),\n  other_user: function () {\n    function other_user() {\n      var chat = Chats.findOne({ _id: Session.get(\"chatId\") });\n      console.log(chat.user1Id);\n      if (Meteor.userId() == chat.user1Id) {\n        var username = Meteor.users.findOne({ _id: chat.user2Id }).profile.username;\n        return username;\n      } else {\n        var username = Meteor.users.findOne({ _id: chat.user1Id }).profile.username;\n        return username;\n      }\n    }\n\n    return other_user;\n  }(),\n  getEmoji: function () {\n    function getEmoji(emoji) {\n      return Emojis.findOne({ alias: emoji }).emoji;\n    }\n\n    return getEmoji;\n  }()\n});\nTemplate.chat_message.helpers({\n  display_pic: function () {\n    function display_pic() {\n      return this.sender.profile.avatar;\n    }\n\n    return display_pic;\n  }(),\n  message_sender: function () {\n    function message_sender() {\n      if (this.sender._id == Meteor.user()._id) {\n        return \"floatMeRight\";\n      } else {\n        return;\n      };\n    }\n\n    return message_sender;\n  }()\n});\n\n///\n// event helpers\n///\n\nTemplate.chat_page.events({\n  // this event fires when the user sends a message on the chat page\n  'submit .js-send-chat': function () {\n    function submitJsSendChat(event) {\n      // stop the form from triggering a page reload\n      event.preventDefault();\n      // see if we can find a chat object in the database\n      // to which we'll add the message\n      var chat = Chats.findOne({ _id: Session.get(\"chatId\") });\n      if (chat) {\n        // ok - we have a chat to use\n        var msgs = chat.messages; // pull the messages property\n        if (!msgs) {\n          // no messages yet, create a new array\n          msgs = [];\n        }\n        // is a good idea to insert data straight from the form\n        // (i.e. the user) into the database?? certainly not.\n        // push adds the message to the end of the array\n        msgs.push({\n          sender: Meteor.user(),\n          text: event.target.chat.value\n        });\n        // reset the form\n        // document.querySelector('[contenteditable]').textContent = \"\";\n        event.target.chat.value = \"\";\n        // put the messages array onto the chat object\n        chat.messages = msgs;\n        // update the chat object in the database.\n        // Chats.update(chat._id, chat);\n        Meteor.call('updateChat', chat);\n      }\n    }\n\n    return submitJsSendChat;\n  }(),\n  'click .js-insert-emoticon': function () {\n    function clickJsInsertEmoticon(event) {\n      $('#message_input').val($('#message_input').val() + event.target.textContent);\n    }\n\n    return clickJsInsertEmoticon;\n  }()\n});\n\n///\n// onRendered\n///\n\nTemplate.online_user.onRendered(function () {\n  $(\".display_username\").hover(function () {\n    $(this.firstChild.nextElementSibling.children[1]).css(\"display\", \"unset\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-left-radius\", \"0px\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-right-radius\", \"0px\");\n  }, function () {\n    $(this.firstChild.nextElementSibling.children[1]).css(\"display\", \"none\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-left-radius\", \"4px\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-right-radius\", \"4px\");\n  });\n});\nTemplate.offline_user.onRendered(function () {\n  $(\".display_username\").hover(function () {\n    $(this.firstChild.nextElementSibling.children[1]).css(\"display\", \"unset\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-left-radius\", \"0px\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-right-radius\", \"0px\");\n  }, function () {\n    $(this.firstChild.nextElementSibling.children[1]).css(\"display\", \"none\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-left-radius\", \"4px\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-right-radius\", \"4px\");\n  });\n});\n\nAccounts.ui.config({\n  requestPermissions: {},\n  extraSignupFields: [{\n    fieldName: 'username',\n    fieldLabel: 'Username',\n    inputType: 'text',\n    visible: true,\n    validate: function () {\n      function validate(value, errorFunction) {\n        if (!value) {\n          errorFunction(\"Please enter a username\");\n          return false;\n        } else if (value.length >= 9) {\n          errorFunction(\"Please enter a username of 8 characters or less\");\n        } else {\n          return true;\n        }\n      }\n\n      return validate;\n    }()\n  }, {\n    fieldName: 'gender',\n    showFieldLabel: false, // If true, fieldLabel will be shown before radio group\n    fieldLabel: 'Gender',\n    inputType: 'radio',\n    radioLayout: 'vertical', // It can be 'inline' or 'vertical'\n    data: [{ // Array of radio options, all properties are required\n      id: 1, // id suffix of the radio element\n      label: 'Male', // label for the radio element\n      value: 'm' // value of the radio element, this will be saved.\n    }, {\n      id: 2,\n      label: 'Female',\n      value: 'f',\n      checked: 'checked'\n    }],\n    visible: true\n  }, {\n    fieldName: 'avatar',\n    showFieldLabel: false, // If true, fieldLabel will be shown before radio group\n    fieldLabel: 'Avatar',\n    inputType: 'text',\n    visible: false\n  }, {\n    fieldName: 'terms',\n    fieldLabel: 'I accept the terms and conditions',\n    inputType: 'checkbox',\n    visible: true,\n    saveToProfile: false,\n    validate: function () {\n      function validate(value, errorFunction) {\n        if (value) {\n          return true;\n        } else {\n          errorFunction('You must accept the terms and conditions.');\n          return false;\n        }\n      }\n\n      return validate;\n    }()\n  }]\n});","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":"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","file":"/client/main.js.map","sourcesContent":["Meteor.subscribe(\"chats\", function() {\n  \tSession.set('db_data_loaded', true);\n  });\nMeteor.subscribe(\"users\");\n\nMeteor.startup(function () {\n\tSession.set('db_data_loaded', false);\n  Meteor.subscribe('emojis');\n});\n// set up the main template the the router will use to build pages\nRouter.configure({\n  layoutTemplate: 'ApplicationLayout'\n});\n// specify the top level route, the page users see when they arrive at the site\nRouter.route('/', function () {\n  console.log(\"rendering root /\");\n  this.render(\"navbar\", {to:\"header\"});\n  this.render(\"lobby_page\", {to:\"main\"});  \n});\n\n// specify a route that allows the current user to chat to another users\nRouter.route('/chat/:_id', function () {\n  // the user they want to chat to has id equal to \n  // the id sent in after /chat/... \n  if (!Meteor.user()) {\n    alert('Please log in to chat');\n  } else {\n    var otherUserId = this.params._id;\n    // find a chat that has two users that match current user id\n    // and the requested user id\n    var filter = {$or:[\n                {user1Id:Meteor.userId(), user2Id:otherUserId}, \n                {user2Id:Meteor.userId(), user1Id:otherUserId}\n                ]};\n    var chat = Chats.findOne(filter);\n    if (Session.get('db_data_loaded')) {\n      if (!chat){// no chat matching the filter - need to insert a new one\n        chatId = Meteor.call('insertChat', otherUserId);\n        console.log(\"no chat matching the filter - need to insert a new one\");\n      }\n      else {// there is a chat going already - use that. \n        console.log(\"there is a chat going already - use that.\");\n        chatId = chat._id;\n      }\n      if (chatId){// looking good, save the id to the session\n        Session.set(\"chatId\",chatId);\n      }\n    }\n      this.render(\"navbar\", {to:\"header\"});\n      this.render(\"chat_page\", {to:\"main\"}); \n    }\n });\n\n///\n// helper functions \n/// \nTemplate.available_user_list.helpers({\n  users:function(){\n    return Meteor.users.find();\n  },\n  isMyUser:function(userId){\n    if (userId == Meteor.userId()){\n      return true;\n    }\n    else {\n      return false;\n    }\n  },\n  online:function(userId) {\n  \tif(Meteor.users.findOne({_id:userId}).services.resume &&\n  \t\tMeteor.users.findOne({_id:userId}).services.resume.loginTokens.length > 0) {\n  \t\treturn true;\n  \t} else {\n  \t\treturn false\n  \t}\n  }\n\n})\nTemplate.online_user.helpers({\n\tgetUsername:function(userId){\n    user = Meteor.users.findOne({_id:userId});\n    return user.profile.username;\n  }, \n})\nTemplate.offline_user.helpers({\n\tgetUsername:function(userId){\n    user = Meteor.users.findOne({_id:userId});\n    return user.profile.username;\n  }, \n})\n// Template.available_user.helpers({\n//    getUsername:function(userId){\n//      user = Meteor.users.findOne({_id:userId});\n//      return user.profile.username;\n//    }, \n//    isMyUser:function(userId){\n//      if (userId == Meteor.userId()){\n//        return true;\n//      }\n//      else {\n//        return false;\n//      }\n//    },\n//    online:function(userId) {\n//    \tif(Meteor.users.findOne({_id:userId}).services.resume &&\n//    \t\tMeteor.users.findOne({_id:userId}).services.resume.loginTokens.length > 0) {\n//    \t\treturn true;\n//    \t} else {\n//    \t\treturn false\n//    \t}\n//    }\n//  })\nTemplate.chat_page.helpers({\n  messages:function(){\n    var chat = Chats.findOne({_id:Session.get(\"chatId\")});\n    return chat.messages;\n  }, \n  other_user:function(){\n  \tvar chat = Chats.findOne({_id:Session.get(\"chatId\")})\n    console.log(chat.user1Id);\n  \tif (Meteor.userId() == chat.user1Id) {\n  \t\tvar username = Meteor.users.findOne({_id:chat.user2Id}).profile.username;\n  \t\treturn username;\n  \t} else {\n  \t\tvar username = Meteor.users.findOne({_id:chat.user1Id}).profile.username;\n  \t\treturn username;\n  \t}\n  }, \n  getEmoji:function(emoji) {\n    return Emojis.findOne({alias: emoji}).emoji;\n  }\n})\nTemplate.chat_message.helpers({\n\tdisplay_pic: function() {\n\t\treturn this.sender.profile.avatar;\n\t},\n\tmessage_sender:function() {\n\t\tif (this.sender._id == Meteor.user()._id) {\n\t\t\treturn \"floatMeRight\";\n\t\t} else {\n\t\t\treturn;\n\t\t};\n\t}\n})\n\n///\n// event helpers\n///\n\nTemplate.chat_page.events({\n// this event fires when the user sends a message on the chat page\n'submit .js-send-chat':function(event){\n  // stop the form from triggering a page reload\n  event.preventDefault();\n  // see if we can find a chat object in the database\n  // to which we'll add the message\n  var chat = Chats.findOne({_id:Session.get(\"chatId\")});\n  if (chat){// ok - we have a chat to use\n    var msgs = chat.messages; // pull the messages property\n    if (!msgs){// no messages yet, create a new array\n      msgs = [];\n    }\n    // is a good idea to insert data straight from the form\n    // (i.e. the user) into the database?? certainly not. \n    // push adds the message to the end of the array\n    msgs.push({\n    \tsender: Meteor.user(),\n    \ttext: event.target.chat.value,\n\t });\n    // reset the form\n    // document.querySelector('[contenteditable]').textContent = \"\";\n    event.target.chat.value = \"\";\n    // put the messages array onto the chat object\n    chat.messages = msgs;\n    // update the chat object in the database.\n    // Chats.update(chat._id, chat);\n    Meteor.call('updateChat', chat)     \n  }\n},\n'click .js-insert-emoticon':function(event) {\n  $('#message_input').val($('#message_input').val() + event.target.textContent);\n\n}\n})\n\n///\n// onRendered\n///\n\nTemplate.online_user.onRendered(function () {\n$( \".display_username\" ).hover(\n  function() {\n    $(this.firstChild.nextElementSibling.children[1]).css(\"display\", \"unset\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-left-radius\", \"0px\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-right-radius\", \"0px\");\n  }, function() {\n    $(this.firstChild.nextElementSibling.children[1]).css(\"display\", \"none\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-left-radius\", \"4px\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-right-radius\", \"4px\");\n  }\n);\n});\nTemplate.offline_user.onRendered(function () {\n$( \".display_username\" ).hover(\n  function() {\n    $(this.firstChild.nextElementSibling.children[1]).css(\"display\", \"unset\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-left-radius\", \"0px\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-right-radius\", \"0px\");\n  }, function() {\n    $(this.firstChild.nextElementSibling.children[1]).css(\"display\", \"none\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-left-radius\", \"4px\");\n    $(this.firstChild.nextElementSibling.children[0]).css(\"border-bottom-right-radius\", \"4px\");\n  }\n);\n});\n\nAccounts.ui.config({\n  requestPermissions: {},\n  extraSignupFields: [{\n      fieldName: 'username',\n      fieldLabel: 'Username',\n      inputType: 'text',\n      visible: true,\n      validate: function(value, errorFunction) {\n        if (!value) {\n          errorFunction(\"Please enter a username\");\n          return false;\n        } else if(value.length >= 9) {\n          errorFunction(\"Please enter a username of 8 characters or less\");\n        } else {\n          return true;\n        }\n      }\n  }, {\n      fieldName: 'gender',\n      showFieldLabel: false,      // If true, fieldLabel will be shown before radio group\n      fieldLabel: 'Gender',\n      inputType: 'radio',\n      radioLayout: 'vertical',    // It can be 'inline' or 'vertical'\n      data: [{                    // Array of radio options, all properties are required\n          id: 1,                  // id suffix of the radio element\n          label: 'Male',          // label for the radio element\n          value: 'm'              // value of the radio element, this will be saved.\n        }, {\n          id: 2,\n          label: 'Female',\n          value: 'f',\n          checked: 'checked'\n      }],\n      visible: true\n  }, {\n      fieldName: 'avatar',\n      showFieldLabel: false,      // If true, fieldLabel will be shown before radio group\n      fieldLabel: 'Avatar',\n      inputType: 'text',\n      visible: false\n  }, {\n      fieldName: 'terms',\n      fieldLabel: 'I accept the terms and conditions',\n      inputType: 'checkbox',\n      visible: true,\n      saveToProfile: false,\n      validate: function(value, errorFunction) {\n          if (value) {\n              return true;\n          } else {\n              errorFunction('You must accept the terms and conditions.');\n              return false;\n          }\n      }\n  }]\n});\n\n\n\n\n\n\n\n"]},"hash":"7c9605c8e7280121c780566f3ad382246461305a"}
