[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar Template = Package.templating.Template;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar __coffeescriptShare, ShareJSConnector;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/mizzao_sharejs/.npm/package/node_modules/share/node_modules/browserchannel/dist/bcsocket-uncompressed.js //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n(function(){                                                                                                         // 1\nvar f, aa = aa || {}, l = this;                                                                                      // 2\nfunction ba(a) {                                                                                                     // 3\n  a = a.split(\".\");                                                                                                  // 4\n  for (var b = l, c;c = a.shift();) {                                                                                // 5\n    if (null != b[c]) {                                                                                              // 6\n      b = b[c];                                                                                                      // 7\n    } else {                                                                                                         // 8\n      return null;                                                                                                   // 9\n    }                                                                                                                // 10\n  }                                                                                                                  // 11\n  return b;                                                                                                          // 12\n}                                                                                                                    // 13\nfunction ca() {                                                                                                      // 14\n}                                                                                                                    // 15\nfunction da(a) {                                                                                                     // 16\n  var b = typeof a;                                                                                                  // 17\n  if (\"object\" == b) {                                                                                               // 18\n    if (a) {                                                                                                         // 19\n      if (a instanceof Array) {                                                                                      // 20\n        return \"array\";                                                                                              // 21\n      }                                                                                                              // 22\n      if (a instanceof Object) {                                                                                     // 23\n        return b;                                                                                                    // 24\n      }                                                                                                              // 25\n      var c = Object.prototype.toString.call(a);                                                                     // 26\n      if (\"[object Window]\" == c) {                                                                                  // 27\n        return \"object\";                                                                                             // 28\n      }                                                                                                              // 29\n      if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\")) {\n        return \"array\";                                                                                              // 31\n      }                                                                                                              // 32\n      if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\")) {\n        return \"function\";                                                                                           // 34\n      }                                                                                                              // 35\n    } else {                                                                                                         // 36\n      return \"null\";                                                                                                 // 37\n    }                                                                                                                // 38\n  } else {                                                                                                           // 39\n    if (\"function\" == b && \"undefined\" == typeof a.call) {                                                           // 40\n      return \"object\";                                                                                               // 41\n    }                                                                                                                // 42\n  }                                                                                                                  // 43\n  return b;                                                                                                          // 44\n}                                                                                                                    // 45\nfunction m(a) {                                                                                                      // 46\n  return \"array\" == da(a);                                                                                           // 47\n}                                                                                                                    // 48\nfunction ea(a) {                                                                                                     // 49\n  var b = da(a);                                                                                                     // 50\n  return \"array\" == b || \"object\" == b && \"number\" == typeof a.length;                                               // 51\n}                                                                                                                    // 52\nfunction n(a) {                                                                                                      // 53\n  return \"string\" == typeof a;                                                                                       // 54\n}                                                                                                                    // 55\nfunction fa(a) {                                                                                                     // 56\n  return \"function\" == da(a);                                                                                        // 57\n}                                                                                                                    // 58\nvar ga = \"closure_uid_\" + (1E9 * Math.random() >>> 0), ha = 0;                                                       // 59\nfunction ia(a, b, c) {                                                                                               // 60\n  return a.call.apply(a.bind, arguments);                                                                            // 61\n}                                                                                                                    // 62\nfunction ja(a, b, c) {                                                                                               // 63\n  if (!a) {                                                                                                          // 64\n    throw Error();                                                                                                   // 65\n  }                                                                                                                  // 66\n  if (2 < arguments.length) {                                                                                        // 67\n    var d = Array.prototype.slice.call(arguments, 2);                                                                // 68\n    return function() {                                                                                              // 69\n      var c = Array.prototype.slice.call(arguments);                                                                 // 70\n      Array.prototype.unshift.apply(c, d);                                                                           // 71\n      return a.apply(b, c);                                                                                          // 72\n    };                                                                                                               // 73\n  }                                                                                                                  // 74\n  return function() {                                                                                                // 75\n    return a.apply(b, arguments);                                                                                    // 76\n  };                                                                                                                 // 77\n}                                                                                                                    // 78\nfunction p(a, b, c) {                                                                                                // 79\n  p = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? ia : ja;          // 80\n  return p.apply(null, arguments);                                                                                   // 81\n}                                                                                                                    // 82\nvar q = Date.now || function() {                                                                                     // 83\n  return+new Date;                                                                                                   // 84\n};                                                                                                                   // 85\nfunction s(a, b) {                                                                                                   // 86\n  function c() {                                                                                                     // 87\n  }                                                                                                                  // 88\n  c.prototype = b.prototype;                                                                                         // 89\n  a.oa = b.prototype;                                                                                                // 90\n  a.prototype = new c;                                                                                               // 91\n  a.ic = function(a, c, g) {                                                                                         // 92\n    var h = Array.prototype.slice.call(arguments, 2);                                                                // 93\n    b.prototype[c].apply(a, h);                                                                                      // 94\n  };                                                                                                                 // 95\n}                                                                                                                    // 96\n;function ka(a, b) {                                                                                                 // 97\n  for (var c = a.split(\"%s\"), d = \"\", e = Array.prototype.slice.call(arguments, 1);e.length && 1 < c.length;) {      // 98\n    d += c.shift() + e.shift();                                                                                      // 99\n  }                                                                                                                  // 100\n  return d + c.join(\"%s\");                                                                                           // 101\n}                                                                                                                    // 102\nfunction la(a) {                                                                                                     // 103\n  if (!ma.test(a)) {                                                                                                 // 104\n    return a;                                                                                                        // 105\n  }                                                                                                                  // 106\n  -1 != a.indexOf(\"&\") && (a = a.replace(na, \"&amp;\"));                                                              // 107\n  -1 != a.indexOf(\"<\") && (a = a.replace(oa, \"&lt;\"));                                                               // 108\n  -1 != a.indexOf(\">\") && (a = a.replace(pa, \"&gt;\"));                                                               // 109\n  -1 != a.indexOf('\"') && (a = a.replace(qa, \"&quot;\"));                                                             // 110\n  -1 != a.indexOf(\"'\") && (a = a.replace(ra, \"&#39;\"));                                                              // 111\n  return a;                                                                                                          // 112\n}                                                                                                                    // 113\nvar na = /&/g, oa = /</g, pa = />/g, qa = /\"/g, ra = /'/g, ma = /[&<>\"']/;                                           // 114\nfunction sa() {                                                                                                      // 115\n  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ q()).toString(36);\n}                                                                                                                    // 117\nfunction ta(a, b) {                                                                                                  // 118\n  return a < b ? -1 : a > b ? 1 : 0;                                                                                 // 119\n}                                                                                                                    // 120\n;var x, ua, va, wa;                                                                                                  // 121\nfunction xa() {                                                                                                      // 122\n  return l.navigator ? l.navigator.userAgent : null;                                                                 // 123\n}                                                                                                                    // 124\nwa = va = ua = x = !1;                                                                                               // 125\nvar ya;                                                                                                              // 126\nif (ya = xa()) {                                                                                                     // 127\n  var za = l.navigator;                                                                                              // 128\n  x = 0 == ya.lastIndexOf(\"Opera\", 0);                                                                               // 129\n  ua = !x && (-1 != ya.indexOf(\"MSIE\") || -1 != ya.indexOf(\"Trident\"));                                              // 130\n  va = !x && -1 != ya.indexOf(\"WebKit\");                                                                             // 131\n  wa = !x && !va && !ua && \"Gecko\" == za.product;                                                                    // 132\n}                                                                                                                    // 133\nvar Aa = x, y = ua, Ba = wa, z = va;                                                                                 // 134\nfunction Ca() {                                                                                                      // 135\n  var a = l.document;                                                                                                // 136\n  return a ? a.documentMode : void 0;                                                                                // 137\n}                                                                                                                    // 138\nvar Da;                                                                                                              // 139\na: {                                                                                                                 // 140\n  var Ea = \"\", Fa;                                                                                                   // 141\n  if (Aa && l.opera) {                                                                                               // 142\n    var Ga = l.opera.version, Ea = \"function\" == typeof Ga ? Ga() : Ga                                               // 143\n  } else {                                                                                                           // 144\n    if (Ba ? Fa = /rv\\:([^\\);]+)(\\)|;)/ : y ? Fa = /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/ : z && (Fa = /WebKit\\/(\\S+)/), Fa) {\n      var Ha = Fa.exec(xa()), Ea = Ha ? Ha[1] : \"\"                                                                   // 146\n    }                                                                                                                // 147\n  }                                                                                                                  // 148\n  if (y) {                                                                                                           // 149\n    var Ja = Ca();                                                                                                   // 150\n    if (Ja > parseFloat(Ea)) {                                                                                       // 151\n      Da = String(Ja);                                                                                               // 152\n      break a;                                                                                                       // 153\n    }                                                                                                                // 154\n  }                                                                                                                  // 155\n  Da = Ea;                                                                                                           // 156\n}                                                                                                                    // 157\nvar Ka = {};                                                                                                         // 158\nfunction A(a) {                                                                                                      // 159\n  var b;                                                                                                             // 160\n  if (!(b = Ka[a])) {                                                                                                // 161\n    b = 0;                                                                                                           // 162\n    for (var c = String(Da).replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\").split(\".\"), d = String(a).replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\").split(\".\"), e = Math.max(c.length, d.length), g = 0;0 == b && g < e;g++) {\n      var h = c[g] || \"\", k = d[g] || \"\", u = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\"), K = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\");          // 164\n      do {                                                                                                           // 165\n        var v = u.exec(h) || [\"\", \"\", \"\"], r = K.exec(k) || [\"\", \"\", \"\"];                                            // 166\n        if (0 == v[0].length && 0 == r[0].length) {                                                                  // 167\n          break;                                                                                                     // 168\n        }                                                                                                            // 169\n        b = ta(0 == v[1].length ? 0 : parseInt(v[1], 10), 0 == r[1].length ? 0 : parseInt(r[1], 10)) || ta(0 == v[2].length, 0 == r[2].length) || ta(v[2], r[2]);\n      } while (0 == b);                                                                                              // 171\n    }                                                                                                                // 172\n    b = Ka[a] = 0 <= b;                                                                                              // 173\n  }                                                                                                                  // 174\n  return b;                                                                                                          // 175\n}                                                                                                                    // 176\nvar La = l.document, Ma = La && y ? Ca() || (\"CSS1Compat\" == La.compatMode ? parseInt(Da, 10) : 5) : void 0;         // 177\nfunction Na(a) {                                                                                                     // 178\n  if (Error.captureStackTrace) {                                                                                     // 179\n    Error.captureStackTrace(this, Na);                                                                               // 180\n  } else {                                                                                                           // 181\n    var b = Error().stack;                                                                                           // 182\n    b && (this.stack = b);                                                                                           // 183\n  }                                                                                                                  // 184\n  a && (this.message = String(a));                                                                                   // 185\n}                                                                                                                    // 186\ns(Na, Error);                                                                                                        // 187\nNa.prototype.name = \"CustomError\";                                                                                   // 188\nfunction Oa(a, b) {                                                                                                  // 189\n  b.unshift(a);                                                                                                      // 190\n  Na.call(this, ka.apply(null, b));                                                                                  // 191\n  b.shift();                                                                                                         // 192\n}                                                                                                                    // 193\ns(Oa, Na);                                                                                                           // 194\nOa.prototype.name = \"AssertionError\";                                                                                // 195\nfunction Pa(a, b) {                                                                                                  // 196\n  throw new Oa(\"Failure\" + (a ? \": \" + a : \"\"), Array.prototype.slice.call(arguments, 1));                           // 197\n}                                                                                                                    // 198\n;var Qa = RegExp(\"^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\\\?([^#]*))?(?:#(.*))?$\");\nfunction Ra(a) {                                                                                                     // 200\n  if (Sa) {                                                                                                          // 201\n    Sa = !1;                                                                                                         // 202\n    var b = l.location;                                                                                              // 203\n    if (b) {                                                                                                         // 204\n      var c = b.href;                                                                                                // 205\n      if (c && (c = (c = Ra(c)[3] || null) && decodeURIComponent(c)) && c != b.hostname) {                           // 206\n        throw Sa = !0, Error();                                                                                      // 207\n      }                                                                                                              // 208\n    }                                                                                                                // 209\n  }                                                                                                                  // 210\n  return a.match(Qa);                                                                                                // 211\n}                                                                                                                    // 212\nvar Sa = z;                                                                                                          // 213\nfunction Ta(a) {                                                                                                     // 214\n  var b = [], c = 0, d;                                                                                              // 215\n  for (d in a) {                                                                                                     // 216\n    b[c++] = a[d];                                                                                                   // 217\n  }                                                                                                                  // 218\n  return b;                                                                                                          // 219\n}                                                                                                                    // 220\nfunction Ua(a) {                                                                                                     // 221\n  var b = [], c = 0, d;                                                                                              // 222\n  for (d in a) {                                                                                                     // 223\n    b[c++] = d;                                                                                                      // 224\n  }                                                                                                                  // 225\n  return b;                                                                                                          // 226\n}                                                                                                                    // 227\nvar Va = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\nfunction Wa(a, b) {                                                                                                  // 229\n  for (var c, d, e = 1;e < arguments.length;e++) {                                                                   // 230\n    d = arguments[e];                                                                                                // 231\n    for (c in d) {                                                                                                   // 232\n      a[c] = d[c];                                                                                                   // 233\n    }                                                                                                                // 234\n    for (var g = 0;g < Va.length;g++) {                                                                              // 235\n      c = Va[g], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);                                        // 236\n    }                                                                                                                // 237\n  }                                                                                                                  // 238\n}                                                                                                                    // 239\n;var B = Array.prototype, Xa = B.indexOf ? function(a, b, c) {                                                       // 240\n  return B.indexOf.call(a, b, c);                                                                                    // 241\n} : function(a, b, c) {                                                                                              // 242\n  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;                                                         // 243\n  if (n(a)) {                                                                                                        // 244\n    return n(b) && 1 == b.length ? a.indexOf(b, c) : -1;                                                             // 245\n  }                                                                                                                  // 246\n  for (;c < a.length;c++) {                                                                                          // 247\n    if (c in a && a[c] === b) {                                                                                      // 248\n      return c;                                                                                                      // 249\n    }                                                                                                                // 250\n  }                                                                                                                  // 251\n  return-1;                                                                                                          // 252\n}, Ya = B.forEach ? function(a, b, c) {                                                                              // 253\n  B.forEach.call(a, b, c);                                                                                           // 254\n} : function(a, b, c) {                                                                                              // 255\n  for (var d = a.length, e = n(a) ? a.split(\"\") : a, g = 0;g < d;g++) {                                              // 256\n    g in e && b.call(c, e[g], g, a);                                                                                 // 257\n  }                                                                                                                  // 258\n};                                                                                                                   // 259\nfunction Za(a) {                                                                                                     // 260\n  var b;                                                                                                             // 261\n  a: {                                                                                                               // 262\n    b = $a;                                                                                                          // 263\n    for (var c = a.length, d = n(a) ? a.split(\"\") : a, e = 0;e < c;e++) {                                            // 264\n      if (e in d && b.call(void 0, d[e], e, a)) {                                                                    // 265\n        b = e;                                                                                                       // 266\n        break a;                                                                                                     // 267\n      }                                                                                                              // 268\n    }                                                                                                                // 269\n    b = -1;                                                                                                          // 270\n  }                                                                                                                  // 271\n  return 0 > b ? null : n(a) ? a.charAt(b) : a[b];                                                                   // 272\n}                                                                                                                    // 273\nfunction ab(a) {                                                                                                     // 274\n  return B.concat.apply(B, arguments);                                                                               // 275\n}                                                                                                                    // 276\nfunction bb(a) {                                                                                                     // 277\n  var b = a.length;                                                                                                  // 278\n  if (0 < b) {                                                                                                       // 279\n    for (var c = Array(b), d = 0;d < b;d++) {                                                                        // 280\n      c[d] = a[d];                                                                                                   // 281\n    }                                                                                                                // 282\n    return c;                                                                                                        // 283\n  }                                                                                                                  // 284\n  return[];                                                                                                          // 285\n}                                                                                                                    // 286\n;function cb(a, b) {                                                                                                 // 287\n  this.O = {};                                                                                                       // 288\n  this.j = [];                                                                                                       // 289\n  this.o = 0;                                                                                                        // 290\n  var c = arguments.length;                                                                                          // 291\n  if (1 < c) {                                                                                                       // 292\n    if (c % 2) {                                                                                                     // 293\n      throw Error(\"Uneven number of arguments\");                                                                     // 294\n    }                                                                                                                // 295\n    for (var d = 0;d < c;d += 2) {                                                                                   // 296\n      this.set(arguments[d], arguments[d + 1]);                                                                      // 297\n    }                                                                                                                // 298\n  } else {                                                                                                           // 299\n    if (a) {                                                                                                         // 300\n      a instanceof cb ? (c = a.ba(), d = a.N()) : (c = Ua(a), d = Ta(a));                                            // 301\n      for (var e = 0;e < c.length;e++) {                                                                             // 302\n        this.set(c[e], d[e]);                                                                                        // 303\n      }                                                                                                              // 304\n    }                                                                                                                // 305\n  }                                                                                                                  // 306\n}                                                                                                                    // 307\nf = cb.prototype;                                                                                                    // 308\nf.N = function() {                                                                                                   // 309\n  db(this);                                                                                                          // 310\n  for (var a = [], b = 0;b < this.j.length;b++) {                                                                    // 311\n    a.push(this.O[this.j[b]]);                                                                                       // 312\n  }                                                                                                                  // 313\n  return a;                                                                                                          // 314\n};                                                                                                                   // 315\nf.ba = function() {                                                                                                  // 316\n  db(this);                                                                                                          // 317\n  return this.j.concat();                                                                                            // 318\n};                                                                                                                   // 319\nf.va = function(a) {                                                                                                 // 320\n  return C(this.O, a);                                                                                               // 321\n};                                                                                                                   // 322\nf.remove = function(a) {                                                                                             // 323\n  return C(this.O, a) ? (delete this.O[a], this.o--, this.j.length > 2 * this.o && db(this), !0) : !1;               // 324\n};                                                                                                                   // 325\nfunction db(a) {                                                                                                     // 326\n  if (a.o != a.j.length) {                                                                                           // 327\n    for (var b = 0, c = 0;b < a.j.length;) {                                                                         // 328\n      var d = a.j[b];                                                                                                // 329\n      C(a.O, d) && (a.j[c++] = d);                                                                                   // 330\n      b++;                                                                                                           // 331\n    }                                                                                                                // 332\n    a.j.length = c;                                                                                                  // 333\n  }                                                                                                                  // 334\n  if (a.o != a.j.length) {                                                                                           // 335\n    for (var e = {}, c = b = 0;b < a.j.length;) {                                                                    // 336\n      d = a.j[b], C(e, d) || (a.j[c++] = d, e[d] = 1), b++;                                                          // 337\n    }                                                                                                                // 338\n    a.j.length = c;                                                                                                  // 339\n  }                                                                                                                  // 340\n}                                                                                                                    // 341\nf.get = function(a, b) {                                                                                             // 342\n  return C(this.O, a) ? this.O[a] : b;                                                                               // 343\n};                                                                                                                   // 344\nf.set = function(a, b) {                                                                                             // 345\n  C(this.O, a) || (this.o++, this.j.push(a));                                                                        // 346\n  this.O[a] = b;                                                                                                     // 347\n};                                                                                                                   // 348\nf.n = function() {                                                                                                   // 349\n  return new cb(this);                                                                                               // 350\n};                                                                                                                   // 351\nfunction C(a, b) {                                                                                                   // 352\n  return Object.prototype.hasOwnProperty.call(a, b);                                                                 // 353\n}                                                                                                                    // 354\n;function eb(a) {                                                                                                    // 355\n  if (\"function\" == typeof a.N) {                                                                                    // 356\n    return a.N();                                                                                                    // 357\n  }                                                                                                                  // 358\n  if (n(a)) {                                                                                                        // 359\n    return a.split(\"\");                                                                                              // 360\n  }                                                                                                                  // 361\n  if (ea(a)) {                                                                                                       // 362\n    for (var b = [], c = a.length, d = 0;d < c;d++) {                                                                // 363\n      b.push(a[d]);                                                                                                  // 364\n    }                                                                                                                // 365\n    return b;                                                                                                        // 366\n  }                                                                                                                  // 367\n  return Ta(a);                                                                                                      // 368\n}                                                                                                                    // 369\nfunction fb(a, b, c) {                                                                                               // 370\n  if (\"function\" == typeof a.forEach) {                                                                              // 371\n    a.forEach(b, c);                                                                                                 // 372\n  } else {                                                                                                           // 373\n    if (ea(a) || n(a)) {                                                                                             // 374\n      Ya(a, b, c);                                                                                                   // 375\n    } else {                                                                                                         // 376\n      var d;                                                                                                         // 377\n      if (\"function\" == typeof a.ba) {                                                                               // 378\n        d = a.ba();                                                                                                  // 379\n      } else {                                                                                                       // 380\n        if (\"function\" != typeof a.N) {                                                                              // 381\n          if (ea(a) || n(a)) {                                                                                       // 382\n            d = [];                                                                                                  // 383\n            for (var e = a.length, g = 0;g < e;g++) {                                                                // 384\n              d.push(g);                                                                                             // 385\n            }                                                                                                        // 386\n          } else {                                                                                                   // 387\n            d = Ua(a);                                                                                               // 388\n          }                                                                                                          // 389\n        } else {                                                                                                     // 390\n          d = void 0;                                                                                                // 391\n        }                                                                                                            // 392\n      }                                                                                                              // 393\n      for (var e = eb(a), g = e.length, h = 0;h < g;h++) {                                                           // 394\n        b.call(c, e[h], d && d[h], a);                                                                               // 395\n      }                                                                                                              // 396\n    }                                                                                                                // 397\n  }                                                                                                                  // 398\n}                                                                                                                    // 399\n;function D(a, b) {                                                                                                  // 400\n  var c;                                                                                                             // 401\n  if (a instanceof D) {                                                                                              // 402\n    this.D = void 0 !== b ? b : a.D, gb(this, a.na), c = a.eb, E(this), this.eb = c, hb(this, a.ia), ib(this, a.Ca), jb(this, a.I), kb(this, a.R.n()), c = a.Na, E(this), this.Na = c;\n  } else {                                                                                                           // 404\n    if (a && (c = Ra(String(a)))) {                                                                                  // 405\n      this.D = !!b;                                                                                                  // 406\n      gb(this, c[1] || \"\", !0);                                                                                      // 407\n      var d = c[2] || \"\";                                                                                            // 408\n      E(this);                                                                                                       // 409\n      this.eb = d ? decodeURIComponent(d) : \"\";                                                                      // 410\n      hb(this, c[3] || \"\", !0);                                                                                      // 411\n      ib(this, c[4]);                                                                                                // 412\n      jb(this, c[5] || \"\", !0);                                                                                      // 413\n      kb(this, c[6] || \"\", !0);                                                                                      // 414\n      c = c[7] || \"\";                                                                                                // 415\n      E(this);                                                                                                       // 416\n      this.Na = c ? decodeURIComponent(c) : \"\";                                                                      // 417\n    } else {                                                                                                         // 418\n      this.D = !!b, this.R = new lb(null, 0, this.D);                                                                // 419\n    }                                                                                                                // 420\n  }                                                                                                                  // 421\n}                                                                                                                    // 422\nf = D.prototype;                                                                                                     // 423\nf.na = \"\";                                                                                                           // 424\nf.eb = \"\";                                                                                                           // 425\nf.ia = \"\";                                                                                                           // 426\nf.Ca = null;                                                                                                         // 427\nf.I = \"\";                                                                                                            // 428\nf.Na = \"\";                                                                                                           // 429\nf.oc = !1;                                                                                                           // 430\nf.D = !1;                                                                                                            // 431\nf.toString = function() {                                                                                            // 432\n  var a = [], b = this.na;                                                                                           // 433\n  b && a.push(mb(b, nb), \":\");                                                                                       // 434\n  if (b = this.ia) {                                                                                                 // 435\n    a.push(\"//\");                                                                                                    // 436\n    var c = this.eb;                                                                                                 // 437\n    c && a.push(mb(c, nb), \"@\");                                                                                     // 438\n    a.push(encodeURIComponent(String(b)));                                                                           // 439\n    b = this.Ca;                                                                                                     // 440\n    null != b && a.push(\":\", String(b));                                                                             // 441\n  }                                                                                                                  // 442\n  if (b = this.I) {                                                                                                  // 443\n    this.ia && \"/\" != b.charAt(0) && a.push(\"/\"), a.push(mb(b, \"/\" == b.charAt(0) ? ob : pb));                       // 444\n  }                                                                                                                  // 445\n  (b = this.R.toString()) && a.push(\"?\", b);                                                                         // 446\n  (b = this.Na) && a.push(\"#\", mb(b, qb));                                                                           // 447\n  return a.join(\"\");                                                                                                 // 448\n};                                                                                                                   // 449\nf.n = function() {                                                                                                   // 450\n  return new D(this);                                                                                                // 451\n};                                                                                                                   // 452\nfunction gb(a, b, c) {                                                                                               // 453\n  E(a);                                                                                                              // 454\n  a.na = c ? b ? decodeURIComponent(b) : \"\" : b;                                                                     // 455\n  a.na && (a.na = a.na.replace(/:$/, \"\"));                                                                           // 456\n}                                                                                                                    // 457\nfunction hb(a, b, c) {                                                                                               // 458\n  E(a);                                                                                                              // 459\n  a.ia = c ? b ? decodeURIComponent(b) : \"\" : b;                                                                     // 460\n}                                                                                                                    // 461\nfunction ib(a, b) {                                                                                                  // 462\n  E(a);                                                                                                              // 463\n  if (b) {                                                                                                           // 464\n    b = Number(b);                                                                                                   // 465\n    if (isNaN(b) || 0 > b) {                                                                                         // 466\n      throw Error(\"Bad port number \" + b);                                                                           // 467\n    }                                                                                                                // 468\n    a.Ca = b;                                                                                                        // 469\n  } else {                                                                                                           // 470\n    a.Ca = null;                                                                                                     // 471\n  }                                                                                                                  // 472\n}                                                                                                                    // 473\nfunction jb(a, b, c) {                                                                                               // 474\n  E(a);                                                                                                              // 475\n  a.I = c ? b ? decodeURIComponent(b) : \"\" : b;                                                                      // 476\n}                                                                                                                    // 477\nfunction kb(a, b, c) {                                                                                               // 478\n  E(a);                                                                                                              // 479\n  b instanceof lb ? (a.R = b, a.R.ub(a.D)) : (c || (b = mb(b, rb)), a.R = new lb(b, 0, a.D));                        // 480\n}                                                                                                                    // 481\nfunction F(a, b, c) {                                                                                                // 482\n  E(a);                                                                                                              // 483\n  a.R.set(b, c);                                                                                                     // 484\n}                                                                                                                    // 485\nfunction sb(a, b, c) {                                                                                               // 486\n  E(a);                                                                                                              // 487\n  m(c) || (c = [String(c)]);                                                                                         // 488\n  tb(a.R, b, c);                                                                                                     // 489\n}                                                                                                                    // 490\nfunction G(a) {                                                                                                      // 491\n  E(a);                                                                                                              // 492\n  F(a, \"zx\", sa());                                                                                                  // 493\n  return a;                                                                                                          // 494\n}                                                                                                                    // 495\nfunction E(a) {                                                                                                      // 496\n  if (a.oc) {                                                                                                        // 497\n    throw Error(\"Tried to modify a read-only Uri\");                                                                  // 498\n  }                                                                                                                  // 499\n}                                                                                                                    // 500\nf.ub = function(a) {                                                                                                 // 501\n  this.D = a;                                                                                                        // 502\n  this.R && this.R.ub(a);                                                                                            // 503\n  return this;                                                                                                       // 504\n};                                                                                                                   // 505\nfunction ub(a) {                                                                                                     // 506\n  return a instanceof D ? a.n() : new D(a, void 0);                                                                  // 507\n}                                                                                                                    // 508\nfunction vb(a, b, c, d) {                                                                                            // 509\n  var e = new D(null, void 0);                                                                                       // 510\n  a && gb(e, a);                                                                                                     // 511\n  b && hb(e, b);                                                                                                     // 512\n  c && ib(e, c);                                                                                                     // 513\n  d && jb(e, d);                                                                                                     // 514\n  return e;                                                                                                          // 515\n}                                                                                                                    // 516\nfunction mb(a, b) {                                                                                                  // 517\n  return n(a) ? encodeURI(a).replace(b, wb) : null;                                                                  // 518\n}                                                                                                                    // 519\nfunction wb(a) {                                                                                                     // 520\n  a = a.charCodeAt(0);                                                                                               // 521\n  return \"%\" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);                                                   // 522\n}                                                                                                                    // 523\nvar nb = /[#\\/\\?@]/g, pb = /[\\#\\?:]/g, ob = /[\\#\\?]/g, rb = /[\\#\\?@]/g, qb = /#/g;                                   // 524\nfunction lb(a, b, c) {                                                                                               // 525\n  this.C = a || null;                                                                                                // 526\n  this.D = !!c;                                                                                                      // 527\n}                                                                                                                    // 528\nfunction H(a) {                                                                                                      // 529\n  if (!a.h && (a.h = new cb, a.o = 0, a.C)) {                                                                        // 530\n    for (var b = a.C.split(\"&\"), c = 0;c < b.length;c++) {                                                           // 531\n      var d = b[c].indexOf(\"=\"), e = null, g = null;                                                                 // 532\n      0 <= d ? (e = b[c].substring(0, d), g = b[c].substring(d + 1)) : e = b[c];                                     // 533\n      e = decodeURIComponent(e.replace(/\\+/g, \" \"));                                                                 // 534\n      e = I(a, e);                                                                                                   // 535\n      a.add(e, g ? decodeURIComponent(g.replace(/\\+/g, \" \")) : \"\");                                                  // 536\n    }                                                                                                                // 537\n  }                                                                                                                  // 538\n}                                                                                                                    // 539\nf = lb.prototype;                                                                                                    // 540\nf.h = null;                                                                                                          // 541\nf.o = null;                                                                                                          // 542\nf.add = function(a, b) {                                                                                             // 543\n  H(this);                                                                                                           // 544\n  this.C = null;                                                                                                     // 545\n  a = I(this, a);                                                                                                    // 546\n  var c = this.h.get(a);                                                                                             // 547\n  c || this.h.set(a, c = []);                                                                                        // 548\n  c.push(b);                                                                                                         // 549\n  this.o++;                                                                                                          // 550\n  return this;                                                                                                       // 551\n};                                                                                                                   // 552\nf.remove = function(a) {                                                                                             // 553\n  H(this);                                                                                                           // 554\n  a = I(this, a);                                                                                                    // 555\n  return this.h.va(a) ? (this.C = null, this.o -= this.h.get(a).length, this.h.remove(a)) : !1;                      // 556\n};                                                                                                                   // 557\nf.va = function(a) {                                                                                                 // 558\n  H(this);                                                                                                           // 559\n  a = I(this, a);                                                                                                    // 560\n  return this.h.va(a);                                                                                               // 561\n};                                                                                                                   // 562\nf.ba = function() {                                                                                                  // 563\n  H(this);                                                                                                           // 564\n  for (var a = this.h.N(), b = this.h.ba(), c = [], d = 0;d < b.length;d++) {                                        // 565\n    for (var e = a[d], g = 0;g < e.length;g++) {                                                                     // 566\n      c.push(b[d]);                                                                                                  // 567\n    }                                                                                                                // 568\n  }                                                                                                                  // 569\n  return c;                                                                                                          // 570\n};                                                                                                                   // 571\nf.N = function(a) {                                                                                                  // 572\n  H(this);                                                                                                           // 573\n  var b = [];                                                                                                        // 574\n  if (n(a)) {                                                                                                        // 575\n    this.va(a) && (b = ab(b, this.h.get(I(this, a))));                                                               // 576\n  } else {                                                                                                           // 577\n    a = this.h.N();                                                                                                  // 578\n    for (var c = 0;c < a.length;c++) {                                                                               // 579\n      b = ab(b, a[c]);                                                                                               // 580\n    }                                                                                                                // 581\n  }                                                                                                                  // 582\n  return b;                                                                                                          // 583\n};                                                                                                                   // 584\nf.set = function(a, b) {                                                                                             // 585\n  H(this);                                                                                                           // 586\n  this.C = null;                                                                                                     // 587\n  a = I(this, a);                                                                                                    // 588\n  this.va(a) && (this.o -= this.h.get(a).length);                                                                    // 589\n  this.h.set(a, [b]);                                                                                                // 590\n  this.o++;                                                                                                          // 591\n  return this;                                                                                                       // 592\n};                                                                                                                   // 593\nf.get = function(a, b) {                                                                                             // 594\n  var c = a ? this.N(a) : [];                                                                                        // 595\n  return 0 < c.length ? String(c[0]) : b;                                                                            // 596\n};                                                                                                                   // 597\nfunction tb(a, b, c) {                                                                                               // 598\n  a.remove(b);                                                                                                       // 599\n  0 < c.length && (a.C = null, a.h.set(I(a, b), bb(c)), a.o += c.length);                                            // 600\n}                                                                                                                    // 601\nf.toString = function() {                                                                                            // 602\n  if (this.C) {                                                                                                      // 603\n    return this.C;                                                                                                   // 604\n  }                                                                                                                  // 605\n  if (!this.h) {                                                                                                     // 606\n    return \"\";                                                                                                       // 607\n  }                                                                                                                  // 608\n  for (var a = [], b = this.h.ba(), c = 0;c < b.length;c++) {                                                        // 609\n    for (var d = b[c], e = encodeURIComponent(String(d)), d = this.N(d), g = 0;g < d.length;g++) {                   // 610\n      var h = e;                                                                                                     // 611\n      \"\" !== d[g] && (h += \"=\" + encodeURIComponent(String(d[g])));                                                  // 612\n      a.push(h);                                                                                                     // 613\n    }                                                                                                                // 614\n  }                                                                                                                  // 615\n  return this.C = a.join(\"&\");                                                                                       // 616\n};                                                                                                                   // 617\nf.n = function() {                                                                                                   // 618\n  var a = new lb;                                                                                                    // 619\n  a.C = this.C;                                                                                                      // 620\n  this.h && (a.h = this.h.n(), a.o = this.o);                                                                        // 621\n  return a;                                                                                                          // 622\n};                                                                                                                   // 623\nfunction I(a, b) {                                                                                                   // 624\n  var c = String(b);                                                                                                 // 625\n  a.D && (c = c.toLowerCase());                                                                                      // 626\n  return c;                                                                                                          // 627\n}                                                                                                                    // 628\nf.ub = function(a) {                                                                                                 // 629\n  a && !this.D && (H(this), this.C = null, fb(this.h, function(a, c) {                                               // 630\n    var d = c.toLowerCase();                                                                                         // 631\n    c != d && (this.remove(c), tb(this, d, a));                                                                      // 632\n  }, this));                                                                                                         // 633\n  this.D = a;                                                                                                        // 634\n};                                                                                                                   // 635\nfunction xb(a) {                                                                                                     // 636\n  a = String(a);                                                                                                     // 637\n  if (/^\\s*$/.test(a) ? 0 : /^[\\],:{}\\s\\u2028\\u2029]*$/.test(a.replace(/\\\\[\"\\\\\\/bfnrtu]/g, \"@\").replace(/\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, \"]\").replace(/(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g, \"\"))) {\n    try {                                                                                                            // 639\n      return eval(\"(\" + a + \")\");                                                                                    // 640\n    } catch (b) {                                                                                                    // 641\n    }                                                                                                                // 642\n  }                                                                                                                  // 643\n  throw Error(\"Invalid JSON string: \" + a);                                                                          // 644\n}                                                                                                                    // 645\nfunction yb(a) {                                                                                                     // 646\n  return eval(\"(\" + a + \")\");                                                                                        // 647\n}                                                                                                                    // 648\nfunction zb(a) {                                                                                                     // 649\n  var b = [];                                                                                                        // 650\n  Ab(new Bb, a, b);                                                                                                  // 651\n  return b.join(\"\");                                                                                                 // 652\n}                                                                                                                    // 653\nfunction Bb() {                                                                                                      // 654\n  this.Ya = void 0;                                                                                                  // 655\n}                                                                                                                    // 656\nfunction Ab(a, b, c) {                                                                                               // 657\n  switch(typeof b) {                                                                                                 // 658\n    case \"string\":                                                                                                   // 659\n      Cb(b, c);                                                                                                      // 660\n      break;                                                                                                         // 661\n    case \"number\":                                                                                                   // 662\n      c.push(isFinite(b) && !isNaN(b) ? b : \"null\");                                                                 // 663\n      break;                                                                                                         // 664\n    case \"boolean\":                                                                                                  // 665\n      c.push(b);                                                                                                     // 666\n      break;                                                                                                         // 667\n    case \"undefined\":                                                                                                // 668\n      c.push(\"null\");                                                                                                // 669\n      break;                                                                                                         // 670\n    case \"object\":                                                                                                   // 671\n      if (null == b) {                                                                                               // 672\n        c.push(\"null\");                                                                                              // 673\n        break;                                                                                                       // 674\n      }                                                                                                              // 675\n      if (m(b)) {                                                                                                    // 676\n        var d = b.length;                                                                                            // 677\n        c.push(\"[\");                                                                                                 // 678\n        for (var e = \"\", g = 0;g < d;g++) {                                                                          // 679\n          c.push(e), e = b[g], Ab(a, a.Ya ? a.Ya.call(b, String(g), e) : e, c), e = \",\";                             // 680\n        }                                                                                                            // 681\n        c.push(\"]\");                                                                                                 // 682\n        break;                                                                                                       // 683\n      }                                                                                                              // 684\n      c.push(\"{\");                                                                                                   // 685\n      d = \"\";                                                                                                        // 686\n      for (g in b) {                                                                                                 // 687\n        Object.prototype.hasOwnProperty.call(b, g) && (e = b[g], \"function\" != typeof e && (c.push(d), Cb(g, c), c.push(\":\"), Ab(a, a.Ya ? a.Ya.call(b, g, e) : e, c), d = \",\"));\n      }                                                                                                              // 689\n      c.push(\"}\");                                                                                                   // 690\n      break;                                                                                                         // 691\n    case \"function\":                                                                                                 // 692\n      break;                                                                                                         // 693\n    default:                                                                                                         // 694\n      throw Error(\"Unknown type: \" + typeof b);;                                                                     // 695\n  }                                                                                                                  // 696\n}                                                                                                                    // 697\nvar Db = {'\"':'\\\\\"', \"\\\\\":\"\\\\\\\\\", \"/\":\"\\\\/\", \"\\b\":\"\\\\b\", \"\\f\":\"\\\\f\", \"\\n\":\"\\\\n\", \"\\r\":\"\\\\r\", \"\\t\":\"\\\\t\", \"\\x0B\":\"\\\\u000b\"}, Eb = /\\uffff/.test(\"\\uffff\") ? /[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g : /[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction Cb(a, b) {                                                                                                  // 699\n  b.push('\"', a.replace(Eb, function(a) {                                                                            // 700\n    if (a in Db) {                                                                                                   // 701\n      return Db[a];                                                                                                  // 702\n    }                                                                                                                // 703\n    var b = a.charCodeAt(0), e = \"\\\\u\";                                                                              // 704\n    16 > b ? e += \"000\" : 256 > b ? e += \"00\" : 4096 > b && (e += \"0\");                                              // 705\n    return Db[a] = e + b.toString(16);                                                                               // 706\n  }), '\"');                                                                                                          // 707\n}                                                                                                                    // 708\n;function Fb(a) {                                                                                                    // 709\n  return Gb(a || arguments.callee.caller, []);                                                                       // 710\n}                                                                                                                    // 711\nfunction Gb(a, b) {                                                                                                  // 712\n  var c = [];                                                                                                        // 713\n  if (0 <= Xa(b, a)) {                                                                                               // 714\n    c.push(\"[...circular reference...]\");                                                                            // 715\n  } else {                                                                                                           // 716\n    if (a && 50 > b.length) {                                                                                        // 717\n      c.push(Hb(a) + \"(\");                                                                                           // 718\n      for (var d = a.arguments, e = 0;d && e < d.length;e++) {                                                       // 719\n        0 < e && c.push(\", \");                                                                                       // 720\n        var g;                                                                                                       // 721\n        g = d[e];                                                                                                    // 722\n        switch(typeof g) {                                                                                           // 723\n          case \"object\":                                                                                             // 724\n            g = g ? \"object\" : \"null\";                                                                               // 725\n            break;                                                                                                   // 726\n          case \"string\":                                                                                             // 727\n            break;                                                                                                   // 728\n          case \"number\":                                                                                             // 729\n            g = String(g);                                                                                           // 730\n            break;                                                                                                   // 731\n          case \"boolean\":                                                                                            // 732\n            g = g ? \"true\" : \"false\";                                                                                // 733\n            break;                                                                                                   // 734\n          case \"function\":                                                                                           // 735\n            g = (g = Hb(g)) ? g : \"[fn]\";                                                                            // 736\n            break;                                                                                                   // 737\n          default:                                                                                                   // 738\n            g = typeof g;                                                                                            // 739\n        }                                                                                                            // 740\n        40 < g.length && (g = g.substr(0, 40) + \"...\");                                                              // 741\n        c.push(g);                                                                                                   // 742\n      }                                                                                                              // 743\n      b.push(a);                                                                                                     // 744\n      c.push(\")\\n\");                                                                                                 // 745\n      try {                                                                                                          // 746\n        c.push(Gb(a.caller, b));                                                                                     // 747\n      } catch (h) {                                                                                                  // 748\n        c.push(\"[exception trying to get caller]\\n\");                                                                // 749\n      }                                                                                                              // 750\n    } else {                                                                                                         // 751\n      a ? c.push(\"[...long stack...]\") : c.push(\"[end]\");                                                            // 752\n    }                                                                                                                // 753\n  }                                                                                                                  // 754\n  return c.join(\"\");                                                                                                 // 755\n}                                                                                                                    // 756\nfunction Hb(a) {                                                                                                     // 757\n  if (Ib[a]) {                                                                                                       // 758\n    return Ib[a];                                                                                                    // 759\n  }                                                                                                                  // 760\n  a = String(a);                                                                                                     // 761\n  if (!Ib[a]) {                                                                                                      // 762\n    var b = /function ([^\\(]+)/.exec(a);                                                                             // 763\n    Ib[a] = b ? b[1] : \"[Anonymous]\";                                                                                // 764\n  }                                                                                                                  // 765\n  return Ib[a];                                                                                                      // 766\n}                                                                                                                    // 767\nvar Ib = {};                                                                                                         // 768\nfunction Jb(a, b, c, d, e) {                                                                                         // 769\n  this.reset(a, b, c, d, e);                                                                                         // 770\n}                                                                                                                    // 771\nJb.prototype.Fb = null;                                                                                              // 772\nJb.prototype.Eb = null;                                                                                              // 773\nvar Kb = 0;                                                                                                          // 774\nJb.prototype.reset = function(a, b, c, d, e) {                                                                       // 775\n  \"number\" == typeof e || Kb++;                                                                                      // 776\n  d || q();                                                                                                          // 777\n  this.za = a;                                                                                                       // 778\n  this.qc = b;                                                                                                       // 779\n  delete this.Fb;                                                                                                    // 780\n  delete this.Eb;                                                                                                    // 781\n};                                                                                                                   // 782\nJb.prototype.$b = function(a) {                                                                                      // 783\n  this.za = a;                                                                                                       // 784\n};                                                                                                                   // 785\nfunction Lb(a) {                                                                                                     // 786\n  this.rc = a;                                                                                                       // 787\n  this.Jb = this.jb = this.za = this.Sa = null;                                                                      // 788\n}                                                                                                                    // 789\nfunction Mb(a, b) {                                                                                                  // 790\n  this.name = a;                                                                                                     // 791\n  this.value = b;                                                                                                    // 792\n}                                                                                                                    // 793\nMb.prototype.toString = function() {                                                                                 // 794\n  return this.name;                                                                                                  // 795\n};                                                                                                                   // 796\nvar Nb = new Mb(\"SEVERE\", 1E3), Ob = new Mb(\"WARNING\", 900), Pb = new Mb(\"INFO\", 800), Qb = new Mb(\"CONFIG\", 700), Rb = new Mb(\"FINE\", 500);\nf = Lb.prototype;                                                                                                    // 798\nf.getParent = function() {                                                                                           // 799\n  return this.Sa;                                                                                                    // 800\n};                                                                                                                   // 801\nf.$b = function(a) {                                                                                                 // 802\n  this.za = a;                                                                                                       // 803\n};                                                                                                                   // 804\nfunction Sb(a) {                                                                                                     // 805\n  if (a.za) {                                                                                                        // 806\n    return a.za;                                                                                                     // 807\n  }                                                                                                                  // 808\n  if (a.Sa) {                                                                                                        // 809\n    return Sb(a.Sa);                                                                                                 // 810\n  }                                                                                                                  // 811\n  Pa(\"Root logger has no level set.\");                                                                               // 812\n  return null;                                                                                                       // 813\n}                                                                                                                    // 814\nf.log = function(a, b, c) {                                                                                          // 815\n  if (a.value >= Sb(this).value) {                                                                                   // 816\n    for (fa(b) && (b = b()), a = this.nc(a, b, c), b = \"log:\" + a.qc, l.console && (l.console.timeStamp ? l.console.timeStamp(b) : l.console.markTimeline && l.console.markTimeline(b)), l.msWriteProfilerMark && l.msWriteProfilerMark(b), b = this;b;) {\n      c = b;                                                                                                         // 818\n      var d = a;                                                                                                     // 819\n      if (c.Jb) {                                                                                                    // 820\n        for (var e = 0, g = void 0;g = c.Jb[e];e++) {                                                                // 821\n          g(d);                                                                                                      // 822\n        }                                                                                                            // 823\n      }                                                                                                              // 824\n      b = b.getParent();                                                                                             // 825\n    }                                                                                                                // 826\n  }                                                                                                                  // 827\n};                                                                                                                   // 828\nf.nc = function(a, b, c) {                                                                                           // 829\n  var d = new Jb(a, String(b), this.rc);                                                                             // 830\n  if (c) {                                                                                                           // 831\n    d.Fb = c;                                                                                                        // 832\n    var e;                                                                                                           // 833\n    var g = arguments.callee.caller;                                                                                 // 834\n    try {                                                                                                            // 835\n      var h;                                                                                                         // 836\n      var k = ba(\"window.location.href\");                                                                            // 837\n      if (n(c)) {                                                                                                    // 838\n        h = {message:c, name:\"Unknown error\", lineNumber:\"Not available\", fileName:k, stack:\"Not available\"};        // 839\n      } else {                                                                                                       // 840\n        var u, K, v = !1;                                                                                            // 841\n        try {                                                                                                        // 842\n          u = c.lineNumber || c.Gc || \"Not available\";                                                               // 843\n        } catch (r) {                                                                                                // 844\n          u = \"Not available\", v = !0;                                                                               // 845\n        }                                                                                                            // 846\n        try {                                                                                                        // 847\n          K = c.fileName || c.filename || c.sourceURL || l.$googDebugFname || k;                                     // 848\n        } catch (Ia) {                                                                                               // 849\n          K = \"Not available\", v = !0;                                                                               // 850\n        }                                                                                                            // 851\n        h = !v && c.lineNumber && c.fileName && c.stack && c.message && c.name ? c : {message:c.message || \"Not available\", name:c.name || \"UnknownError\", lineNumber:u, fileName:K, stack:c.stack || \"Not available\"};\n      }                                                                                                              // 853\n      e = \"Message: \" + la(h.message) + '\\nUrl: <a href=\"view-source:' + h.fileName + '\" target=\"_new\">' + h.fileName + \"</a>\\nLine: \" + h.lineNumber + \"\\n\\nBrowser stack:\\n\" + la(h.stack + \"-> \") + \"[end]\\n\\nJS stack traversal:\\n\" + la(Fb(g) + \"-> \");\n    } catch (w) {                                                                                                    // 855\n      e = \"Exception trying to expose exception! You win, we lose. \" + w;                                            // 856\n    }                                                                                                                // 857\n    d.Eb = e;                                                                                                        // 858\n  }                                                                                                                  // 859\n  return d;                                                                                                          // 860\n};                                                                                                                   // 861\nf.J = function(a, b) {                                                                                               // 862\n  this.log(Nb, a, b);                                                                                                // 863\n};                                                                                                                   // 864\nf.fa = function(a, b) {                                                                                              // 865\n  this.log(Ob, a, b);                                                                                                // 866\n};                                                                                                                   // 867\nf.info = function(a, b) {                                                                                            // 868\n  this.log(Pb, a, b);                                                                                                // 869\n};                                                                                                                   // 870\nvar Tb = {}, Ub = null;                                                                                              // 871\nfunction Vb(a) {                                                                                                     // 872\n  Ub || (Ub = new Lb(\"\"), Tb[\"\"] = Ub, Ub.$b(Qb));                                                                   // 873\n  var b;                                                                                                             // 874\n  if (!(b = Tb[a])) {                                                                                                // 875\n    b = new Lb(a);                                                                                                   // 876\n    var c = a.lastIndexOf(\".\"), d = a.substr(c + 1), c = Vb(a.substr(0, c));                                         // 877\n    c.jb || (c.jb = {});                                                                                             // 878\n    c.jb[d] = b;                                                                                                     // 879\n    b.Sa = c;                                                                                                        // 880\n    Tb[a] = b;                                                                                                       // 881\n  }                                                                                                                  // 882\n  return b;                                                                                                          // 883\n}                                                                                                                    // 884\n;function J(a, b) {                                                                                                  // 885\n  a && a.log(Rb, b, void 0);                                                                                         // 886\n}                                                                                                                    // 887\n;function L() {                                                                                                      // 888\n  this.r = Vb(\"goog.net.BrowserChannel\");                                                                            // 889\n}                                                                                                                    // 890\nfunction Wb(a, b, c, d) {                                                                                            // 891\n  a.info(\"XMLHTTP TEXT (\" + b + \"): \" + Xb(a, c) + (d ? \" \" + d : \"\"));                                              // 892\n}                                                                                                                    // 893\nL.prototype.debug = function(a) {                                                                                    // 894\n  this.info(a);                                                                                                      // 895\n};                                                                                                                   // 896\nfunction M(a, b, c) {                                                                                                // 897\n  a.J((c || \"Exception\") + b);                                                                                       // 898\n}                                                                                                                    // 899\nL.prototype.info = function(a) {                                                                                     // 900\n  var b = this.r;                                                                                                    // 901\n  b && b.info(a, void 0);                                                                                            // 902\n};                                                                                                                   // 903\nL.prototype.fa = function(a) {                                                                                       // 904\n  var b = this.r;                                                                                                    // 905\n  b && b.fa(a, void 0);                                                                                              // 906\n};                                                                                                                   // 907\nL.prototype.J = function(a) {                                                                                        // 908\n  var b = this.r;                                                                                                    // 909\n  b && b.J(a, void 0);                                                                                               // 910\n};                                                                                                                   // 911\nfunction Xb(a, b) {                                                                                                  // 912\n  if (!b || b == Yb) {                                                                                               // 913\n    return b;                                                                                                        // 914\n  }                                                                                                                  // 915\n  try {                                                                                                              // 916\n    var c = yb(b);                                                                                                   // 917\n    if (c) {                                                                                                         // 918\n      for (var d = 0;d < c.length;d++) {                                                                             // 919\n        if (m(c[d])) {                                                                                               // 920\n          var e = c[d];                                                                                              // 921\n          if (!(2 > e.length)) {                                                                                     // 922\n            var g = e[1];                                                                                            // 923\n            if (m(g) && !(1 > g.length)) {                                                                           // 924\n              var h = g[0];                                                                                          // 925\n              if (\"noop\" != h && \"stop\" != h) {                                                                      // 926\n                for (var k = 1;k < g.length;k++) {                                                                   // 927\n                  g[k] = \"\";                                                                                         // 928\n                }                                                                                                    // 929\n              }                                                                                                      // 930\n            }                                                                                                        // 931\n          }                                                                                                          // 932\n        }                                                                                                            // 933\n      }                                                                                                              // 934\n    }                                                                                                                // 935\n    return zb(c);                                                                                                    // 936\n  } catch (u) {                                                                                                      // 937\n    return a.debug(\"Exception parsing expected JS array - probably was not JS\"), b;                                  // 938\n  }                                                                                                                  // 939\n}                                                                                                                    // 940\n;function Zb(a, b) {                                                                                                 // 941\n  this.P = b ? yb : xb;                                                                                              // 942\n}                                                                                                                    // 943\nZb.prototype.parse = function(a) {                                                                                   // 944\n  return this.P(a);                                                                                                  // 945\n};                                                                                                                   // 946\nfunction N() {                                                                                                       // 947\n  0 != $b && (ac[this[ga] || (this[ga] = ++ha)] = this);                                                             // 948\n}                                                                                                                    // 949\nvar $b = 0, ac = {};                                                                                                 // 950\nN.prototype.mb = !1;                                                                                                 // 951\nN.prototype.Ja = function() {                                                                                        // 952\n  if (!this.mb && (this.mb = !0, this.u(), 0 != $b)) {                                                               // 953\n    var a = this[ga] || (this[ga] = ++ha);                                                                           // 954\n    delete ac[a];                                                                                                    // 955\n  }                                                                                                                  // 956\n};                                                                                                                   // 957\nN.prototype.u = function() {                                                                                         // 958\n  if (this.Pb) {                                                                                                     // 959\n    for (;this.Pb.length;) {                                                                                         // 960\n      this.Pb.shift()();                                                                                             // 961\n    }                                                                                                                // 962\n  }                                                                                                                  // 963\n};                                                                                                                   // 964\nvar bc = \"closure_listenable_\" + (1E6 * Math.random() | 0);                                                          // 965\nfunction cc(a) {                                                                                                     // 966\n  try {                                                                                                              // 967\n    return!(!a || !a[bc]);                                                                                           // 968\n  } catch (b) {                                                                                                      // 969\n    return!1;                                                                                                        // 970\n  }                                                                                                                  // 971\n}                                                                                                                    // 972\nvar dc = 0;                                                                                                          // 973\nfunction ec(a, b, c, d, e) {                                                                                         // 974\n  this.ea = a;                                                                                                       // 975\n  this.Ua = null;                                                                                                    // 976\n  this.src = b;                                                                                                      // 977\n  this.type = c;                                                                                                     // 978\n  this.capture = !!d;                                                                                                // 979\n  this.Oa = e;                                                                                                       // 980\n  this.key = ++dc;                                                                                                   // 981\n  this.ma = this.Ia = !1;                                                                                            // 982\n}                                                                                                                    // 983\nfunction fc(a) {                                                                                                     // 984\n  a.ma = !0;                                                                                                         // 985\n  a.ea = null;                                                                                                       // 986\n  a.Ua = null;                                                                                                       // 987\n  a.src = null;                                                                                                      // 988\n  a.Oa = null;                                                                                                       // 989\n}                                                                                                                    // 990\n;function O(a) {                                                                                                     // 991\n  this.src = a;                                                                                                      // 992\n  this.s = {};                                                                                                       // 993\n  this.Ga = 0;                                                                                                       // 994\n}                                                                                                                    // 995\nO.prototype.add = function(a, b, c, d, e) {                                                                          // 996\n  var g = this.s[a];                                                                                                 // 997\n  g || (g = this.s[a] = [], this.Ga++);                                                                              // 998\n  var h = gc(g, b, d, e);                                                                                            // 999\n  -1 < h ? (a = g[h], c || (a.Ia = !1)) : (a = new ec(b, this.src, a, !!d, e), a.Ia = c, g.push(a));                 // 1000\n  return a;                                                                                                          // 1001\n};                                                                                                                   // 1002\nO.prototype.remove = function(a, b, c, d) {                                                                          // 1003\n  if (!(a in this.s)) {                                                                                              // 1004\n    return!1;                                                                                                        // 1005\n  }                                                                                                                  // 1006\n  var e = this.s[a];                                                                                                 // 1007\n  b = gc(e, b, c, d);                                                                                                // 1008\n  return-1 < b ? (fc(e[b]), B.splice.call(e, b, 1), 0 == e.length && (delete this.s[a], this.Ga--), !0) : !1;        // 1009\n};                                                                                                                   // 1010\nfunction hc(a, b) {                                                                                                  // 1011\n  var c = b.type;                                                                                                    // 1012\n  if (!(c in a.s)) {                                                                                                 // 1013\n    return!1;                                                                                                        // 1014\n  }                                                                                                                  // 1015\n  var d = a.s[c], e = Xa(d, b), g;                                                                                   // 1016\n  (g = 0 <= e) && B.splice.call(d, e, 1);                                                                            // 1017\n  g && (fc(b), 0 == a.s[c].length && (delete a.s[c], a.Ga--));                                                       // 1018\n  return g;                                                                                                          // 1019\n}                                                                                                                    // 1020\nO.prototype.Xa = function(a) {                                                                                       // 1021\n  var b = 0, c;                                                                                                      // 1022\n  for (c in this.s) {                                                                                                // 1023\n    if (!a || c == a) {                                                                                              // 1024\n      for (var d = this.s[c], e = 0;e < d.length;e++) {                                                              // 1025\n        ++b, fc(d[e]);                                                                                               // 1026\n      }                                                                                                              // 1027\n      delete this.s[c];                                                                                              // 1028\n      this.Ga--;                                                                                                     // 1029\n    }                                                                                                                // 1030\n  }                                                                                                                  // 1031\n  return b;                                                                                                          // 1032\n};                                                                                                                   // 1033\nO.prototype.xa = function(a, b, c, d) {                                                                              // 1034\n  a = this.s[a];                                                                                                     // 1035\n  var e = -1;                                                                                                        // 1036\n  a && (e = gc(a, b, c, d));                                                                                         // 1037\n  return-1 < e ? a[e] : null;                                                                                        // 1038\n};                                                                                                                   // 1039\nfunction gc(a, b, c, d) {                                                                                            // 1040\n  for (var e = 0;e < a.length;++e) {                                                                                 // 1041\n    var g = a[e];                                                                                                    // 1042\n    if (!g.ma && g.ea == b && g.capture == !!c && g.Oa == d) {                                                       // 1043\n      return e;                                                                                                      // 1044\n    }                                                                                                                // 1045\n  }                                                                                                                  // 1046\n  return-1;                                                                                                          // 1047\n}                                                                                                                    // 1048\n;var ic = !y || y && 9 <= Ma, jc = y && !A(\"9\");                                                                     // 1049\n!z || A(\"528\");                                                                                                      // 1050\nBa && A(\"1.9b\") || y && A(\"8\") || Aa && A(\"9.5\") || z && A(\"528\");                                                   // 1051\nBa && !A(\"8\") || y && A(\"9\");                                                                                        // 1052\nfunction P(a, b) {                                                                                                   // 1053\n  this.type = a;                                                                                                     // 1054\n  this.currentTarget = this.target = b;                                                                              // 1055\n  this.defaultPrevented = this.ka = !1;                                                                              // 1056\n  this.Yb = !0;                                                                                                      // 1057\n}                                                                                                                    // 1058\nP.prototype.u = function() {                                                                                         // 1059\n};                                                                                                                   // 1060\nP.prototype.Ja = function() {                                                                                        // 1061\n};                                                                                                                   // 1062\nP.prototype.preventDefault = function() {                                                                            // 1063\n  this.defaultPrevented = !0;                                                                                        // 1064\n  this.Yb = !1;                                                                                                      // 1065\n};                                                                                                                   // 1066\nfunction kc(a) {                                                                                                     // 1067\n  kc[\" \"](a);                                                                                                        // 1068\n  return a;                                                                                                          // 1069\n}                                                                                                                    // 1070\nkc[\" \"] = ca;                                                                                                        // 1071\nfunction Q(a, b) {                                                                                                   // 1072\n  Q.ic(this, \"constructor\", a ? a.type : \"\");                                                                        // 1073\n  this.relatedTarget = this.currentTarget = this.target = null;                                                      // 1074\n  this.charCode = this.keyCode = this.button = this.screenY = this.screenX = this.clientY = this.clientX = this.offsetY = this.offsetX = 0;\n  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;                                                    // 1076\n  this.Db = this.state = null;                                                                                       // 1077\n  if (a) {                                                                                                           // 1078\n    var c = this.type = a.type;                                                                                      // 1079\n    this.target = a.target || a.srcElement;                                                                          // 1080\n    this.currentTarget = b;                                                                                          // 1081\n    var d = a.relatedTarget;                                                                                         // 1082\n    if (d) {                                                                                                         // 1083\n      if (Ba) {                                                                                                      // 1084\n        var e;                                                                                                       // 1085\n        a: {                                                                                                         // 1086\n          try {                                                                                                      // 1087\n            kc(d.nodeName);                                                                                          // 1088\n            e = !0;                                                                                                  // 1089\n            break a;                                                                                                 // 1090\n          } catch (g) {                                                                                              // 1091\n          }                                                                                                          // 1092\n          e = !1;                                                                                                    // 1093\n        }                                                                                                            // 1094\n        e || (d = null);                                                                                             // 1095\n      }                                                                                                              // 1096\n    } else {                                                                                                         // 1097\n      \"mouseover\" == c ? d = a.fromElement : \"mouseout\" == c && (d = a.toElement);                                   // 1098\n    }                                                                                                                // 1099\n    this.relatedTarget = d;                                                                                          // 1100\n    this.offsetX = z || void 0 !== a.offsetX ? a.offsetX : a.layerX;                                                 // 1101\n    this.offsetY = z || void 0 !== a.offsetY ? a.offsetY : a.layerY;                                                 // 1102\n    this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX;                                                       // 1103\n    this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY;                                                       // 1104\n    this.screenX = a.screenX || 0;                                                                                   // 1105\n    this.screenY = a.screenY || 0;                                                                                   // 1106\n    this.button = a.button;                                                                                          // 1107\n    this.keyCode = a.keyCode || 0;                                                                                   // 1108\n    this.charCode = a.charCode || (\"keypress\" == c ? a.keyCode : 0);                                                 // 1109\n    this.ctrlKey = a.ctrlKey;                                                                                        // 1110\n    this.altKey = a.altKey;                                                                                          // 1111\n    this.shiftKey = a.shiftKey;                                                                                      // 1112\n    this.metaKey = a.metaKey;                                                                                        // 1113\n    this.state = a.state;                                                                                            // 1114\n    this.Db = a;                                                                                                     // 1115\n    a.defaultPrevented && this.preventDefault();                                                                     // 1116\n  }                                                                                                                  // 1117\n}                                                                                                                    // 1118\ns(Q, P);                                                                                                             // 1119\nQ.prototype.preventDefault = function() {                                                                            // 1120\n  Q.oa.preventDefault.call(this);                                                                                    // 1121\n  var a = this.Db;                                                                                                   // 1122\n  if (a.preventDefault) {                                                                                            // 1123\n    a.preventDefault();                                                                                              // 1124\n  } else {                                                                                                           // 1125\n    if (a.returnValue = !1, jc) {                                                                                    // 1126\n      try {                                                                                                          // 1127\n        if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) {                                                     // 1128\n          a.keyCode = -1;                                                                                            // 1129\n        }                                                                                                            // 1130\n      } catch (b) {                                                                                                  // 1131\n      }                                                                                                              // 1132\n    }                                                                                                                // 1133\n  }                                                                                                                  // 1134\n};                                                                                                                   // 1135\nQ.prototype.u = function() {                                                                                         // 1136\n};                                                                                                                   // 1137\nvar lc = \"closure_lm_\" + (1E6 * Math.random() | 0), mc = {}, nc = 0;                                                 // 1138\nfunction oc(a, b, c, d, e) {                                                                                         // 1139\n  if (m(b)) {                                                                                                        // 1140\n    for (var g = 0;g < b.length;g++) {                                                                               // 1141\n      oc(a, b[g], c, d, e);                                                                                          // 1142\n    }                                                                                                                // 1143\n    return null;                                                                                                     // 1144\n  }                                                                                                                  // 1145\n  c = pc(c);                                                                                                         // 1146\n  if (cc(a)) {                                                                                                       // 1147\n    a = a.Ra(b, c, d, e);                                                                                            // 1148\n  } else {                                                                                                           // 1149\n    if (!b) {                                                                                                        // 1150\n      throw Error(\"Invalid event type\");                                                                             // 1151\n    }                                                                                                                // 1152\n    var g = !!d, h = qc(a);                                                                                          // 1153\n    h || (a[lc] = h = new O(a));                                                                                     // 1154\n    c = h.add(b, c, !1, d, e);                                                                                       // 1155\n    c.Ua || (d = rc(), c.Ua = d, d.src = a, d.ea = c, a.addEventListener ? a.addEventListener(b, d, g) : a.attachEvent(b in mc ? mc[b] : mc[b] = \"on\" + b, d), nc++);\n    a = c;                                                                                                           // 1157\n  }                                                                                                                  // 1158\n  return a;                                                                                                          // 1159\n}                                                                                                                    // 1160\nfunction rc() {                                                                                                      // 1161\n  var a = sc, b = ic ? function(c) {                                                                                 // 1162\n    return a.call(b.src, b.ea, c);                                                                                   // 1163\n  } : function(c) {                                                                                                  // 1164\n    c = a.call(b.src, b.ea, c);                                                                                      // 1165\n    if (!c) {                                                                                                        // 1166\n      return c;                                                                                                      // 1167\n    }                                                                                                                // 1168\n  };                                                                                                                 // 1169\n  return b;                                                                                                          // 1170\n}                                                                                                                    // 1171\nfunction tc(a, b, c, d, e) {                                                                                         // 1172\n  if (m(b)) {                                                                                                        // 1173\n    for (var g = 0;g < b.length;g++) {                                                                               // 1174\n      tc(a, b[g], c, d, e);                                                                                          // 1175\n    }                                                                                                                // 1176\n  } else {                                                                                                           // 1177\n    c = pc(c), cc(a) ? a.vb(b, c, d, e) : a && (a = qc(a)) && (b = a.xa(b, c, !!d, e)) && uc(b);                     // 1178\n  }                                                                                                                  // 1179\n}                                                                                                                    // 1180\nfunction uc(a) {                                                                                                     // 1181\n  if (\"number\" == typeof a || !a || a.ma) {                                                                          // 1182\n    return!1;                                                                                                        // 1183\n  }                                                                                                                  // 1184\n  var b = a.src;                                                                                                     // 1185\n  if (cc(b)) {                                                                                                       // 1186\n    return hc(b.W, a);                                                                                               // 1187\n  }                                                                                                                  // 1188\n  var c = a.type, d = a.Ua;                                                                                          // 1189\n  b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent && b.detachEvent(c in mc ? mc[c] : mc[c] = \"on\" + c, d);\n  nc--;                                                                                                              // 1191\n  (c = qc(b)) ? (hc(c, a), 0 == c.Ga && (c.src = null, b[lc] = null)) : fc(a);                                       // 1192\n  return!0;                                                                                                          // 1193\n}                                                                                                                    // 1194\nfunction vc(a, b, c, d) {                                                                                            // 1195\n  var e = 1;                                                                                                         // 1196\n  if (a = qc(a)) {                                                                                                   // 1197\n    if (b = a.s[b]) {                                                                                                // 1198\n      for (b = bb(b), a = 0;a < b.length;a++) {                                                                      // 1199\n        var g = b[a];                                                                                                // 1200\n        g && g.capture == c && !g.ma && (e &= !1 !== wc(g, d));                                                      // 1201\n      }                                                                                                              // 1202\n    }                                                                                                                // 1203\n  }                                                                                                                  // 1204\n  return Boolean(e);                                                                                                 // 1205\n}                                                                                                                    // 1206\nfunction wc(a, b) {                                                                                                  // 1207\n  var c = a.ea, d = a.Oa || a.src;                                                                                   // 1208\n  a.Ia && uc(a);                                                                                                     // 1209\n  return c.call(d, b);                                                                                               // 1210\n}                                                                                                                    // 1211\nfunction sc(a, b) {                                                                                                  // 1212\n  if (a.ma) {                                                                                                        // 1213\n    return!0;                                                                                                        // 1214\n  }                                                                                                                  // 1215\n  if (!ic) {                                                                                                         // 1216\n    var c = b || ba(\"window.event\"), d = new Q(c, this), e = !0;                                                     // 1217\n    if (!(0 > c.keyCode || void 0 != c.returnValue)) {                                                               // 1218\n      a: {                                                                                                           // 1219\n        var g = !1;                                                                                                  // 1220\n        if (0 == c.keyCode) {                                                                                        // 1221\n          try {                                                                                                      // 1222\n            c.keyCode = -1;                                                                                          // 1223\n            break a;                                                                                                 // 1224\n          } catch (h) {                                                                                              // 1225\n            g = !0;                                                                                                  // 1226\n          }                                                                                                          // 1227\n        }                                                                                                            // 1228\n        if (g || void 0 == c.returnValue) {                                                                          // 1229\n          c.returnValue = !0;                                                                                        // 1230\n        }                                                                                                            // 1231\n      }                                                                                                              // 1232\n      c = [];                                                                                                        // 1233\n      for (g = d.currentTarget;g;g = g.parentNode) {                                                                 // 1234\n        c.push(g);                                                                                                   // 1235\n      }                                                                                                              // 1236\n      for (var g = a.type, k = c.length - 1;!d.ka && 0 <= k;k--) {                                                   // 1237\n        d.currentTarget = c[k], e &= vc(c[k], g, !0, d);                                                             // 1238\n      }                                                                                                              // 1239\n      for (k = 0;!d.ka && k < c.length;k++) {                                                                        // 1240\n        d.currentTarget = c[k], e &= vc(c[k], g, !1, d);                                                             // 1241\n      }                                                                                                              // 1242\n    }                                                                                                                // 1243\n    return e;                                                                                                        // 1244\n  }                                                                                                                  // 1245\n  return wc(a, new Q(b, this));                                                                                      // 1246\n}                                                                                                                    // 1247\nfunction qc(a) {                                                                                                     // 1248\n  a = a[lc];                                                                                                         // 1249\n  return a instanceof O ? a : null;                                                                                  // 1250\n}                                                                                                                    // 1251\nvar xc = \"__closure_events_fn_\" + (1E9 * Math.random() >>> 0);                                                       // 1252\nfunction pc(a) {                                                                                                     // 1253\n  return fa(a) ? a : a[xc] || (a[xc] = function(b) {                                                                 // 1254\n    return a.handleEvent(b);                                                                                         // 1255\n  });                                                                                                                // 1256\n}                                                                                                                    // 1257\n;function R() {                                                                                                      // 1258\n  N.call(this);                                                                                                      // 1259\n  this.W = new O(this);                                                                                              // 1260\n  this.fc = this;                                                                                                    // 1261\n}                                                                                                                    // 1262\ns(R, N);                                                                                                             // 1263\nR.prototype[bc] = !0;                                                                                                // 1264\nf = R.prototype;                                                                                                     // 1265\nf.tb = null;                                                                                                         // 1266\nf.addEventListener = function(a, b, c, d) {                                                                          // 1267\n  oc(this, a, b, c, d);                                                                                              // 1268\n};                                                                                                                   // 1269\nf.removeEventListener = function(a, b, c, d) {                                                                       // 1270\n  tc(this, a, b, c, d);                                                                                              // 1271\n};                                                                                                                   // 1272\nf.dispatchEvent = function(a) {                                                                                      // 1273\n  var b, c = this.tb;                                                                                                // 1274\n  if (c) {                                                                                                           // 1275\n    for (b = [];c;c = c.tb) {                                                                                        // 1276\n      b.push(c);                                                                                                     // 1277\n    }                                                                                                                // 1278\n  }                                                                                                                  // 1279\n  var c = this.fc, d = a.type || a;                                                                                  // 1280\n  if (n(a)) {                                                                                                        // 1281\n    a = new P(a, c);                                                                                                 // 1282\n  } else {                                                                                                           // 1283\n    if (a instanceof P) {                                                                                            // 1284\n      a.target = a.target || c;                                                                                      // 1285\n    } else {                                                                                                         // 1286\n      var e = a;                                                                                                     // 1287\n      a = new P(d, c);                                                                                               // 1288\n      Wa(a, e);                                                                                                      // 1289\n    }                                                                                                                // 1290\n  }                                                                                                                  // 1291\n  var e = !0, g;                                                                                                     // 1292\n  if (b) {                                                                                                           // 1293\n    for (var h = b.length - 1;!a.ka && 0 <= h;h--) {                                                                 // 1294\n      g = a.currentTarget = b[h], e = yc(g, d, !0, a) && e;                                                          // 1295\n    }                                                                                                                // 1296\n  }                                                                                                                  // 1297\n  a.ka || (g = a.currentTarget = c, e = yc(g, d, !0, a) && e, a.ka || (e = yc(g, d, !1, a) && e));                   // 1298\n  if (b) {                                                                                                           // 1299\n    for (h = 0;!a.ka && h < b.length;h++) {                                                                          // 1300\n      g = a.currentTarget = b[h], e = yc(g, d, !1, a) && e;                                                          // 1301\n    }                                                                                                                // 1302\n  }                                                                                                                  // 1303\n  return e;                                                                                                          // 1304\n};                                                                                                                   // 1305\nf.u = function() {                                                                                                   // 1306\n  R.oa.u.call(this);                                                                                                 // 1307\n  this.W && this.W.Xa(void 0);                                                                                       // 1308\n  this.tb = null;                                                                                                    // 1309\n};                                                                                                                   // 1310\nf.Ra = function(a, b, c, d) {                                                                                        // 1311\n  return this.W.add(String(a), b, !1, c, d);                                                                         // 1312\n};                                                                                                                   // 1313\nf.vb = function(a, b, c, d) {                                                                                        // 1314\n  return this.W.remove(String(a), b, c, d);                                                                          // 1315\n};                                                                                                                   // 1316\nfunction yc(a, b, c, d) {                                                                                            // 1317\n  b = a.W.s[String(b)];                                                                                              // 1318\n  if (!b) {                                                                                                          // 1319\n    return!0;                                                                                                        // 1320\n  }                                                                                                                  // 1321\n  b = bb(b);                                                                                                         // 1322\n  for (var e = !0, g = 0;g < b.length;++g) {                                                                         // 1323\n    var h = b[g];                                                                                                    // 1324\n    if (h && !h.ma && h.capture == c) {                                                                              // 1325\n      var k = h.ea, u = h.Oa || h.src;                                                                               // 1326\n      h.Ia && hc(a.W, h);                                                                                            // 1327\n      e = !1 !== k.call(u, d) && e;                                                                                  // 1328\n    }                                                                                                                // 1329\n  }                                                                                                                  // 1330\n  return e && !1 != d.Yb;                                                                                            // 1331\n}                                                                                                                    // 1332\nf.xa = function(a, b, c, d) {                                                                                        // 1333\n  return this.W.xa(String(a), b, c, d);                                                                              // 1334\n};                                                                                                                   // 1335\nfunction zc(a, b) {                                                                                                  // 1336\n  R.call(this);                                                                                                      // 1337\n  this.da = a || 1;                                                                                                  // 1338\n  this.qa = b || l;                                                                                                  // 1339\n  this.ib = p(this.Fc, this);                                                                                        // 1340\n  this.sb = q();                                                                                                     // 1341\n}                                                                                                                    // 1342\ns(zc, R);                                                                                                            // 1343\nf = zc.prototype;                                                                                                    // 1344\nf.enabled = !1;                                                                                                      // 1345\nf.l = null;                                                                                                          // 1346\nf.setInterval = function(a) {                                                                                        // 1347\n  this.da = a;                                                                                                       // 1348\n  this.l && this.enabled ? (this.stop(), this.start()) : this.l && this.stop();                                      // 1349\n};                                                                                                                   // 1350\nf.Fc = function() {                                                                                                  // 1351\n  if (this.enabled) {                                                                                                // 1352\n    var a = q() - this.sb;                                                                                           // 1353\n    0 < a && a < 0.8 * this.da ? this.l = this.qa.setTimeout(this.ib, this.da - a) : (this.l && (this.qa.clearTimeout(this.l), this.l = null), this.dispatchEvent(Ac), this.enabled && (this.l = this.qa.setTimeout(this.ib, this.da), this.sb = q()));\n  }                                                                                                                  // 1355\n};                                                                                                                   // 1356\nf.start = function() {                                                                                               // 1357\n  this.enabled = !0;                                                                                                 // 1358\n  this.l || (this.l = this.qa.setTimeout(this.ib, this.da), this.sb = q());                                          // 1359\n};                                                                                                                   // 1360\nf.stop = function() {                                                                                                // 1361\n  this.enabled = !1;                                                                                                 // 1362\n  this.l && (this.qa.clearTimeout(this.l), this.l = null);                                                           // 1363\n};                                                                                                                   // 1364\nf.u = function() {                                                                                                   // 1365\n  zc.oa.u.call(this);                                                                                                // 1366\n  this.stop();                                                                                                       // 1367\n  delete this.qa;                                                                                                    // 1368\n};                                                                                                                   // 1369\nvar Ac = \"tick\";                                                                                                     // 1370\nfunction Bc(a, b, c) {                                                                                               // 1371\n  if (fa(a)) {                                                                                                       // 1372\n    c && (a = p(a, c));                                                                                              // 1373\n  } else {                                                                                                           // 1374\n    if (a && \"function\" == typeof a.handleEvent) {                                                                   // 1375\n      a = p(a.handleEvent, a);                                                                                       // 1376\n    } else {                                                                                                         // 1377\n      throw Error(\"Invalid listener argument\");                                                                      // 1378\n    }                                                                                                                // 1379\n  }                                                                                                                  // 1380\n  return 2147483647 < b ? -1 : l.setTimeout(a, b || 0);                                                              // 1381\n}                                                                                                                    // 1382\n;function Cc() {                                                                                                     // 1383\n}                                                                                                                    // 1384\nCc.prototype.Ab = null;                                                                                              // 1385\nfunction Dc(a) {                                                                                                     // 1386\n  var b;                                                                                                             // 1387\n  (b = a.Ab) || (b = {}, Ec(a) && (b[0] = !0, b[1] = !0), b = a.Ab = b);                                             // 1388\n  return b;                                                                                                          // 1389\n}                                                                                                                    // 1390\n;var Fc;                                                                                                             // 1391\nfunction Gc() {                                                                                                      // 1392\n}                                                                                                                    // 1393\ns(Gc, Cc);                                                                                                           // 1394\nfunction Hc(a) {                                                                                                     // 1395\n  return(a = Ec(a)) ? new ActiveXObject(a) : new XMLHttpRequest;                                                     // 1396\n}                                                                                                                    // 1397\nfunction Ec(a) {                                                                                                     // 1398\n  if (!a.Kb && \"undefined\" == typeof XMLHttpRequest && \"undefined\" != typeof ActiveXObject) {                        // 1399\n    for (var b = [\"MSXML2.XMLHTTP.6.0\", \"MSXML2.XMLHTTP.3.0\", \"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\"], c = 0;c < b.length;c++) {\n      var d = b[c];                                                                                                  // 1401\n      try {                                                                                                          // 1402\n        return new ActiveXObject(d), a.Kb = d;                                                                       // 1403\n      } catch (e) {                                                                                                  // 1404\n      }                                                                                                              // 1405\n    }                                                                                                                // 1406\n    throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");       // 1407\n  }                                                                                                                  // 1408\n  return a.Kb;                                                                                                       // 1409\n}                                                                                                                    // 1410\nFc = new Gc;                                                                                                         // 1411\nfunction Ic(a) {                                                                                                     // 1412\n  R.call(this);                                                                                                      // 1413\n  this.headers = new cb;                                                                                             // 1414\n  this.gb = a || null;                                                                                               // 1415\n  this.T = !1;                                                                                                       // 1416\n  this.fb = this.f = null;                                                                                           // 1417\n  this.Mb = this.Qa = \"\";                                                                                            // 1418\n  this.ja = 0;                                                                                                       // 1419\n  this.q = \"\";                                                                                                       // 1420\n  this.ca = this.qb = this.Pa = this.nb = !1;                                                                        // 1421\n  this.Fa = 0;                                                                                                       // 1422\n  this.bb = null;                                                                                                    // 1423\n  this.Xb = Jc;                                                                                                      // 1424\n  this.cb = this.dc = !1;                                                                                            // 1425\n}                                                                                                                    // 1426\ns(Ic, R);                                                                                                            // 1427\nvar Jc = \"\";                                                                                                         // 1428\nIc.prototype.r = Vb(\"goog.net.XhrIo\");                                                                               // 1429\nvar Kc = /^https?$/i, Lc = [\"POST\", \"PUT\"];                                                                          // 1430\nf = Ic.prototype;                                                                                                    // 1431\nf.send = function(a, b, c, d) {                                                                                      // 1432\n  if (this.f) {                                                                                                      // 1433\n    throw Error(\"[goog.net.XhrIo] Object is active with another request=\" + this.Qa + \"; newUri=\" + a);              // 1434\n  }                                                                                                                  // 1435\n  b = b ? b.toUpperCase() : \"GET\";                                                                                   // 1436\n  this.Qa = a;                                                                                                       // 1437\n  this.q = \"\";                                                                                                       // 1438\n  this.ja = 0;                                                                                                       // 1439\n  this.Mb = b;                                                                                                       // 1440\n  this.nb = !1;                                                                                                      // 1441\n  this.T = !0;                                                                                                       // 1442\n  this.f = this.gb ? Hc(this.gb) : Hc(Fc);                                                                           // 1443\n  this.fb = this.gb ? Dc(this.gb) : Dc(Fc);                                                                          // 1444\n  this.f.onreadystatechange = p(this.Qb, this);                                                                      // 1445\n  try {                                                                                                              // 1446\n    J(this.r, S(this, \"Opening Xhr\")), this.qb = !0, this.f.open(b, String(a), !0), this.qb = !1;                    // 1447\n  } catch (e) {                                                                                                      // 1448\n    J(this.r, S(this, \"Error opening Xhr: \" + e.message));                                                           // 1449\n    Mc(this, e);                                                                                                     // 1450\n    return;                                                                                                          // 1451\n  }                                                                                                                  // 1452\n  a = c || \"\";                                                                                                       // 1453\n  var g = this.headers.n();                                                                                          // 1454\n  d && fb(d, function(a, b) {                                                                                        // 1455\n    g.set(b, a);                                                                                                     // 1456\n  });                                                                                                                // 1457\n  d = Za(g.ba());                                                                                                    // 1458\n  c = l.FormData && a instanceof l.FormData;                                                                         // 1459\n  !(0 <= Xa(Lc, b)) || d || c || g.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");           // 1460\n  fb(g, function(a, b) {                                                                                             // 1461\n    this.f.setRequestHeader(b, a);                                                                                   // 1462\n  }, this);                                                                                                          // 1463\n  this.Xb && (this.f.responseType = this.Xb);                                                                        // 1464\n  \"withCredentials\" in this.f && (this.f.withCredentials = this.dc);                                                 // 1465\n  try {                                                                                                              // 1466\n    Nc(this), 0 < this.Fa && (this.cb = Oc(this.f), J(this.r, S(this, \"Will abort after \" + this.Fa + \"ms if incomplete, xhr2 \" + this.cb)), this.cb ? (this.f.timeout = this.Fa, this.f.ontimeout = p(this.pa, this)) : this.bb = Bc(this.pa, this.Fa, this)), J(this.r, S(this, \"Sending request\")), this.Pa = !0, this.f.send(a), this.Pa = !1;\n  } catch (h) {                                                                                                      // 1468\n    J(this.r, S(this, \"Send error: \" + h.message)), Mc(this, h);                                                     // 1469\n  }                                                                                                                  // 1470\n};                                                                                                                   // 1471\nfunction Oc(a) {                                                                                                     // 1472\n  return y && A(9) && \"number\" == typeof a.timeout && void 0 !== a.ontimeout;                                        // 1473\n}                                                                                                                    // 1474\nfunction $a(a) {                                                                                                     // 1475\n  return \"content-type\" == a.toLowerCase();                                                                          // 1476\n}                                                                                                                    // 1477\nf.pa = function() {                                                                                                  // 1478\n  \"undefined\" != typeof aa && this.f && (this.q = \"Timed out after \" + this.Fa + \"ms, aborting\", this.ja = 8, J(this.r, S(this, this.q)), this.dispatchEvent(\"timeout\"), this.abort(8));\n};                                                                                                                   // 1480\nfunction Mc(a, b) {                                                                                                  // 1481\n  a.T = !1;                                                                                                          // 1482\n  a.f && (a.ca = !0, a.f.abort(), a.ca = !1);                                                                        // 1483\n  a.q = b;                                                                                                           // 1484\n  a.ja = 5;                                                                                                          // 1485\n  Pc(a);                                                                                                             // 1486\n  Qc(a);                                                                                                             // 1487\n}                                                                                                                    // 1488\nfunction Pc(a) {                                                                                                     // 1489\n  a.nb || (a.nb = !0, a.dispatchEvent(\"complete\"), a.dispatchEvent(\"error\"));                                        // 1490\n}                                                                                                                    // 1491\nf.abort = function(a) {                                                                                              // 1492\n  this.f && this.T && (J(this.r, S(this, \"Aborting\")), this.T = !1, this.ca = !0, this.f.abort(), this.ca = !1, this.ja = a || 7, this.dispatchEvent(\"complete\"), this.dispatchEvent(\"abort\"), Qc(this));\n};                                                                                                                   // 1494\nf.u = function() {                                                                                                   // 1495\n  this.f && (this.T && (this.T = !1, this.ca = !0, this.f.abort(), this.ca = !1), Qc(this, !0));                     // 1496\n  Ic.oa.u.call(this);                                                                                                // 1497\n};                                                                                                                   // 1498\nf.Qb = function() {                                                                                                  // 1499\n  this.mb || (this.qb || this.Pa || this.ca ? Rc(this) : this.uc());                                                 // 1500\n};                                                                                                                   // 1501\nf.uc = function() {                                                                                                  // 1502\n  Rc(this);                                                                                                          // 1503\n};                                                                                                                   // 1504\nfunction Rc(a) {                                                                                                     // 1505\n  if (a.T && \"undefined\" != typeof aa) {                                                                             // 1506\n    if (a.fb[1] && 4 == T(a) && 2 == Sc(a)) {                                                                        // 1507\n      J(a.r, S(a, \"Local request error detected and ignored\"));                                                      // 1508\n    } else {                                                                                                         // 1509\n      if (a.Pa && 4 == T(a)) {                                                                                       // 1510\n        Bc(a.Qb, 0, a);                                                                                              // 1511\n      } else {                                                                                                       // 1512\n        if (a.dispatchEvent(\"readystatechange\"), 4 == T(a)) {                                                        // 1513\n          J(a.r, S(a, \"Request complete\"));                                                                          // 1514\n          a.T = !1;                                                                                                  // 1515\n          try {                                                                                                      // 1516\n            var b = Sc(a), c, d;                                                                                     // 1517\n            a: {                                                                                                     // 1518\n              switch(b) {                                                                                            // 1519\n                case 200:                                                                                            // 1520\n                ;                                                                                                    // 1521\n                case 201:                                                                                            // 1522\n                ;                                                                                                    // 1523\n                case 202:                                                                                            // 1524\n                ;                                                                                                    // 1525\n                case 204:                                                                                            // 1526\n                ;                                                                                                    // 1527\n                case 206:                                                                                            // 1528\n                ;                                                                                                    // 1529\n                case 304:                                                                                            // 1530\n                ;                                                                                                    // 1531\n                case 1223:                                                                                           // 1532\n                  d = !0;                                                                                            // 1533\n                  break a;                                                                                           // 1534\n                default:                                                                                             // 1535\n                  d = !1;                                                                                            // 1536\n              }                                                                                                      // 1537\n            }                                                                                                        // 1538\n            if (!(c = d)) {                                                                                          // 1539\n              var e;                                                                                                 // 1540\n              if (e = 0 === b) {                                                                                     // 1541\n                var g = Ra(String(a.Qa))[1] || null;                                                                 // 1542\n                if (!g && self.location) {                                                                           // 1543\n                  var h = self.location.protocol, g = h.substr(0, h.length - 1)                                      // 1544\n                }                                                                                                    // 1545\n                e = !Kc.test(g ? g.toLowerCase() : \"\");                                                              // 1546\n              }                                                                                                      // 1547\n              c = e;                                                                                                 // 1548\n            }                                                                                                        // 1549\n            if (c) {                                                                                                 // 1550\n              a.dispatchEvent(\"complete\"), a.dispatchEvent(\"success\");                                               // 1551\n            } else {                                                                                                 // 1552\n              a.ja = 6;                                                                                              // 1553\n              var k;                                                                                                 // 1554\n              try {                                                                                                  // 1555\n                k = 2 < T(a) ? a.f.statusText : \"\";                                                                  // 1556\n              } catch (u) {                                                                                          // 1557\n                J(a.r, \"Can not get status: \" + u.message), k = \"\";                                                  // 1558\n              }                                                                                                      // 1559\n              a.q = k + \" [\" + Sc(a) + \"]\";                                                                          // 1560\n              Pc(a);                                                                                                 // 1561\n            }                                                                                                        // 1562\n          } finally {                                                                                                // 1563\n            Qc(a);                                                                                                   // 1564\n          }                                                                                                          // 1565\n        }                                                                                                            // 1566\n      }                                                                                                              // 1567\n    }                                                                                                                // 1568\n  }                                                                                                                  // 1569\n}                                                                                                                    // 1570\nfunction Qc(a, b) {                                                                                                  // 1571\n  if (a.f) {                                                                                                         // 1572\n    Nc(a);                                                                                                           // 1573\n    var c = a.f, d = a.fb[0] ? ca : null;                                                                            // 1574\n    a.f = null;                                                                                                      // 1575\n    a.fb = null;                                                                                                     // 1576\n    b || a.dispatchEvent(\"ready\");                                                                                   // 1577\n    try {                                                                                                            // 1578\n      c.onreadystatechange = d;                                                                                      // 1579\n    } catch (e) {                                                                                                    // 1580\n      (c = a.r) && c.J(\"Problem encountered resetting onreadystatechange: \" + e.message, void 0);                    // 1581\n    }                                                                                                                // 1582\n  }                                                                                                                  // 1583\n}                                                                                                                    // 1584\nfunction Nc(a) {                                                                                                     // 1585\n  a.f && a.cb && (a.f.ontimeout = null);                                                                             // 1586\n  \"number\" == typeof a.bb && (l.clearTimeout(a.bb), a.bb = null);                                                    // 1587\n}                                                                                                                    // 1588\nf.isActive = function() {                                                                                            // 1589\n  return!!this.f;                                                                                                    // 1590\n};                                                                                                                   // 1591\nfunction T(a) {                                                                                                      // 1592\n  return a.f ? a.f.readyState : 0;                                                                                   // 1593\n}                                                                                                                    // 1594\nfunction Sc(a) {                                                                                                     // 1595\n  try {                                                                                                              // 1596\n    return 2 < T(a) ? a.f.status : -1;                                                                               // 1597\n  } catch (b) {                                                                                                      // 1598\n    return-1;                                                                                                        // 1599\n  }                                                                                                                  // 1600\n}                                                                                                                    // 1601\nfunction Tc(a) {                                                                                                     // 1602\n  try {                                                                                                              // 1603\n    return a.f ? a.f.responseText : \"\";                                                                              // 1604\n  } catch (b) {                                                                                                      // 1605\n    return J(a.r, \"Can not get responseText: \" + b.message), \"\";                                                     // 1606\n  }                                                                                                                  // 1607\n}                                                                                                                    // 1608\nf.Ib = function() {                                                                                                  // 1609\n  return n(this.q) ? this.q : String(this.q);                                                                        // 1610\n};                                                                                                                   // 1611\nfunction S(a, b) {                                                                                                   // 1612\n  return b + \" [\" + a.Mb + \" \" + a.Qa + \" \" + Sc(a) + \"]\";                                                           // 1613\n}                                                                                                                    // 1614\n;function Uc() {                                                                                                     // 1615\n  this.Wb = q();                                                                                                     // 1616\n}                                                                                                                    // 1617\nnew Uc;                                                                                                              // 1618\nUc.prototype.set = function(a) {                                                                                     // 1619\n  this.Wb = a;                                                                                                       // 1620\n};                                                                                                                   // 1621\nUc.prototype.reset = function() {                                                                                    // 1622\n  this.set(q());                                                                                                     // 1623\n};                                                                                                                   // 1624\nUc.prototype.get = function() {                                                                                      // 1625\n  return this.Wb;                                                                                                    // 1626\n};                                                                                                                   // 1627\nfunction Vc(a) {                                                                                                     // 1628\n  N.call(this);                                                                                                      // 1629\n  this.e = a;                                                                                                        // 1630\n  this.j = {};                                                                                                       // 1631\n}                                                                                                                    // 1632\ns(Vc, N);                                                                                                            // 1633\nvar Wc = [];                                                                                                         // 1634\nf = Vc.prototype;                                                                                                    // 1635\nf.Ra = function(a, b, c, d) {                                                                                        // 1636\n  m(b) || (Wc[0] = b, b = Wc);                                                                                       // 1637\n  for (var e = 0;e < b.length;e++) {                                                                                 // 1638\n    var g = oc(a, b[e], c || this.handleEvent, d || !1, this.e || this);                                             // 1639\n    if (!g) {                                                                                                        // 1640\n      break;                                                                                                         // 1641\n    }                                                                                                                // 1642\n    this.j[g.key] = g;                                                                                               // 1643\n  }                                                                                                                  // 1644\n  return this;                                                                                                       // 1645\n};                                                                                                                   // 1646\nf.vb = function(a, b, c, d, e) {                                                                                     // 1647\n  if (m(b)) {                                                                                                        // 1648\n    for (var g = 0;g < b.length;g++) {                                                                               // 1649\n      this.vb(a, b[g], c, d, e);                                                                                     // 1650\n    }                                                                                                                // 1651\n  } else {                                                                                                           // 1652\n    c = c || this.handleEvent, e = e || this.e || this, c = pc(c), d = !!d, b = cc(a) ? a.xa(b, c, d, e) : a ? (a = qc(a)) ? a.xa(b, c, d, e) : null : null, b && (uc(b), delete this.j[b.key]);\n  }                                                                                                                  // 1654\n  return this;                                                                                                       // 1655\n};                                                                                                                   // 1656\nf.Xa = function() {                                                                                                  // 1657\n  var a = this.j, b = uc, c;                                                                                         // 1658\n  for (c in a) {                                                                                                     // 1659\n    b.call(void 0, a[c], c, a);                                                                                      // 1660\n  }                                                                                                                  // 1661\n  this.j = {};                                                                                                       // 1662\n};                                                                                                                   // 1663\nf.u = function() {                                                                                                   // 1664\n  Vc.oa.u.call(this);                                                                                                // 1665\n  this.Xa();                                                                                                         // 1666\n};                                                                                                                   // 1667\nf.handleEvent = function() {                                                                                         // 1668\n  throw Error(\"EventHandler.handleEvent not implemented\");                                                           // 1669\n};                                                                                                                   // 1670\nfunction Xc(a, b, c) {                                                                                               // 1671\n  N.call(this);                                                                                                      // 1672\n  this.pc = a;                                                                                                       // 1673\n  this.da = b;                                                                                                       // 1674\n  this.e = c;                                                                                                        // 1675\n  this.kc = p(this.vc, this);                                                                                        // 1676\n}                                                                                                                    // 1677\ns(Xc, N);                                                                                                            // 1678\nf = Xc.prototype;                                                                                                    // 1679\nf.Za = !1;                                                                                                           // 1680\nf.Vb = 0;                                                                                                            // 1681\nf.l = null;                                                                                                          // 1682\nf.stop = function() {                                                                                                // 1683\n  this.l && (l.clearTimeout(this.l), this.l = null, this.Za = !1);                                                   // 1684\n};                                                                                                                   // 1685\nf.u = function() {                                                                                                   // 1686\n  Xc.oa.u.call(this);                                                                                                // 1687\n  this.stop();                                                                                                       // 1688\n};                                                                                                                   // 1689\nf.vc = function() {                                                                                                  // 1690\n  this.l = null;                                                                                                     // 1691\n  this.Za && !this.Vb && (this.Za = !1, Yc(this));                                                                   // 1692\n};                                                                                                                   // 1693\nfunction Yc(a) {                                                                                                     // 1694\n  a.l = Bc(a.kc, a.da);                                                                                              // 1695\n  a.pc.call(a.e);                                                                                                    // 1696\n}                                                                                                                    // 1697\n;function U(a, b, c, d, e) {                                                                                         // 1698\n  this.b = a;                                                                                                        // 1699\n  this.a = b;                                                                                                        // 1700\n  this.Y = c;                                                                                                        // 1701\n  this.B = d;                                                                                                        // 1702\n  this.Ea = e || 1;                                                                                                  // 1703\n  this.pa = Zc;                                                                                                      // 1704\n  this.ob = new Vc(this);                                                                                            // 1705\n  this.Ta = new zc;                                                                                                  // 1706\n  this.Ta.setInterval($c);                                                                                           // 1707\n}                                                                                                                    // 1708\nf = U.prototype;                                                                                                     // 1709\nf.v = null;                                                                                                          // 1710\nf.F = !1;                                                                                                            // 1711\nf.ta = null;                                                                                                         // 1712\nf.xb = null;                                                                                                         // 1713\nf.Da = null;                                                                                                         // 1714\nf.ra = null;                                                                                                         // 1715\nf.U = null;                                                                                                          // 1716\nf.w = null;                                                                                                          // 1717\nf.X = null;                                                                                                          // 1718\nf.k = null;                                                                                                          // 1719\nf.Ha = 0;                                                                                                            // 1720\nf.K = null;                                                                                                          // 1721\nf.sa = null;                                                                                                         // 1722\nf.q = null;                                                                                                          // 1723\nf.g = -1;                                                                                                            // 1724\nf.Zb = !0;                                                                                                           // 1725\nf.Z = !1;                                                                                                            // 1726\nf.la = 0;                                                                                                            // 1727\nf.Va = null;                                                                                                         // 1728\nvar Zc = 45E3, $c = 250;                                                                                             // 1729\nfunction ad(a, b) {                                                                                                  // 1730\n  switch(a) {                                                                                                        // 1731\n    case 0:                                                                                                          // 1732\n      return \"Non-200 return code (\" + b + \")\";                                                                      // 1733\n    case 1:                                                                                                          // 1734\n      return \"XMLHTTP failure (no data)\";                                                                            // 1735\n    case 2:                                                                                                          // 1736\n      return \"HttpConnection timeout\";                                                                               // 1737\n    default:                                                                                                         // 1738\n      return \"Unknown error\";                                                                                        // 1739\n  }                                                                                                                  // 1740\n}                                                                                                                    // 1741\nvar bd = {}, cd = {};                                                                                                // 1742\nfunction dd() {                                                                                                      // 1743\n  return!y || y && 10 <= Ma;                                                                                         // 1744\n}                                                                                                                    // 1745\nf = U.prototype;                                                                                                     // 1746\nf.S = function(a) {                                                                                                  // 1747\n  this.v = a;                                                                                                        // 1748\n};                                                                                                                   // 1749\nf.setTimeout = function(a) {                                                                                         // 1750\n  this.pa = a;                                                                                                       // 1751\n};                                                                                                                   // 1752\nf.bc = function(a) {                                                                                                 // 1753\n  this.la = a;                                                                                                       // 1754\n};                                                                                                                   // 1755\nfunction ed(a, b, c) {                                                                                               // 1756\n  a.ra = 1;                                                                                                          // 1757\n  a.U = G(b.n());                                                                                                    // 1758\n  a.X = c;                                                                                                           // 1759\n  a.Cb = !0;                                                                                                         // 1760\n  fd(a, null);                                                                                                       // 1761\n}                                                                                                                    // 1762\nfunction gd(a, b, c, d, e) {                                                                                         // 1763\n  a.ra = 1;                                                                                                          // 1764\n  a.U = G(b.n());                                                                                                    // 1765\n  a.X = null;                                                                                                        // 1766\n  a.Cb = c;                                                                                                          // 1767\n  e && (a.Zb = !1);                                                                                                  // 1768\n  fd(a, d);                                                                                                          // 1769\n}                                                                                                                    // 1770\nfunction fd(a, b) {                                                                                                  // 1771\n  a.Da = q();                                                                                                        // 1772\n  hd(a);                                                                                                             // 1773\n  a.w = a.U.n();                                                                                                     // 1774\n  sb(a.w, \"t\", a.Ea);                                                                                                // 1775\n  a.Ha = 0;                                                                                                          // 1776\n  a.k = a.b.lb(a.b.$a() ? b : null);                                                                                 // 1777\n  0 < a.la && (a.Va = new Xc(p(a.ec, a, a.k), a.la));                                                                // 1778\n  a.ob.Ra(a.k, \"readystatechange\", a.Bc);                                                                            // 1779\n  var c;                                                                                                             // 1780\n  if (a.v) {                                                                                                         // 1781\n    c = a.v;                                                                                                         // 1782\n    var d = {}, e;                                                                                                   // 1783\n    for (e in c) {                                                                                                   // 1784\n      d[e] = c[e];                                                                                                   // 1785\n    }                                                                                                                // 1786\n    c = d;                                                                                                           // 1787\n  } else {                                                                                                           // 1788\n    c = {};                                                                                                          // 1789\n  }                                                                                                                  // 1790\n  a.X ? (a.sa = \"POST\", c[\"Content-Type\"] = \"application/x-www-form-urlencoded\", a.k.send(a.w, a.sa, a.X, c)) : (a.sa = \"GET\", a.Zb && !z && (c.Connection = \"close\"), a.k.send(a.w, a.sa, null, c));\n  a.b.H(id);                                                                                                         // 1792\n  if (d = a.X) {                                                                                                     // 1793\n    for (c = \"\", d = d.split(\"&\"), e = 0;e < d.length;e++) {                                                         // 1794\n      var g = d[e].split(\"=\");                                                                                       // 1795\n      if (1 < g.length) {                                                                                            // 1796\n        var h = g[0], g = g[1], k = h.split(\"_\");                                                                    // 1797\n        c = 2 <= k.length && \"type\" == k[1] ? c + (h + \"=\" + g + \"&\") : c + (h + \"=redacted&\");                      // 1798\n      }                                                                                                              // 1799\n    }                                                                                                                // 1800\n  } else {                                                                                                           // 1801\n    c = null;                                                                                                        // 1802\n  }                                                                                                                  // 1803\n  a.a.info(\"XMLHTTP REQ (\" + a.B + \") [attempt \" + a.Ea + \"]: \" + a.sa + \"\\n\" + a.w + \"\\n\" + c);                     // 1804\n}                                                                                                                    // 1805\nf.Bc = function(a) {                                                                                                 // 1806\n  a = a.target;                                                                                                      // 1807\n  var b = this.Va;                                                                                                   // 1808\n  b && 3 == T(a) ? (this.a.debug(\"Throttling readystatechange.\"), b.l || b.Vb ? b.Za = !0 : Yc(b)) : this.ec(a);     // 1809\n};                                                                                                                   // 1810\nf.ec = function(a) {                                                                                                 // 1811\n  try {                                                                                                              // 1812\n    if (a == this.k) {                                                                                               // 1813\n      a: {                                                                                                           // 1814\n        var b = T(this.k), c = this.k.ja, d = Sc(this.k);                                                            // 1815\n        if (!dd() || z && !A(\"420+\")) {                                                                              // 1816\n          if (4 > b) {                                                                                               // 1817\n            break a;                                                                                                 // 1818\n          }                                                                                                          // 1819\n        } else {                                                                                                     // 1820\n          if (3 > b || 3 == b && !Aa && !Tc(this.k)) {                                                               // 1821\n            break a;                                                                                                 // 1822\n          }                                                                                                          // 1823\n        }                                                                                                            // 1824\n        this.Z || 4 != b || 7 == c || (8 == c || 0 >= d ? this.b.H(jd) : this.b.H(kd));                              // 1825\n        ld(this);                                                                                                    // 1826\n        var e = Sc(this.k);                                                                                          // 1827\n        this.g = e;                                                                                                  // 1828\n        var g = Tc(this.k);                                                                                          // 1829\n        g || this.a.debug(\"No response text for uri \" + this.w + \" status \" + e);                                    // 1830\n        this.F = 200 == e;                                                                                           // 1831\n        this.a.info(\"XMLHTTP RESP (\" + this.B + \") [ attempt \" + this.Ea + \"]: \" + this.sa + \"\\n\" + this.w + \"\\n\" + b + \" \" + e);\n        this.F ? (4 == b && V(this), this.Cb ? (md(this, b, g), Aa && this.F && 3 == b && (this.ob.Ra(this.Ta, Ac, this.Ac), this.Ta.start())) : (Wb(this.a, this.B, g, null), nd(this, g)), this.F && !this.Z && (4 == b ? this.b.Ba(this) : (this.F = !1, hd(this)))) : (400 == e && 0 < g.indexOf(\"Unknown SID\") ? (this.q = 3, W(), this.a.fa(\"XMLHTTP Unknown SID (\" + this.B + \")\")) : (this.q = 0, W(), this.a.fa(\"XMLHTTP Bad status \" + e + \" (\" + this.B + \")\")), V(this), od(this));\n      }                                                                                                              // 1834\n    } else {                                                                                                         // 1835\n      this.a.fa(\"Called back with an unexpected xmlhttp\");                                                           // 1836\n    }                                                                                                                // 1837\n  } catch (h) {                                                                                                      // 1838\n    this.a.debug(\"Failed call to OnXmlHttpReadyStateChanged_\"), this.k && Tc(this.k) ? M(this.a, h, \"ResponseText: \" + Tc(this.k)) : M(this.a, h, \"No response text\");\n  } finally {                                                                                                        // 1840\n  }                                                                                                                  // 1841\n};                                                                                                                   // 1842\nfunction md(a, b, c) {                                                                                               // 1843\n  for (var d = !0;!a.Z && a.Ha < c.length;) {                                                                        // 1844\n    var e = pd(a, c);                                                                                                // 1845\n    if (e == cd) {                                                                                                   // 1846\n      4 == b && (a.q = 4, W(), d = !1);                                                                              // 1847\n      Wb(a.a, a.B, null, \"[Incomplete Response]\");                                                                   // 1848\n      break;                                                                                                         // 1849\n    } else {                                                                                                         // 1850\n      if (e == bd) {                                                                                                 // 1851\n        a.q = 4;                                                                                                     // 1852\n        W();                                                                                                         // 1853\n        Wb(a.a, a.B, c, \"[Invalid Chunk]\");                                                                          // 1854\n        d = !1;                                                                                                      // 1855\n        break;                                                                                                       // 1856\n      } else {                                                                                                       // 1857\n        Wb(a.a, a.B, e, null), nd(a, e);                                                                             // 1858\n      }                                                                                                              // 1859\n    }                                                                                                                // 1860\n  }                                                                                                                  // 1861\n  4 == b && 0 == c.length && (a.q = 1, W(), d = !1);                                                                 // 1862\n  a.F = a.F && d;                                                                                                    // 1863\n  d || (Wb(a.a, a.B, c, \"[Invalid Chunked Response]\"), V(a), od(a));                                                 // 1864\n}                                                                                                                    // 1865\nf.Ac = function() {                                                                                                  // 1866\n  var a = T(this.k), b = Tc(this.k);                                                                                 // 1867\n  this.Ha < b.length && (ld(this), md(this, a, b), this.F && 4 != a && hd(this));                                    // 1868\n};                                                                                                                   // 1869\nfunction pd(a, b) {                                                                                                  // 1870\n  var c = a.Ha, d = b.indexOf(\"\\n\", c);                                                                              // 1871\n  if (-1 == d) {                                                                                                     // 1872\n    return cd;                                                                                                       // 1873\n  }                                                                                                                  // 1874\n  c = Number(b.substring(c, d));                                                                                     // 1875\n  if (isNaN(c)) {                                                                                                    // 1876\n    return bd;                                                                                                       // 1877\n  }                                                                                                                  // 1878\n  d += 1;                                                                                                            // 1879\n  if (d + c > b.length) {                                                                                            // 1880\n    return cd;                                                                                                       // 1881\n  }                                                                                                                  // 1882\n  var e = b.substr(d, c);                                                                                            // 1883\n  a.Ha = d + c;                                                                                                      // 1884\n  return e;                                                                                                          // 1885\n}                                                                                                                    // 1886\nfunction qd(a, b) {                                                                                                  // 1887\n  a.Da = q();                                                                                                        // 1888\n  hd(a);                                                                                                             // 1889\n  var c = b ? window.location.hostname : \"\";                                                                         // 1890\n  a.w = a.U.n();                                                                                                     // 1891\n  F(a.w, \"DOMAIN\", c);                                                                                               // 1892\n  F(a.w, \"t\", a.Ea);                                                                                                 // 1893\n  try {                                                                                                              // 1894\n    a.K = new ActiveXObject(\"htmlfile\");                                                                             // 1895\n  } catch (d) {                                                                                                      // 1896\n    a.a.J(\"ActiveX blocked\");                                                                                        // 1897\n    V(a);                                                                                                            // 1898\n    a.q = 7;                                                                                                         // 1899\n    W();                                                                                                             // 1900\n    od(a);                                                                                                           // 1901\n    return;                                                                                                          // 1902\n  }                                                                                                                  // 1903\n  var e = \"<html><body>\";                                                                                            // 1904\n  b && (e += '<script>document.domain=\"' + c + '\"\\x3c/script>');                                                     // 1905\n  e += \"</body></html>\";                                                                                             // 1906\n  a.K.open();                                                                                                        // 1907\n  a.K.write(e);                                                                                                      // 1908\n  a.K.close();                                                                                                       // 1909\n  a.K.parentWindow.m = p(a.yc, a);                                                                                   // 1910\n  a.K.parentWindow.d = p(a.Ub, a, !0);                                                                               // 1911\n  a.K.parentWindow.rpcClose = p(a.Ub, a, !1);                                                                        // 1912\n  c = a.K.createElement(\"div\");                                                                                      // 1913\n  a.K.parentWindow.document.body.appendChild(c);                                                                     // 1914\n  c.innerHTML = '<iframe src=\"' + a.w + '\"></iframe>';                                                               // 1915\n  a.a.info(\"TRIDENT REQ (\" + a.B + \") [ attempt \" + a.Ea + \"]: GET\\n\" + a.w);                                        // 1916\n  a.b.H(id);                                                                                                         // 1917\n}                                                                                                                    // 1918\nf.yc = function(a) {                                                                                                 // 1919\n  X(p(this.xc, this, a), 0);                                                                                         // 1920\n};                                                                                                                   // 1921\nf.xc = function(a) {                                                                                                 // 1922\n  if (!this.Z) {                                                                                                     // 1923\n    var b = this.a;                                                                                                  // 1924\n    b.info(\"TRIDENT TEXT (\" + this.B + \"): \" + Xb(b, a));                                                            // 1925\n    ld(this);                                                                                                        // 1926\n    nd(this, a);                                                                                                     // 1927\n    hd(this);                                                                                                        // 1928\n  }                                                                                                                  // 1929\n};                                                                                                                   // 1930\nf.Ub = function(a) {                                                                                                 // 1931\n  X(p(this.wc, this, a), 0);                                                                                         // 1932\n};                                                                                                                   // 1933\nf.wc = function(a) {                                                                                                 // 1934\n  this.Z || (this.a.info(\"TRIDENT TEXT (\" + this.B + \"): \" + a ? \"success\" : \"failure\"), V(this), this.F = a, this.b.Ba(this), this.b.H(rd));\n};                                                                                                                   // 1936\nf.cancel = function() {                                                                                              // 1937\n  this.Z = !0;                                                                                                       // 1938\n  V(this);                                                                                                           // 1939\n};                                                                                                                   // 1940\nfunction hd(a) {                                                                                                     // 1941\n  a.xb = q() + a.pa;                                                                                                 // 1942\n  sd(a, a.pa);                                                                                                       // 1943\n}                                                                                                                    // 1944\nfunction sd(a, b) {                                                                                                  // 1945\n  if (null != a.ta) {                                                                                                // 1946\n    throw Error(\"WatchDog timer not null\");                                                                          // 1947\n  }                                                                                                                  // 1948\n  a.ta = X(p(a.zc, a), b);                                                                                           // 1949\n}                                                                                                                    // 1950\nfunction ld(a) {                                                                                                     // 1951\n  a.ta && (l.clearTimeout(a.ta), a.ta = null);                                                                       // 1952\n}                                                                                                                    // 1953\nf.zc = function() {                                                                                                  // 1954\n  this.ta = null;                                                                                                    // 1955\n  var a = q();                                                                                                       // 1956\n  0 <= a - this.xb ? (this.F && this.a.J(\"Received watchdog timeout even though request loaded successfully\"), this.a.info(\"TIMEOUT: \" + this.w), 2 != this.ra && this.b.H(jd), V(this), this.q = 2, W(), od(this)) : (this.a.fa(\"WatchDog timer called too early\"), sd(this, this.xb - a));\n};                                                                                                                   // 1958\nfunction od(a) {                                                                                                     // 1959\n  a.b.Lb() || a.Z || a.b.Ba(a);                                                                                      // 1960\n}                                                                                                                    // 1961\nfunction V(a) {                                                                                                      // 1962\n  ld(a);                                                                                                             // 1963\n  var b = a.Va;                                                                                                      // 1964\n  b && \"function\" == typeof b.Ja && b.Ja();                                                                          // 1965\n  a.Va = null;                                                                                                       // 1966\n  a.Ta.stop();                                                                                                       // 1967\n  a.ob.Xa();                                                                                                         // 1968\n  a.k && (b = a.k, a.k = null, b.abort(), b.Ja());                                                                   // 1969\n  a.K && (a.K = null);                                                                                               // 1970\n}                                                                                                                    // 1971\nf.Ib = function() {                                                                                                  // 1972\n  return this.q;                                                                                                     // 1973\n};                                                                                                                   // 1974\nfunction nd(a, b) {                                                                                                  // 1975\n  try {                                                                                                              // 1976\n    a.b.Rb(a, b), a.b.H(rd);                                                                                         // 1977\n  } catch (c) {                                                                                                      // 1978\n    M(a.a, c, \"Error in httprequest callback\");                                                                      // 1979\n  }                                                                                                                  // 1980\n}                                                                                                                    // 1981\n;function td(a, b, c, d, e) {                                                                                        // 1982\n  (new L).debug(\"TestLoadImageWithRetries: \" + e);                                                                   // 1983\n  if (0 == d) {                                                                                                      // 1984\n    c(!1);                                                                                                           // 1985\n  } else {                                                                                                           // 1986\n    var g = e || 0;                                                                                                  // 1987\n    d--;                                                                                                             // 1988\n    ud(a, b, function(e) {                                                                                           // 1989\n      e ? c(!0) : l.setTimeout(function() {                                                                          // 1990\n        td(a, b, c, d, g);                                                                                           // 1991\n      }, g);                                                                                                         // 1992\n    });                                                                                                              // 1993\n  }                                                                                                                  // 1994\n}                                                                                                                    // 1995\nfunction ud(a, b, c) {                                                                                               // 1996\n  var d = new L;                                                                                                     // 1997\n  d.debug(\"TestLoadImage: loading \" + a);                                                                            // 1998\n  var e = new Image;                                                                                                 // 1999\n  e.onload = function() {                                                                                            // 2000\n    try {                                                                                                            // 2001\n      d.debug(\"TestLoadImage: loaded\"), vd(e), c(!0);                                                                // 2002\n    } catch (a) {                                                                                                    // 2003\n      M(d, a);                                                                                                       // 2004\n    }                                                                                                                // 2005\n  };                                                                                                                 // 2006\n  e.onerror = function() {                                                                                           // 2007\n    try {                                                                                                            // 2008\n      d.debug(\"TestLoadImage: error\"), vd(e), c(!1);                                                                 // 2009\n    } catch (a) {                                                                                                    // 2010\n      M(d, a);                                                                                                       // 2011\n    }                                                                                                                // 2012\n  };                                                                                                                 // 2013\n  e.onabort = function() {                                                                                           // 2014\n    try {                                                                                                            // 2015\n      d.debug(\"TestLoadImage: abort\"), vd(e), c(!1);                                                                 // 2016\n    } catch (a) {                                                                                                    // 2017\n      M(d, a);                                                                                                       // 2018\n    }                                                                                                                // 2019\n  };                                                                                                                 // 2020\n  e.ontimeout = function() {                                                                                         // 2021\n    try {                                                                                                            // 2022\n      d.debug(\"TestLoadImage: timeout\"), vd(e), c(!1);                                                               // 2023\n    } catch (a) {                                                                                                    // 2024\n      M(d, a);                                                                                                       // 2025\n    }                                                                                                                // 2026\n  };                                                                                                                 // 2027\n  l.setTimeout(function() {                                                                                          // 2028\n    if (e.ontimeout) {                                                                                               // 2029\n      e.ontimeout();                                                                                                 // 2030\n    }                                                                                                                // 2031\n  }, b);                                                                                                             // 2032\n  e.src = a;                                                                                                         // 2033\n}                                                                                                                    // 2034\nfunction vd(a) {                                                                                                     // 2035\n  a.onload = null;                                                                                                   // 2036\n  a.onerror = null;                                                                                                  // 2037\n  a.onabort = null;                                                                                                  // 2038\n  a.ontimeout = null;                                                                                                // 2039\n}                                                                                                                    // 2040\n;function wd(a, b) {                                                                                                 // 2041\n  this.b = a;                                                                                                        // 2042\n  this.a = b;                                                                                                        // 2043\n  this.P = new Zb(0, !0);                                                                                            // 2044\n}                                                                                                                    // 2045\nf = wd.prototype;                                                                                                    // 2046\nf.v = null;                                                                                                          // 2047\nf.A = null;                                                                                                          // 2048\nf.Wa = !1;                                                                                                           // 2049\nf.cc = null;                                                                                                         // 2050\nf.La = null;                                                                                                         // 2051\nf.rb = null;                                                                                                         // 2052\nf.I = null;                                                                                                          // 2053\nf.c = null;                                                                                                          // 2054\nf.g = -1;                                                                                                            // 2055\nf.L = null;                                                                                                          // 2056\nf.ua = null;                                                                                                         // 2057\nf.S = function(a) {                                                                                                  // 2058\n  this.v = a;                                                                                                        // 2059\n};                                                                                                                   // 2060\nf.ac = function(a) {                                                                                                 // 2061\n  this.P = a;                                                                                                        // 2062\n};                                                                                                                   // 2063\nf.kb = function(a) {                                                                                                 // 2064\n  this.I = a;                                                                                                        // 2065\n  a = xd(this.b, this.I);                                                                                            // 2066\n  W();                                                                                                               // 2067\n  this.cc = q();                                                                                                     // 2068\n  var b = this.b.Gb;                                                                                                 // 2069\n  null != b ? (this.L = this.b.correctHostPrefix(b[0]), (this.ua = b[1]) ? (this.c = 1, yd(this)) : (this.c = 2, zd(this))) : (sb(a, \"MODE\", \"init\"), this.A = new U(this, this.a, void 0, void 0, void 0), this.A.S(this.v), gd(this.A, a, !1, null, !0), this.c = 0);\n};                                                                                                                   // 2071\nfunction yd(a) {                                                                                                     // 2072\n  var b = Ad(a.b, a.ua, \"/mail/images/cleardot.gif\");                                                                // 2073\n  G(b);                                                                                                              // 2074\n  td(b.toString(), 5E3, p(a.lc, a), 3, 2E3);                                                                         // 2075\n  a.H(id);                                                                                                           // 2076\n}                                                                                                                    // 2077\nf.lc = function(a) {                                                                                                 // 2078\n  if (a) {                                                                                                           // 2079\n    this.c = 2, zd(this);                                                                                            // 2080\n  } else {                                                                                                           // 2081\n    W();                                                                                                             // 2082\n    var b = this.b;                                                                                                  // 2083\n    b.a.debug(\"Test Connection Blocked\");                                                                            // 2084\n    b.g = b.V.g;                                                                                                     // 2085\n    Z(b, 9);                                                                                                         // 2086\n  }                                                                                                                  // 2087\n  a && this.H(kd);                                                                                                   // 2088\n};                                                                                                                   // 2089\nfunction zd(a) {                                                                                                     // 2090\n  a.a.debug(\"TestConnection: starting stage 2\");                                                                     // 2091\n  var b = a.b.Dc;                                                                                                    // 2092\n  if (null != b) {                                                                                                   // 2093\n    a.a.debug(\"TestConnection: skipping stage 2, precomputed result is \" + b ? \"Buffered\" : \"Unbuffered\"), W(), b ? (W(), Bd(a.b, a, !1)) : (W(), Bd(a.b, a, !0));\n  } else {                                                                                                           // 2095\n    if (a.A = new U(a, a.a, void 0, void 0, void 0), a.A.S(a.v), b = Cd(a.b, a.L, a.I), W(), dd()) {                 // 2096\n      sb(b, \"TYPE\", \"xmlhttp\"), gd(a.A, b, !1, a.L, !1);                                                             // 2097\n    } else {                                                                                                         // 2098\n      sb(b, \"TYPE\", \"html\");                                                                                         // 2099\n      var c = a.A;                                                                                                   // 2100\n      a = Boolean(a.L);                                                                                              // 2101\n      c.ra = 3;                                                                                                      // 2102\n      c.U = G(b.n());                                                                                                // 2103\n      qd(c, a);                                                                                                      // 2104\n    }                                                                                                                // 2105\n  }                                                                                                                  // 2106\n}                                                                                                                    // 2107\nf.lb = function(a) {                                                                                                 // 2108\n  return this.b.lb(a);                                                                                               // 2109\n};                                                                                                                   // 2110\nf.abort = function() {                                                                                               // 2111\n  this.A && (this.A.cancel(), this.A = null);                                                                        // 2112\n  this.g = -1;                                                                                                       // 2113\n};                                                                                                                   // 2114\nf.Lb = function() {                                                                                                  // 2115\n  return!1;                                                                                                          // 2116\n};                                                                                                                   // 2117\nf.Rb = function(a, b) {                                                                                              // 2118\n  this.g = a.g;                                                                                                      // 2119\n  if (0 == this.c) {                                                                                                 // 2120\n    if (this.a.debug(\"TestConnection: Got data for stage 1\"), b) {                                                   // 2121\n      try {                                                                                                          // 2122\n        var c = this.P.parse(b);                                                                                     // 2123\n      } catch (d) {                                                                                                  // 2124\n        M(this.a, d);                                                                                                // 2125\n        Dd(this.b, this);                                                                                            // 2126\n        return;                                                                                                      // 2127\n      }                                                                                                              // 2128\n      this.L = this.b.correctHostPrefix(c[0]);                                                                       // 2129\n      this.ua = c[1];                                                                                                // 2130\n    } else {                                                                                                         // 2131\n      this.a.debug(\"TestConnection: Null responseText\"), Dd(this.b, this);                                           // 2132\n    }                                                                                                                // 2133\n  } else {                                                                                                           // 2134\n    if (2 == this.c) {                                                                                               // 2135\n      if (this.Wa) {                                                                                                 // 2136\n        W(), this.rb = q();                                                                                          // 2137\n      } else {                                                                                                       // 2138\n        if (\"11111\" == b) {                                                                                          // 2139\n          if (W(), this.Wa = !0, this.La = q(), c = this.La - this.cc, dd() || 500 > c) {                            // 2140\n            this.g = 200, this.A.cancel(), this.a.debug(\"Test connection succeeded; using streaming connection\"), W(), Bd(this.b, this, !0);\n          }                                                                                                          // 2142\n        } else {                                                                                                     // 2143\n          W(), this.La = this.rb = q(), this.Wa = !1;                                                                // 2144\n        }                                                                                                            // 2145\n      }                                                                                                              // 2146\n    }                                                                                                                // 2147\n  }                                                                                                                  // 2148\n};                                                                                                                   // 2149\nf.Ba = function() {                                                                                                  // 2150\n  this.g = this.A.g;                                                                                                 // 2151\n  if (!this.A.F) {                                                                                                   // 2152\n    this.a.debug(\"TestConnection: request failed, in state \" + this.c), 0 == this.c ? W() : 2 == this.c && W(), Dd(this.b, this);\n  } else {                                                                                                           // 2154\n    if (0 == this.c) {                                                                                               // 2155\n      this.a.debug(\"TestConnection: request complete for initial check\"), this.ua ? (this.c = 1, yd(this)) : (this.c = 2, zd(this));\n    } else {                                                                                                         // 2157\n      if (2 == this.c) {                                                                                             // 2158\n        this.a.debug(\"TestConnection: request complete for stage 2\");                                                // 2159\n        var a = !1;                                                                                                  // 2160\n        (a = dd() ? this.Wa : 200 > this.rb - this.La ? !1 : !0) ? (this.a.debug(\"Test connection succeeded; using streaming connection\"), W(), Bd(this.b, this, !0)) : (this.a.debug(\"Test connection failed; not using streaming\"), W(), Bd(this.b, this, !1));\n      }                                                                                                              // 2162\n    }                                                                                                                // 2163\n  }                                                                                                                  // 2164\n};                                                                                                                   // 2165\nf.$a = function() {                                                                                                  // 2166\n  return this.b.$a();                                                                                                // 2167\n};                                                                                                                   // 2168\nf.isActive = function() {                                                                                            // 2169\n  return this.b.isActive();                                                                                          // 2170\n};                                                                                                                   // 2171\nf.H = function(a) {                                                                                                  // 2172\n  this.b.H(a);                                                                                                       // 2173\n};                                                                                                                   // 2174\nfunction Ed(a, b, c) {                                                                                               // 2175\n  this.Bb = a || null;                                                                                               // 2176\n  this.c = Fd;                                                                                                       // 2177\n  this.t = [];                                                                                                       // 2178\n  this.Q = [];                                                                                                       // 2179\n  this.a = new L;                                                                                                    // 2180\n  this.P = new Zb(0, !0);                                                                                            // 2181\n  this.Gb = b || null;                                                                                               // 2182\n  this.Dc = null != c ? c : null;                                                                                    // 2183\n}                                                                                                                    // 2184\nfunction Gd(a, b) {                                                                                                  // 2185\n  this.Ob = a;                                                                                                       // 2186\n  this.map = b;                                                                                                      // 2187\n}                                                                                                                    // 2188\nf = Ed.prototype;                                                                                                    // 2189\nf.v = null;                                                                                                          // 2190\nf.wa = null;                                                                                                         // 2191\nf.p = null;                                                                                                          // 2192\nf.i = null;                                                                                                          // 2193\nf.I = null;                                                                                                          // 2194\nf.Ma = null;                                                                                                         // 2195\nf.zb = null;                                                                                                         // 2196\nf.L = null;                                                                                                          // 2197\nf.hc = !0;                                                                                                           // 2198\nf.Aa = 0;                                                                                                            // 2199\nf.sc = 0;                                                                                                            // 2200\nf.Ka = !1;                                                                                                           // 2201\nf.e = null;                                                                                                          // 2202\nf.G = null;                                                                                                          // 2203\nf.M = null;                                                                                                          // 2204\nf.$ = null;                                                                                                          // 2205\nf.V = null;                                                                                                          // 2206\nf.wb = null;                                                                                                         // 2207\nf.gc = !0;                                                                                                           // 2208\nf.ya = -1;                                                                                                           // 2209\nf.Nb = -1;                                                                                                           // 2210\nf.g = -1;                                                                                                            // 2211\nf.aa = 0;                                                                                                            // 2212\nf.ga = 0;                                                                                                            // 2213\nf.jc = 5E3;                                                                                                          // 2214\nf.Cc = 1E4;                                                                                                          // 2215\nf.pb = 2;                                                                                                            // 2216\nf.Hb = 2E4;                                                                                                          // 2217\nf.la = 0;                                                                                                            // 2218\nf.ab = !1;                                                                                                           // 2219\nf.ha = 8;                                                                                                            // 2220\nvar Fd = 1, Hd = new R;                                                                                              // 2221\nfunction Id(a) {                                                                                                     // 2222\n  P.call(this, \"statevent\", a);                                                                                      // 2223\n}                                                                                                                    // 2224\ns(Id, P);                                                                                                            // 2225\nfunction Jd(a, b) {                                                                                                  // 2226\n  P.call(this, \"timingevent\", a);                                                                                    // 2227\n  this.size = b;                                                                                                     // 2228\n}                                                                                                                    // 2229\ns(Jd, P);                                                                                                            // 2230\nvar id = 1, kd = 2, jd = 3, rd = 4;                                                                                  // 2231\nfunction Kd(a) {                                                                                                     // 2232\n  P.call(this, \"serverreachability\", a);                                                                             // 2233\n}                                                                                                                    // 2234\ns(Kd, P);                                                                                                            // 2235\nvar Yb = \"y2f%\";                                                                                                     // 2236\nf = Ed.prototype;                                                                                                    // 2237\nf.kb = function(a, b, c, d, e) {                                                                                     // 2238\n  this.a.debug(\"connect()\");                                                                                         // 2239\n  W();                                                                                                               // 2240\n  this.I = b;                                                                                                        // 2241\n  this.wa = c || {};                                                                                                 // 2242\n  d && void 0 !== e && (this.wa.OSID = d, this.wa.OAID = e);                                                         // 2243\n  this.a.debug(\"connectTest_()\");                                                                                    // 2244\n  Ld(this) && (this.V = new wd(this, this.a), this.V.S(this.v), this.V.ac(this.P), this.V.kb(a));                    // 2245\n};                                                                                                                   // 2246\nf.disconnect = function() {                                                                                          // 2247\n  this.a.debug(\"disconnect()\");                                                                                      // 2248\n  Md(this);                                                                                                          // 2249\n  if (3 == this.c) {                                                                                                 // 2250\n    var a = this.Aa++, b = this.Ma.n();                                                                              // 2251\n    F(b, \"SID\", this.Y);                                                                                             // 2252\n    F(b, \"RID\", a);                                                                                                  // 2253\n    F(b, \"TYPE\", \"terminate\");                                                                                       // 2254\n    Nd(this, b);                                                                                                     // 2255\n    a = new U(this, this.a, this.Y, a, void 0);                                                                      // 2256\n    a.ra = 2;                                                                                                        // 2257\n    a.U = G(b.n());                                                                                                  // 2258\n    (new Image).src = a.U;                                                                                           // 2259\n    a.Da = q();                                                                                                      // 2260\n    hd(a);                                                                                                           // 2261\n  }                                                                                                                  // 2262\n  Od(this);                                                                                                          // 2263\n};                                                                                                                   // 2264\nfunction Md(a) {                                                                                                     // 2265\n  a.V && (a.V.abort(), a.V = null);                                                                                  // 2266\n  a.i && (a.i.cancel(), a.i = null);                                                                                 // 2267\n  a.M && (l.clearTimeout(a.M), a.M = null);                                                                          // 2268\n  Pd(a);                                                                                                             // 2269\n  a.p && (a.p.cancel(), a.p = null);                                                                                 // 2270\n  a.G && (l.clearTimeout(a.G), a.G = null);                                                                          // 2271\n}                                                                                                                    // 2272\nf.S = function(a) {                                                                                                  // 2273\n  this.v = a;                                                                                                        // 2274\n};                                                                                                                   // 2275\nf.bc = function(a) {                                                                                                 // 2276\n  this.la = a;                                                                                                       // 2277\n};                                                                                                                   // 2278\nf.Lb = function() {                                                                                                  // 2279\n  return 0 == this.c;                                                                                                // 2280\n};                                                                                                                   // 2281\nf.ac = function(a) {                                                                                                 // 2282\n  this.P = a;                                                                                                        // 2283\n};                                                                                                                   // 2284\nfunction Qd(a) {                                                                                                     // 2285\n  a.p || a.G || (a.G = X(p(a.Tb, a), 0), a.aa = 0);                                                                  // 2286\n}                                                                                                                    // 2287\nf.Tb = function(a) {                                                                                                 // 2288\n  this.G = null;                                                                                                     // 2289\n  this.a.debug(\"startForwardChannel_\");                                                                              // 2290\n  if (Ld(this)) {                                                                                                    // 2291\n    if (this.c == Fd) {                                                                                              // 2292\n      if (a) {                                                                                                       // 2293\n        this.a.J(\"Not supposed to retry the open\");                                                                  // 2294\n      } else {                                                                                                       // 2295\n        this.a.debug(\"open_()\");                                                                                     // 2296\n        this.Aa = Math.floor(1E5 * Math.random());                                                                   // 2297\n        a = this.Aa++;                                                                                               // 2298\n        var b = new U(this, this.a, \"\", a, void 0);                                                                  // 2299\n        b.S(this.v);                                                                                                 // 2300\n        var c = Rd(this), d = this.Ma.n();                                                                           // 2301\n        F(d, \"RID\", a);                                                                                              // 2302\n        this.Bb && F(d, \"CVER\", this.Bb);                                                                            // 2303\n        Nd(this, d);                                                                                                 // 2304\n        ed(b, d, c);                                                                                                 // 2305\n        this.p = b;                                                                                                  // 2306\n        this.c = 2;                                                                                                  // 2307\n      }                                                                                                              // 2308\n    } else {                                                                                                         // 2309\n      3 == this.c && (a ? Sd(this, a) : 0 == this.t.length ? this.a.debug(\"startForwardChannel_ returned: nothing to send\") : this.p ? this.a.J(\"startForwardChannel_ returned: connection already in progress\") : (Sd(this), this.a.debug(\"startForwardChannel_ finished, sent request\")));\n    }                                                                                                                // 2311\n  }                                                                                                                  // 2312\n};                                                                                                                   // 2313\nfunction Sd(a, b) {                                                                                                  // 2314\n  var c, d;                                                                                                          // 2315\n  b ? 6 < a.ha ? (a.t = a.Q.concat(a.t), a.Q.length = 0, c = a.Aa - 1, d = Rd(a)) : (c = b.B, d = b.X) : (c = a.Aa++, d = Rd(a));\n  var e = a.Ma.n();                                                                                                  // 2317\n  F(e, \"SID\", a.Y);                                                                                                  // 2318\n  F(e, \"RID\", c);                                                                                                    // 2319\n  F(e, \"AID\", a.ya);                                                                                                 // 2320\n  Nd(a, e);                                                                                                          // 2321\n  c = new U(a, a.a, a.Y, c, a.aa + 1);                                                                               // 2322\n  c.S(a.v);                                                                                                          // 2323\n  c.setTimeout(Math.round(0.5 * a.Hb) + Math.round(0.5 * a.Hb * Math.random()));                                     // 2324\n  a.p = c;                                                                                                           // 2325\n  ed(c, e, d);                                                                                                       // 2326\n}                                                                                                                    // 2327\nfunction Nd(a, b) {                                                                                                  // 2328\n  if (a.e) {                                                                                                         // 2329\n    var c = a.e.getAdditionalParams(a);                                                                              // 2330\n    c && fb(c, function(a, c) {                                                                                      // 2331\n      F(b, c, a);                                                                                                    // 2332\n    });                                                                                                              // 2333\n  }                                                                                                                  // 2334\n}                                                                                                                    // 2335\nfunction Rd(a) {                                                                                                     // 2336\n  var b = Math.min(a.t.length, 1E3), c = [\"count=\" + b], d;                                                          // 2337\n  6 < a.ha && 0 < b ? (d = a.t[0].Ob, c.push(\"ofs=\" + d)) : d = 0;                                                   // 2338\n  for (var e = 0;e < b;e++) {                                                                                        // 2339\n    var g = a.t[e].Ob, h = a.t[e].map, g = 6 >= a.ha ? e : g - d;                                                    // 2340\n    try {                                                                                                            // 2341\n      fb(h, function(a, b) {                                                                                         // 2342\n        c.push(\"req\" + g + \"_\" + b + \"=\" + encodeURIComponent(a));                                                   // 2343\n      });                                                                                                            // 2344\n    } catch (k) {                                                                                                    // 2345\n      c.push(\"req\" + g + \"_type=\" + encodeURIComponent(\"_badmap\")), a.e && a.e.badMapError(a, h);                    // 2346\n    }                                                                                                                // 2347\n  }                                                                                                                  // 2348\n  a.Q = a.Q.concat(a.t.splice(0, b));                                                                                // 2349\n  return c.join(\"&\");                                                                                                // 2350\n}                                                                                                                    // 2351\nfunction Td(a) {                                                                                                     // 2352\n  a.i || a.M || (a.yb = 1, a.M = X(p(a.Sb, a), 0), a.ga = 0);                                                        // 2353\n}                                                                                                                    // 2354\nfunction Ud(a) {                                                                                                     // 2355\n  if (a.i || a.M) {                                                                                                  // 2356\n    return a.a.J(\"Request already in progress\"), !1;                                                                 // 2357\n  }                                                                                                                  // 2358\n  if (3 <= a.ga) {                                                                                                   // 2359\n    return!1;                                                                                                        // 2360\n  }                                                                                                                  // 2361\n  a.a.debug(\"Going to retry GET\");                                                                                   // 2362\n  a.yb++;                                                                                                            // 2363\n  a.M = X(p(a.Sb, a), Vd(a, a.ga));                                                                                  // 2364\n  a.ga++;                                                                                                            // 2365\n  return!0;                                                                                                          // 2366\n}                                                                                                                    // 2367\nf.Sb = function() {                                                                                                  // 2368\n  this.M = null;                                                                                                     // 2369\n  if (Ld(this)) {                                                                                                    // 2370\n    this.a.debug(\"Creating new HttpRequest\");                                                                        // 2371\n    this.i = new U(this, this.a, this.Y, \"rpc\", this.yb);                                                            // 2372\n    this.i.S(this.v);                                                                                                // 2373\n    this.i.bc(this.la);                                                                                              // 2374\n    var a = this.zb.n();                                                                                             // 2375\n    F(a, \"RID\", \"rpc\");                                                                                              // 2376\n    F(a, \"SID\", this.Y);                                                                                             // 2377\n    F(a, \"CI\", this.wb ? \"0\" : \"1\");                                                                                 // 2378\n    F(a, \"AID\", this.ya);                                                                                            // 2379\n    Nd(this, a);                                                                                                     // 2380\n    if (dd()) {                                                                                                      // 2381\n      F(a, \"TYPE\", \"xmlhttp\"), gd(this.i, a, !0, this.L, !1);                                                        // 2382\n    } else {                                                                                                         // 2383\n      F(a, \"TYPE\", \"html\");                                                                                          // 2384\n      var b = this.i, c = Boolean(this.L);                                                                           // 2385\n      b.ra = 3;                                                                                                      // 2386\n      b.U = G(a.n());                                                                                                // 2387\n      qd(b, c);                                                                                                      // 2388\n    }                                                                                                                // 2389\n    this.a.debug(\"New Request created\");                                                                             // 2390\n  }                                                                                                                  // 2391\n};                                                                                                                   // 2392\nfunction Ld(a) {                                                                                                     // 2393\n  if (a.e) {                                                                                                         // 2394\n    var b = a.e.okToMakeRequest(a);                                                                                  // 2395\n    if (0 != b) {                                                                                                    // 2396\n      return a.a.debug(\"Handler returned error code from okToMakeRequest\"), Z(a, b), !1;                             // 2397\n    }                                                                                                                // 2398\n  }                                                                                                                  // 2399\n  return!0;                                                                                                          // 2400\n}                                                                                                                    // 2401\nfunction Bd(a, b, c) {                                                                                               // 2402\n  a.a.debug(\"Test Connection Finished\");                                                                             // 2403\n  a.wb = a.gc && c;                                                                                                  // 2404\n  a.g = b.g;                                                                                                         // 2405\n  a.a.debug(\"connectChannel_()\");                                                                                    // 2406\n  a.mc(Fd, 0);                                                                                                       // 2407\n  a.Ma = xd(a, a.I);                                                                                                 // 2408\n  Qd(a);                                                                                                             // 2409\n}                                                                                                                    // 2410\nfunction Dd(a, b) {                                                                                                  // 2411\n  a.a.debug(\"Test Connection Failed\");                                                                               // 2412\n  a.g = b.g;                                                                                                         // 2413\n  Z(a, 2);                                                                                                           // 2414\n}                                                                                                                    // 2415\nf.Rb = function(a, b) {                                                                                              // 2416\n  if (0 != this.c && (this.i == a || this.p == a)) {                                                                 // 2417\n    if (this.g = a.g, this.p == a && 3 == this.c) {                                                                  // 2418\n      if (7 < this.ha) {                                                                                             // 2419\n        var c;                                                                                                       // 2420\n        try {                                                                                                        // 2421\n          c = this.P.parse(b);                                                                                       // 2422\n        } catch (d) {                                                                                                // 2423\n          c = null;                                                                                                  // 2424\n        }                                                                                                            // 2425\n        if (m(c) && 3 == c.length) {                                                                                 // 2426\n          var e = c;                                                                                                 // 2427\n          if (0 == e[0]) {                                                                                           // 2428\n            a: {                                                                                                     // 2429\n              if (this.a.debug(\"Server claims our backchannel is missing.\"), this.M) {                               // 2430\n                this.a.debug(\"But we are currently starting the request.\");                                          // 2431\n              } else {                                                                                               // 2432\n                if (this.i) {                                                                                        // 2433\n                  if (this.i.Da + 3E3 < this.p.Da) {                                                                 // 2434\n                    Pd(this), this.i.cancel(), this.i = null;                                                        // 2435\n                  } else {                                                                                           // 2436\n                    break a;                                                                                         // 2437\n                  }                                                                                                  // 2438\n                } else {                                                                                             // 2439\n                  this.a.fa(\"We do not have a BackChannel established\");                                             // 2440\n                }                                                                                                    // 2441\n                Ud(this);                                                                                            // 2442\n                W();                                                                                                 // 2443\n              }                                                                                                      // 2444\n            }                                                                                                        // 2445\n          } else {                                                                                                   // 2446\n            this.Nb = e[1], c = this.Nb - this.ya, 0 < c && (e = e[2], this.a.debug(e + \" bytes (in \" + c + \" arrays) are outstanding on the BackChannel\"), 37500 > e && this.wb && 0 == this.ga && !this.$ && (this.$ = X(p(this.tc, this), 6E3)));\n          }                                                                                                          // 2448\n        } else {                                                                                                     // 2449\n          this.a.debug(\"Bad POST response data returned\"), Z(this, 11);                                              // 2450\n        }                                                                                                            // 2451\n      } else {                                                                                                       // 2452\n        b != Yb && (this.a.debug(\"Bad data returned - missing/invald magic cookie\"), Z(this, 11));                   // 2453\n      }                                                                                                              // 2454\n    } else {                                                                                                         // 2455\n      if (this.i == a && Pd(this), !/^[\\s\\xa0]*$/.test(b)) {                                                         // 2456\n        c = this.P.parse(b);                                                                                         // 2457\n        for (var e = this.e && this.e.channelHandleMultipleArrays ? [] : null, g = 0;g < c.length;g++) {             // 2458\n          var h = c[g];                                                                                              // 2459\n          this.ya = h[0];                                                                                            // 2460\n          h = h[1];                                                                                                  // 2461\n          2 == this.c ? \"c\" == h[0] ? (this.Y = h[1], this.L = this.correctHostPrefix(h[2]), h = h[3], this.ha = null != h ? h : 6, this.c = 3, this.e && this.e.channelOpened(this), this.zb = Cd(this, this.L, this.I), Td(this)) : \"stop\" == h[0] && Z(this, 7) : 3 == this.c && (\"stop\" == h[0] ? (e && 0 != e.length && (this.e.channelHandleMultipleArrays(this, e), e.length = 0), Z(this, 7)) : \"noop\" != h[0] && (e ? e.push(h) : this.e && this.e.channelHandleArray(this, h)), this.ga = 0);\n        }                                                                                                            // 2463\n        e && 0 != e.length && this.e.channelHandleMultipleArrays(this, e);                                           // 2464\n      }                                                                                                              // 2465\n    }                                                                                                                // 2466\n  }                                                                                                                  // 2467\n};                                                                                                                   // 2468\nf.correctHostPrefix = function(a) {                                                                                  // 2469\n  return this.hc ? this.e ? this.e.correctHostPrefix(a) : a : null;                                                  // 2470\n};                                                                                                                   // 2471\nf.tc = function() {                                                                                                  // 2472\n  null != this.$ && (this.$ = null, this.i.cancel(), this.i = null, Ud(this), W());                                  // 2473\n};                                                                                                                   // 2474\nfunction Pd(a) {                                                                                                     // 2475\n  null != a.$ && (l.clearTimeout(a.$), a.$ = null);                                                                  // 2476\n}                                                                                                                    // 2477\nf.Ba = function(a) {                                                                                                 // 2478\n  this.a.debug(\"Request complete\");                                                                                  // 2479\n  var b;                                                                                                             // 2480\n  if (this.i == a) {                                                                                                 // 2481\n    Pd(this), this.i = null, b = 2;                                                                                  // 2482\n  } else {                                                                                                           // 2483\n    if (this.p == a) {                                                                                               // 2484\n      this.p = null, b = 1;                                                                                          // 2485\n    } else {                                                                                                         // 2486\n      return;                                                                                                        // 2487\n    }                                                                                                                // 2488\n  }                                                                                                                  // 2489\n  this.g = a.g;                                                                                                      // 2490\n  if (0 != this.c) {                                                                                                 // 2491\n    if (a.F) {                                                                                                       // 2492\n      1 == b ? (q(), Hd.dispatchEvent(new Jd(Hd, a.X ? a.X.length : 0)), Qd(this), this.Q.length = 0) : Td(this);    // 2493\n    } else {                                                                                                         // 2494\n      var c = a.Ib();                                                                                                // 2495\n      if (3 == c || 7 == c || 0 == c && 0 < this.g) {                                                                // 2496\n        this.a.debug(\"Not retrying due to error type\");                                                              // 2497\n      } else {                                                                                                       // 2498\n        this.a.debug(\"Maybe retrying, last error: \" + ad(c, this.g));                                                // 2499\n        var d;                                                                                                       // 2500\n        if (d = 1 == b) {                                                                                            // 2501\n          this.p || this.G ? (this.a.J(\"Request already in progress\"), d = !1) : this.c == Fd || this.aa >= (this.Ka ? 0 : this.pb) ? d = !1 : (this.a.debug(\"Going to retry POST\"), this.G = X(p(this.Tb, this, a), Vd(this, this.aa)), this.aa++, d = !0);\n        }                                                                                                            // 2503\n        if (d || 2 == b && Ud(this)) {                                                                               // 2504\n          return;                                                                                                    // 2505\n        }                                                                                                            // 2506\n        this.a.debug(\"Exceeded max number of retries\");                                                              // 2507\n      }                                                                                                              // 2508\n      this.a.debug(\"Error: HTTP request failed\");                                                                    // 2509\n      switch(c) {                                                                                                    // 2510\n        case 1:                                                                                                      // 2511\n          Z(this, 5);                                                                                                // 2512\n          break;                                                                                                     // 2513\n        case 4:                                                                                                      // 2514\n          Z(this, 10);                                                                                               // 2515\n          break;                                                                                                     // 2516\n        case 3:                                                                                                      // 2517\n          Z(this, 6);                                                                                                // 2518\n          break;                                                                                                     // 2519\n        case 7:                                                                                                      // 2520\n          Z(this, 12);                                                                                               // 2521\n          break;                                                                                                     // 2522\n        default:                                                                                                     // 2523\n          Z(this, 2);                                                                                                // 2524\n      }                                                                                                              // 2525\n    }                                                                                                                // 2526\n  }                                                                                                                  // 2527\n};                                                                                                                   // 2528\nfunction Vd(a, b) {                                                                                                  // 2529\n  var c = a.jc + Math.floor(Math.random() * a.Cc);                                                                   // 2530\n  a.isActive() || (a.a.debug(\"Inactive channel\"), c *= 2);                                                           // 2531\n  return c * b;                                                                                                      // 2532\n}                                                                                                                    // 2533\nf.mc = function(a) {                                                                                                 // 2534\n  if (!(0 <= Xa(arguments, this.c))) {                                                                               // 2535\n    throw Error(\"Unexpected channel state: \" + this.c);                                                              // 2536\n  }                                                                                                                  // 2537\n};                                                                                                                   // 2538\nfunction Z(a, b) {                                                                                                   // 2539\n  a.a.info(\"Error code \" + b);                                                                                       // 2540\n  if (2 == b || 9 == b) {                                                                                            // 2541\n    var c = null;                                                                                                    // 2542\n    a.e && (c = a.e.getNetworkTestImageUri(a));                                                                      // 2543\n    var d = p(a.Ec, a);                                                                                              // 2544\n    c || (c = new D(\"//www.google.com/images/cleardot.gif\"), G(c));                                                  // 2545\n    ud(c.toString(), 1E4, d);                                                                                        // 2546\n  } else {                                                                                                           // 2547\n    W();                                                                                                             // 2548\n  }                                                                                                                  // 2549\n  Wd(a, b);                                                                                                          // 2550\n}                                                                                                                    // 2551\nf.Ec = function(a) {                                                                                                 // 2552\n  a ? (this.a.info(\"Successfully pinged google.com\"), W()) : (this.a.info(\"Failed to ping google.com\"), W(), Wd(this, 8));\n};                                                                                                                   // 2554\nfunction Wd(a, b) {                                                                                                  // 2555\n  a.a.debug(\"HttpChannel: error - \" + b);                                                                            // 2556\n  a.c = 0;                                                                                                           // 2557\n  a.e && a.e.channelError(a, b);                                                                                     // 2558\n  Od(a);                                                                                                             // 2559\n  Md(a);                                                                                                             // 2560\n}                                                                                                                    // 2561\nfunction Od(a) {                                                                                                     // 2562\n  a.c = 0;                                                                                                           // 2563\n  a.g = -1;                                                                                                          // 2564\n  if (a.e) {                                                                                                         // 2565\n    if (0 == a.Q.length && 0 == a.t.length) {                                                                        // 2566\n      a.e.channelClosed(a);                                                                                          // 2567\n    } else {                                                                                                         // 2568\n      a.a.debug(\"Number of undelivered maps, pending: \" + a.Q.length + \", outgoing: \" + a.t.length);                 // 2569\n      var b = bb(a.Q), c = bb(a.t);                                                                                  // 2570\n      a.Q.length = 0;                                                                                                // 2571\n      a.t.length = 0;                                                                                                // 2572\n      a.e.channelClosed(a, b, c);                                                                                    // 2573\n    }                                                                                                                // 2574\n  }                                                                                                                  // 2575\n}                                                                                                                    // 2576\nfunction xd(a, b) {                                                                                                  // 2577\n  var c = Ad(a, null, b);                                                                                            // 2578\n  a.a.debug(\"GetForwardChannelUri: \" + c);                                                                           // 2579\n  return c;                                                                                                          // 2580\n}                                                                                                                    // 2581\nfunction Cd(a, b, c) {                                                                                               // 2582\n  b = Ad(a, a.$a() ? b : null, c);                                                                                   // 2583\n  a.a.debug(\"GetBackChannelUri: \" + b);                                                                              // 2584\n  return b;                                                                                                          // 2585\n}                                                                                                                    // 2586\nfunction Ad(a, b, c) {                                                                                               // 2587\n  var d = ub(c);                                                                                                     // 2588\n  if (\"\" != d.ia) {                                                                                                  // 2589\n    b && hb(d, b + \".\" + d.ia), ib(d, d.Ca);                                                                         // 2590\n  } else {                                                                                                           // 2591\n    var e = window.location, d = vb(e.protocol, b ? b + \".\" + e.hostname : e.hostname, e.port, c)                    // 2592\n  }                                                                                                                  // 2593\n  a.wa && fb(a.wa, function(a, b) {                                                                                  // 2594\n    F(d, b, a);                                                                                                      // 2595\n  });                                                                                                                // 2596\n  F(d, \"VER\", a.ha);                                                                                                 // 2597\n  Nd(a, d);                                                                                                          // 2598\n  return d;                                                                                                          // 2599\n}                                                                                                                    // 2600\nf.lb = function(a) {                                                                                                 // 2601\n  if (a && !this.ab) {                                                                                               // 2602\n    throw Error(\"Can't create secondary domain capable XhrIo object.\");                                              // 2603\n  }                                                                                                                  // 2604\n  a = new Ic;                                                                                                        // 2605\n  a.dc = this.ab;                                                                                                    // 2606\n  return a;                                                                                                          // 2607\n};                                                                                                                   // 2608\nf.isActive = function() {                                                                                            // 2609\n  return!!this.e && this.e.isActive(this);                                                                           // 2610\n};                                                                                                                   // 2611\nfunction X(a, b) {                                                                                                   // 2612\n  if (!fa(a)) {                                                                                                      // 2613\n    throw Error(\"Fn must not be null and must be a function\");                                                       // 2614\n  }                                                                                                                  // 2615\n  return l.setTimeout(function() {                                                                                   // 2616\n    a();                                                                                                             // 2617\n  }, b);                                                                                                             // 2618\n}                                                                                                                    // 2619\nf.H = function() {                                                                                                   // 2620\n  Hd.dispatchEvent(new Kd(Hd));                                                                                      // 2621\n};                                                                                                                   // 2622\nfunction W() {                                                                                                       // 2623\n  Hd.dispatchEvent(new Id(Hd));                                                                                      // 2624\n}                                                                                                                    // 2625\nf.$a = function() {                                                                                                  // 2626\n  return this.ab || !dd();                                                                                           // 2627\n};                                                                                                                   // 2628\nfunction Xd() {                                                                                                      // 2629\n}                                                                                                                    // 2630\nf = Xd.prototype;                                                                                                    // 2631\nf.channelHandleMultipleArrays = null;                                                                                // 2632\nf.okToMakeRequest = function() {                                                                                     // 2633\n  return 0;                                                                                                          // 2634\n};                                                                                                                   // 2635\nf.channelOpened = function() {                                                                                       // 2636\n};                                                                                                                   // 2637\nf.channelHandleArray = function() {                                                                                  // 2638\n};                                                                                                                   // 2639\nf.channelError = function() {                                                                                        // 2640\n};                                                                                                                   // 2641\nf.channelClosed = function() {                                                                                       // 2642\n};                                                                                                                   // 2643\nf.getAdditionalParams = function() {                                                                                 // 2644\n  return{};                                                                                                          // 2645\n};                                                                                                                   // 2646\nf.getNetworkTestImageUri = function() {                                                                              // 2647\n  return null;                                                                                                       // 2648\n};                                                                                                                   // 2649\nf.isActive = function() {                                                                                            // 2650\n  return!0;                                                                                                          // 2651\n};                                                                                                                   // 2652\nf.badMapError = function() {                                                                                         // 2653\n};                                                                                                                   // 2654\nf.correctHostPrefix = function(a) {                                                                                  // 2655\n  return a;                                                                                                          // 2656\n};                                                                                                                   // 2657\nvar $, Yd, Zd = [].slice;                                                                                            // 2658\nYd = {0:\"Ok\", 4:\"User is logging out\", 6:\"Unknown session ID\", 7:\"Stopped by server\", 8:\"General network error\", 2:\"Request failed\", 9:\"Blocked by a network administrator\", 5:\"No data from server\", 10:\"Got bad data from the server\", 11:\"Got a bad response from the server\"};\n$ = function(a, b) {                                                                                                 // 2660\n  var c, d, e, g, h, k, u, K, v, r, Ia, w, Y;                                                                        // 2661\n  r = this;                                                                                                          // 2662\n  a || (a = \"channel\");                                                                                              // 2663\n  a.match(/:\\/\\//) && a.replace(/^ws/, \"http\");                                                                      // 2664\n  b || (b = {});                                                                                                     // 2665\n  m(b || \"string\" === typeof b) && (b = {});                                                                         // 2666\n  K = b.reconnectTime || 3E3;                                                                                        // 2667\n  c = b.extraHeaders || null;                                                                                        // 2668\n  d = b.extraParams || null;                                                                                         // 2669\n  null !== b.affinity && (d || (d = {}), b.affinityParam || (b.affinityParam = \"a\"), this.affinity = b.affinity || sa(), d[b.affinityParam] = this.affinity);\n  Y = function(a) {                                                                                                  // 2671\n    r.readyState = r.readyState = a;                                                                                 // 2672\n  };                                                                                                                 // 2673\n  Y(this.CLOSED);                                                                                                    // 2674\n  w = null;                                                                                                          // 2675\n  k = b.Hc;                                                                                                          // 2676\n  e = function() {                                                                                                   // 2677\n    var a, b;                                                                                                        // 2678\n    b = arguments[0];                                                                                                // 2679\n    a = 2 <= arguments.length ? Zd.call(arguments, 1) : [];                                                          // 2680\n    try {                                                                                                            // 2681\n      return \"function\" === typeof r[b] ? r[b].apply(r, a) : void 0;                                                 // 2682\n    } catch (c) {                                                                                                    // 2683\n      throw a = c, \"undefined\" !== typeof console && null !== console && console.error(a.stack), a;                  // 2684\n    }                                                                                                                // 2685\n  };                                                                                                                 // 2686\n  g = new Xd;                                                                                                        // 2687\n  g.channelOpened = function() {                                                                                     // 2688\n    k = w;                                                                                                           // 2689\n    Y($.OPEN);                                                                                                       // 2690\n    return e(\"onopen\");                                                                                              // 2691\n  };                                                                                                                 // 2692\n  h = null;                                                                                                          // 2693\n  g.channelError = function(a, b) {                                                                                  // 2694\n    var c;                                                                                                           // 2695\n    c = Yd[b];                                                                                                       // 2696\n    h = b;                                                                                                           // 2697\n    r.readyState !== $.CLOSED && Y($.hb);                                                                            // 2698\n    try {                                                                                                            // 2699\n      return e(\"onerror\", c, b);                                                                                     // 2700\n    } catch (d) {                                                                                                    // 2701\n    }                                                                                                                // 2702\n  };                                                                                                                 // 2703\n  v = null;                                                                                                          // 2704\n  g.channelClosed = function(a, c, d) {                                                                              // 2705\n    var g;                                                                                                           // 2706\n    if (r.readyState !== $.CLOSED) {                                                                                 // 2707\n      w = null;                                                                                                      // 2708\n      a = h ? Yd[h] : \"Closed\";                                                                                      // 2709\n      Y($.CLOSED);                                                                                                   // 2710\n      b.reconnect && 7 !== h && 0 !== h && (g = 6 === h ? 0 : K, clearTimeout(v), v = setTimeout(u, g));             // 2711\n      try {                                                                                                          // 2712\n        e(\"onclose\", a, c, d);                                                                                       // 2713\n      } catch (k) {                                                                                                  // 2714\n      }                                                                                                              // 2715\n      return h = null;                                                                                               // 2716\n    }                                                                                                                // 2717\n  };                                                                                                                 // 2718\n  g.channelHandleArray = function(a, b) {                                                                            // 2719\n    return e(\"onmessage\", b);                                                                                        // 2720\n  };                                                                                                                 // 2721\n  u = function() {                                                                                                   // 2722\n    if (w) {                                                                                                         // 2723\n      throw Error(\"Reconnect() called from invalid state\");                                                          // 2724\n    }                                                                                                                // 2725\n    Y($.CONNECTING);                                                                                                 // 2726\n    e(\"onconnecting\");                                                                                               // 2727\n    clearTimeout(v);                                                                                                 // 2728\n    w = new Ed(b.appVersion, null != k ? k.Gb : void 0);                                                             // 2729\n    b.crossDomainXhr && (w.ab = !0);                                                                                 // 2730\n    w.e = g;                                                                                                         // 2731\n    c && w.S(c);                                                                                                     // 2732\n    h = null;                                                                                                        // 2733\n    if (b.failFast) {                                                                                                // 2734\n      var t = w;                                                                                                     // 2735\n      t.Ka = !0;                                                                                                     // 2736\n      t.a.info(\"setFailFast: true\");                                                                                 // 2737\n      (t.p || t.G) && t.aa > (t.Ka ? 0 : t.pb) && (t.a.info(\"Retry count \" + t.aa + \" > new maxRetries \" + (t.Ka ? 0 : t.pb) + \". Fail immediately!\"), t.p ? (t.p.cancel(), t.Ba(t.p)) : (l.clearTimeout(t.G), t.G = null, Z(t, 2)));\n    }                                                                                                                // 2739\n    return w.kb(\"\" + a + \"/test\", \"\" + a + \"/bind\", d, null != k ? k.Y : void 0, null != k ? k.ya : void 0);         // 2740\n  };                                                                                                                 // 2741\n  this.open = function() {                                                                                           // 2742\n    if (r.readyState !== r.CLOSED) {                                                                                 // 2743\n      throw Error(\"Already open\");                                                                                   // 2744\n    }                                                                                                                // 2745\n    return u();                                                                                                      // 2746\n  };                                                                                                                 // 2747\n  this.close = function() {                                                                                          // 2748\n    clearTimeout(v);                                                                                                 // 2749\n    h = 0;                                                                                                           // 2750\n    if (r.readyState !== $.CLOSED) {                                                                                 // 2751\n      return Y($.hb), w.disconnect();                                                                                // 2752\n    }                                                                                                                // 2753\n  };                                                                                                                 // 2754\n  this.sendMap = Ia = function(a) {                                                                                  // 2755\n    var b;                                                                                                           // 2756\n    if ((b = r.readyState) === $.hb || b === $.CLOSED) {                                                             // 2757\n      throw Error(\"Cannot send to a closed connection\");                                                             // 2758\n    }                                                                                                                // 2759\n    b = w;                                                                                                           // 2760\n    if (0 == b.c) {                                                                                                  // 2761\n      throw Error(\"Invalid operation: sending map when state is closed\");                                            // 2762\n    }                                                                                                                // 2763\n    1E3 == b.t.length && b.a.J(\"Already have 1000 queued maps upon queueing \" + zb(a));                              // 2764\n    b.t.push(new Gd(b.sc++, a));                                                                                     // 2765\n    2 != b.c && 3 != b.c || Qd(b);                                                                                   // 2766\n  };                                                                                                                 // 2767\n  this.send = function(a) {                                                                                          // 2768\n    return \"string\" === typeof a ? Ia({_S:a}) : Ia({JSON:zb(a)});                                                    // 2769\n  };                                                                                                                 // 2770\n  u();                                                                                                               // 2771\n  return this;                                                                                                       // 2772\n};                                                                                                                   // 2773\n$.prototype.CONNECTING = $.CONNECTING = $.CONNECTING = 0;                                                            // 2774\n$.prototype.OPEN = $.OPEN = $.OPEN = 1;                                                                              // 2775\n$.prototype.CLOSING = $.CLOSING = $.hb = 2;                                                                          // 2776\n$.prototype.CLOSED = $.CLOSED = $.CLOSED = 3;                                                                        // 2777\n(\"undefined\" !== typeof exports && null !== exports ? exports : window).BCSocket = $;                                // 2778\n                                                                                                                     // 2779\n})();                                                                                                                // 2780\n                                                                                                                     // 2781\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/mizzao_sharejs/.npm/package/node_modules/share/webclient/share.uncompressed.js                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Generated by CoffeeScript 1.6.2                                                                                   // 1\n(function() {                                                                                                        // 2\n  var BCSocket, Connection, Doc, MicroEvent, ReconnectingWebSocket, SockJS, WebSocket, append, bootstrapTransform, checkValidComponent, checkValidOp, exports, hasBCSocket, hasSockJS, invertComponent, nextTick, socketImpl, strInject, text, transformComponent, transformPosition, types,\n    __slice = [].slice,                                                                                              // 4\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },                              // 5\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n                                                                                                                     // 7\n  window.sharejs = exports = {                                                                                       // 8\n    'version': '0.6.3'                                                                                               // 9\n  };                                                                                                                 // 10\n                                                                                                                     // 11\n  if (typeof WEB === 'undefined') {                                                                                  // 12\n    window.WEB = true;                                                                                               // 13\n  }                                                                                                                  // 14\n                                                                                                                     // 15\n  nextTick = typeof WEB !== \"undefined\" && WEB !== null ? function(fn) {                                             // 16\n    return setTimeout(fn, 0);                                                                                        // 17\n  } : process['nextTick'];                                                                                           // 18\n                                                                                                                     // 19\n  MicroEvent = (function() {                                                                                         // 20\n    function MicroEvent() {}                                                                                         // 21\n                                                                                                                     // 22\n    MicroEvent.prototype.on = function(event, f) {                                                                   // 23\n      var _base;                                                                                                     // 24\n                                                                                                                     // 25\n      this._events || (this._events = {});                                                                           // 26\n      (_base = this._events)[event] || (_base[event] = []);                                                          // 27\n      this._events[event].push(f);                                                                                   // 28\n      return this;                                                                                                   // 29\n    };                                                                                                               // 30\n                                                                                                                     // 31\n    MicroEvent.prototype.removeListener = function(event, fct) {                                                     // 32\n      var i, listeners, _base,                                                                                       // 33\n        _this = this;                                                                                                // 34\n                                                                                                                     // 35\n      this._events || (this._events = {});                                                                           // 36\n      listeners = ((_base = this._events)[event] || (_base[event] = []));                                            // 37\n      i = 0;                                                                                                         // 38\n      while (i < listeners.length) {                                                                                 // 39\n        if (listeners[i] === fct) {                                                                                  // 40\n          listeners[i] = void 0;                                                                                     // 41\n        }                                                                                                            // 42\n        i++;                                                                                                         // 43\n      }                                                                                                              // 44\n      nextTick(function() {                                                                                          // 45\n        var x;                                                                                                       // 46\n                                                                                                                     // 47\n        return _this._events[event] = (function() {                                                                  // 48\n          var _i, _len, _ref, _results;                                                                              // 49\n                                                                                                                     // 50\n          _ref = this._events[event];                                                                                // 51\n          _results = [];                                                                                             // 52\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                        // 53\n            x = _ref[_i];                                                                                            // 54\n            if (x) {                                                                                                 // 55\n              _results.push(x);                                                                                      // 56\n            }                                                                                                        // 57\n          }                                                                                                          // 58\n          return _results;                                                                                           // 59\n        }).call(_this);                                                                                              // 60\n      });                                                                                                            // 61\n      return this;                                                                                                   // 62\n    };                                                                                                               // 63\n                                                                                                                     // 64\n    MicroEvent.prototype.emit = function() {                                                                         // 65\n      var args, event, fn, _i, _len, _ref, _ref1;                                                                    // 66\n                                                                                                                     // 67\n      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];                          // 68\n      if (!((_ref = this._events) != null ? _ref[event] : void 0)) {                                                 // 69\n        return this;                                                                                                 // 70\n      }                                                                                                              // 71\n      _ref1 = this._events[event];                                                                                   // 72\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {                                                           // 73\n        fn = _ref1[_i];                                                                                              // 74\n        if (fn) {                                                                                                    // 75\n          fn.apply(this, args);                                                                                      // 76\n        }                                                                                                            // 77\n      }                                                                                                              // 78\n      return this;                                                                                                   // 79\n    };                                                                                                               // 80\n                                                                                                                     // 81\n    MicroEvent.prototype.once = function(event, f) {                                                                 // 82\n      var listener,                                                                                                  // 83\n        _this = this;                                                                                                // 84\n                                                                                                                     // 85\n      return this.on(event, listener = function() {                                                                  // 86\n        var args;                                                                                                    // 87\n                                                                                                                     // 88\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                              // 89\n        _this.removeListener(event, listener);                                                                       // 90\n        return f.apply(_this, args);                                                                                 // 91\n      });                                                                                                            // 92\n    };                                                                                                               // 93\n                                                                                                                     // 94\n    return MicroEvent;                                                                                               // 95\n                                                                                                                     // 96\n  })();                                                                                                              // 97\n                                                                                                                     // 98\n  MicroEvent.mixin = function(obj) {                                                                                 // 99\n    var proto;                                                                                                       // 100\n                                                                                                                     // 101\n    proto = obj.prototype || obj;                                                                                    // 102\n    proto.on = MicroEvent.prototype.on;                                                                              // 103\n    proto.removeListener = MicroEvent.prototype.removeListener;                                                      // 104\n    proto.emit = MicroEvent.prototype.emit;                                                                          // 105\n    proto.once = MicroEvent.prototype.once;                                                                          // 106\n    return obj;                                                                                                      // 107\n  };                                                                                                                 // 108\n                                                                                                                     // 109\n  if (typeof WEB === \"undefined\" || WEB === null) {                                                                  // 110\n    module.exports = MicroEvent;                                                                                     // 111\n  }                                                                                                                  // 112\n                                                                                                                     // 113\n  exports['_bt'] = bootstrapTransform = function(type, transformComponent, checkValidOp, append) {                   // 114\n    var transformComponentX, transformX;                                                                             // 115\n                                                                                                                     // 116\n    transformComponentX = function(left, right, destLeft, destRight) {                                               // 117\n      transformComponent(destLeft, left, right, 'left');                                                             // 118\n      return transformComponent(destRight, right, left, 'right');                                                    // 119\n    };                                                                                                               // 120\n    type.transformX = type['transformX'] = transformX = function(leftOp, rightOp) {                                  // 121\n      var k, l, l_, newLeftOp, newRightOp, nextC, r, r_, rightComponent, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1;\n                                                                                                                     // 123\n      checkValidOp(leftOp);                                                                                          // 124\n      checkValidOp(rightOp);                                                                                         // 125\n      newRightOp = [];                                                                                               // 126\n      for (_i = 0, _len = rightOp.length; _i < _len; _i++) {                                                         // 127\n        rightComponent = rightOp[_i];                                                                                // 128\n        newLeftOp = [];                                                                                              // 129\n        k = 0;                                                                                                       // 130\n        while (k < leftOp.length) {                                                                                  // 131\n          nextC = [];                                                                                                // 132\n          transformComponentX(leftOp[k], rightComponent, newLeftOp, nextC);                                          // 133\n          k++;                                                                                                       // 134\n          if (nextC.length === 1) {                                                                                  // 135\n            rightComponent = nextC[0];                                                                               // 136\n          } else if (nextC.length === 0) {                                                                           // 137\n            _ref = leftOp.slice(k);                                                                                  // 138\n            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {                                                    // 139\n              l = _ref[_j];                                                                                          // 140\n              append(newLeftOp, l);                                                                                  // 141\n            }                                                                                                        // 142\n            rightComponent = null;                                                                                   // 143\n            break;                                                                                                   // 144\n          } else {                                                                                                   // 145\n            _ref1 = transformX(leftOp.slice(k), nextC), l_ = _ref1[0], r_ = _ref1[1];                                // 146\n            for (_k = 0, _len2 = l_.length; _k < _len2; _k++) {                                                      // 147\n              l = l_[_k];                                                                                            // 148\n              append(newLeftOp, l);                                                                                  // 149\n            }                                                                                                        // 150\n            for (_l = 0, _len3 = r_.length; _l < _len3; _l++) {                                                      // 151\n              r = r_[_l];                                                                                            // 152\n              append(newRightOp, r);                                                                                 // 153\n            }                                                                                                        // 154\n            rightComponent = null;                                                                                   // 155\n            break;                                                                                                   // 156\n          }                                                                                                          // 157\n        }                                                                                                            // 158\n        if (rightComponent != null) {                                                                                // 159\n          append(newRightOp, rightComponent);                                                                        // 160\n        }                                                                                                            // 161\n        leftOp = newLeftOp;                                                                                          // 162\n      }                                                                                                              // 163\n      return [leftOp, newRightOp];                                                                                   // 164\n    };                                                                                                               // 165\n    return type.transform = type['transform'] = function(op, otherOp, type) {                                        // 166\n      var left, right, _, _ref, _ref1;                                                                               // 167\n                                                                                                                     // 168\n      if (!(type === 'left' || type === 'right')) {                                                                  // 169\n        throw new Error(\"type must be 'left' or 'right'\");                                                           // 170\n      }                                                                                                              // 171\n      if (otherOp.length === 0) {                                                                                    // 172\n        return op;                                                                                                   // 173\n      }                                                                                                              // 174\n      if (op.length === 1 && otherOp.length === 1) {                                                                 // 175\n        return transformComponent([], op[0], otherOp[0], type);                                                      // 176\n      }                                                                                                              // 177\n      if (type === 'left') {                                                                                         // 178\n        _ref = transformX(op, otherOp), left = _ref[0], _ = _ref[1];                                                 // 179\n        return left;                                                                                                 // 180\n      } else {                                                                                                       // 181\n        _ref1 = transformX(otherOp, op), _ = _ref1[0], right = _ref1[1];                                             // 182\n        return right;                                                                                                // 183\n      }                                                                                                              // 184\n    };                                                                                                               // 185\n  };                                                                                                                 // 186\n                                                                                                                     // 187\n  if (typeof WEB === 'undefined') {                                                                                  // 188\n    exports.bootstrapTransform = bootstrapTransform;                                                                 // 189\n  }                                                                                                                  // 190\n                                                                                                                     // 191\n  text = {};                                                                                                         // 192\n                                                                                                                     // 193\n  text.name = 'text';                                                                                                // 194\n                                                                                                                     // 195\n  text.create = function() {                                                                                         // 196\n    return '';                                                                                                       // 197\n  };                                                                                                                 // 198\n                                                                                                                     // 199\n  strInject = function(s1, pos, s2) {                                                                                // 200\n    return s1.slice(0, pos) + s2 + s1.slice(pos);                                                                    // 201\n  };                                                                                                                 // 202\n                                                                                                                     // 203\n  checkValidComponent = function(c) {                                                                                // 204\n    var d_type, i_type;                                                                                              // 205\n                                                                                                                     // 206\n    if (typeof c.p !== 'number') {                                                                                   // 207\n      throw new Error('component missing position field');                                                           // 208\n    }                                                                                                                // 209\n    i_type = typeof c.i;                                                                                             // 210\n    d_type = typeof c.d;                                                                                             // 211\n    if (!((i_type === 'string') ^ (d_type === 'string'))) {                                                          // 212\n      throw new Error('component needs an i or d field');                                                            // 213\n    }                                                                                                                // 214\n    if (!(c.p >= 0)) {                                                                                               // 215\n      throw new Error('position cannot be negative');                                                                // 216\n    }                                                                                                                // 217\n  };                                                                                                                 // 218\n                                                                                                                     // 219\n  checkValidOp = function(op) {                                                                                      // 220\n    var c, _i, _len;                                                                                                 // 221\n                                                                                                                     // 222\n    for (_i = 0, _len = op.length; _i < _len; _i++) {                                                                // 223\n      c = op[_i];                                                                                                    // 224\n      checkValidComponent(c);                                                                                        // 225\n    }                                                                                                                // 226\n    return true;                                                                                                     // 227\n  };                                                                                                                 // 228\n                                                                                                                     // 229\n  text.apply = function(snapshot, op) {                                                                              // 230\n    var component, deleted, _i, _len;                                                                                // 231\n                                                                                                                     // 232\n    checkValidOp(op);                                                                                                // 233\n    for (_i = 0, _len = op.length; _i < _len; _i++) {                                                                // 234\n      component = op[_i];                                                                                            // 235\n      if (component.i != null) {                                                                                     // 236\n        snapshot = strInject(snapshot, component.p, component.i);                                                    // 237\n      } else {                                                                                                       // 238\n        deleted = snapshot.slice(component.p, component.p + component.d.length);                                     // 239\n        if (component.d !== deleted) {                                                                               // 240\n          throw new Error(\"Delete component '\" + component.d + \"' does not match deleted text '\" + deleted + \"'\");   // 241\n        }                                                                                                            // 242\n        snapshot = snapshot.slice(0, component.p) + snapshot.slice(component.p + component.d.length);                // 243\n      }                                                                                                              // 244\n    }                                                                                                                // 245\n    return snapshot;                                                                                                 // 246\n  };                                                                                                                 // 247\n                                                                                                                     // 248\n  text._append = append = function(newOp, c) {                                                                       // 249\n    var last, _ref, _ref1;                                                                                           // 250\n                                                                                                                     // 251\n    if (c.i === '' || c.d === '') {                                                                                  // 252\n      return;                                                                                                        // 253\n    }                                                                                                                // 254\n    if (newOp.length === 0) {                                                                                        // 255\n      return newOp.push(c);                                                                                          // 256\n    } else {                                                                                                         // 257\n      last = newOp[newOp.length - 1];                                                                                // 258\n      if ((last.i != null) && (c.i != null) && (last.p <= (_ref = c.p) && _ref <= (last.p + last.i.length))) {       // 259\n        return newOp[newOp.length - 1] = {                                                                           // 260\n          i: strInject(last.i, c.p - last.p, c.i),                                                                   // 261\n          p: last.p                                                                                                  // 262\n        };                                                                                                           // 263\n      } else if ((last.d != null) && (c.d != null) && (c.p <= (_ref1 = last.p) && _ref1 <= (c.p + c.d.length))) {    // 264\n        return newOp[newOp.length - 1] = {                                                                           // 265\n          d: strInject(c.d, last.p - c.p, last.d),                                                                   // 266\n          p: c.p                                                                                                     // 267\n        };                                                                                                           // 268\n      } else {                                                                                                       // 269\n        return newOp.push(c);                                                                                        // 270\n      }                                                                                                              // 271\n    }                                                                                                                // 272\n  };                                                                                                                 // 273\n                                                                                                                     // 274\n  text.compose = function(op1, op2) {                                                                                // 275\n    var c, newOp, _i, _len;                                                                                          // 276\n                                                                                                                     // 277\n    checkValidOp(op1);                                                                                               // 278\n    checkValidOp(op2);                                                                                               // 279\n    newOp = op1.slice();                                                                                             // 280\n    for (_i = 0, _len = op2.length; _i < _len; _i++) {                                                               // 281\n      c = op2[_i];                                                                                                   // 282\n      append(newOp, c);                                                                                              // 283\n    }                                                                                                                // 284\n    return newOp;                                                                                                    // 285\n  };                                                                                                                 // 286\n                                                                                                                     // 287\n  text.compress = function(op) {                                                                                     // 288\n    return text.compose([], op);                                                                                     // 289\n  };                                                                                                                 // 290\n                                                                                                                     // 291\n  text.normalize = function(op) {                                                                                    // 292\n    var c, newOp, _i, _len, _ref;                                                                                    // 293\n                                                                                                                     // 294\n    newOp = [];                                                                                                      // 295\n    if ((op.i != null) || (op.p != null)) {                                                                          // 296\n      op = [op];                                                                                                     // 297\n    }                                                                                                                // 298\n    for (_i = 0, _len = op.length; _i < _len; _i++) {                                                                // 299\n      c = op[_i];                                                                                                    // 300\n      if ((_ref = c.p) == null) {                                                                                    // 301\n        c.p = 0;                                                                                                     // 302\n      }                                                                                                              // 303\n      append(newOp, c);                                                                                              // 304\n    }                                                                                                                // 305\n    return newOp;                                                                                                    // 306\n  };                                                                                                                 // 307\n                                                                                                                     // 308\n  transformPosition = function(pos, c, insertAfter) {                                                                // 309\n    if (c.i != null) {                                                                                               // 310\n      if (c.p < pos || (c.p === pos && insertAfter)) {                                                               // 311\n        return pos + c.i.length;                                                                                     // 312\n      } else {                                                                                                       // 313\n        return pos;                                                                                                  // 314\n      }                                                                                                              // 315\n    } else {                                                                                                         // 316\n      if (pos <= c.p) {                                                                                              // 317\n        return pos;                                                                                                  // 318\n      } else if (pos <= c.p + c.d.length) {                                                                          // 319\n        return c.p;                                                                                                  // 320\n      } else {                                                                                                       // 321\n        return pos - c.d.length;                                                                                     // 322\n      }                                                                                                              // 323\n    }                                                                                                                // 324\n  };                                                                                                                 // 325\n                                                                                                                     // 326\n  text.transformCursor = function(position, op, side) {                                                              // 327\n    var c, insertAfter, _i, _len;                                                                                    // 328\n                                                                                                                     // 329\n    insertAfter = side === 'right';                                                                                  // 330\n    for (_i = 0, _len = op.length; _i < _len; _i++) {                                                                // 331\n      c = op[_i];                                                                                                    // 332\n      position = transformPosition(position, c, insertAfter);                                                        // 333\n    }                                                                                                                // 334\n    return position;                                                                                                 // 335\n  };                                                                                                                 // 336\n                                                                                                                     // 337\n  text._tc = transformComponent = function(dest, c, otherC, side) {                                                  // 338\n    var cIntersect, intersectEnd, intersectStart, newC, otherIntersect, s;                                           // 339\n                                                                                                                     // 340\n    checkValidOp([c]);                                                                                               // 341\n    checkValidOp([otherC]);                                                                                          // 342\n    if (c.i != null) {                                                                                               // 343\n      append(dest, {                                                                                                 // 344\n        i: c.i,                                                                                                      // 345\n        p: transformPosition(c.p, otherC, side === 'right')                                                          // 346\n      });                                                                                                            // 347\n    } else {                                                                                                         // 348\n      if (otherC.i != null) {                                                                                        // 349\n        s = c.d;                                                                                                     // 350\n        if (c.p < otherC.p) {                                                                                        // 351\n          append(dest, {                                                                                             // 352\n            d: s.slice(0, otherC.p - c.p),                                                                           // 353\n            p: c.p                                                                                                   // 354\n          });                                                                                                        // 355\n          s = s.slice(otherC.p - c.p);                                                                               // 356\n        }                                                                                                            // 357\n        if (s !== '') {                                                                                              // 358\n          append(dest, {                                                                                             // 359\n            d: s,                                                                                                    // 360\n            p: c.p + otherC.i.length                                                                                 // 361\n          });                                                                                                        // 362\n        }                                                                                                            // 363\n      } else {                                                                                                       // 364\n        if (c.p >= otherC.p + otherC.d.length) {                                                                     // 365\n          append(dest, {                                                                                             // 366\n            d: c.d,                                                                                                  // 367\n            p: c.p - otherC.d.length                                                                                 // 368\n          });                                                                                                        // 369\n        } else if (c.p + c.d.length <= otherC.p) {                                                                   // 370\n          append(dest, c);                                                                                           // 371\n        } else {                                                                                                     // 372\n          newC = {                                                                                                   // 373\n            d: '',                                                                                                   // 374\n            p: c.p                                                                                                   // 375\n          };                                                                                                         // 376\n          if (c.p < otherC.p) {                                                                                      // 377\n            newC.d = c.d.slice(0, otherC.p - c.p);                                                                   // 378\n          }                                                                                                          // 379\n          if (c.p + c.d.length > otherC.p + otherC.d.length) {                                                       // 380\n            newC.d += c.d.slice(otherC.p + otherC.d.length - c.p);                                                   // 381\n          }                                                                                                          // 382\n          intersectStart = Math.max(c.p, otherC.p);                                                                  // 383\n          intersectEnd = Math.min(c.p + c.d.length, otherC.p + otherC.d.length);                                     // 384\n          cIntersect = c.d.slice(intersectStart - c.p, intersectEnd - c.p);                                          // 385\n          otherIntersect = otherC.d.slice(intersectStart - otherC.p, intersectEnd - otherC.p);                       // 386\n          if (cIntersect !== otherIntersect) {                                                                       // 387\n            throw new Error('Delete ops delete different text in the same region of the document');                  // 388\n          }                                                                                                          // 389\n          if (newC.d !== '') {                                                                                       // 390\n            newC.p = transformPosition(newC.p, otherC);                                                              // 391\n            append(dest, newC);                                                                                      // 392\n          }                                                                                                          // 393\n        }                                                                                                            // 394\n      }                                                                                                              // 395\n    }                                                                                                                // 396\n    return dest;                                                                                                     // 397\n  };                                                                                                                 // 398\n                                                                                                                     // 399\n  invertComponent = function(c) {                                                                                    // 400\n    if (c.i != null) {                                                                                               // 401\n      return {                                                                                                       // 402\n        d: c.i,                                                                                                      // 403\n        p: c.p                                                                                                       // 404\n      };                                                                                                             // 405\n    } else {                                                                                                         // 406\n      return {                                                                                                       // 407\n        i: c.d,                                                                                                      // 408\n        p: c.p                                                                                                       // 409\n      };                                                                                                             // 410\n    }                                                                                                                // 411\n  };                                                                                                                 // 412\n                                                                                                                     // 413\n  text.invert = function(op) {                                                                                       // 414\n    var c, _i, _len, _ref, _results;                                                                                 // 415\n                                                                                                                     // 416\n    _ref = op.slice().reverse();                                                                                     // 417\n    _results = [];                                                                                                   // 418\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                              // 419\n      c = _ref[_i];                                                                                                  // 420\n      _results.push(invertComponent(c));                                                                             // 421\n    }                                                                                                                // 422\n    return _results;                                                                                                 // 423\n  };                                                                                                                 // 424\n                                                                                                                     // 425\n  if (typeof WEB !== \"undefined\" && WEB !== null) {                                                                  // 426\n    exports.types || (exports.types = {});                                                                           // 427\n    bootstrapTransform(text, transformComponent, checkValidOp, append);                                              // 428\n    exports.types.text = text;                                                                                       // 429\n  } else {                                                                                                           // 430\n    module.exports = text;                                                                                           // 431\n    require('./helpers').bootstrapTransform(text, transformComponent, checkValidOp, append);                         // 432\n  }                                                                                                                  // 433\n                                                                                                                     // 434\n  if (typeof WEB === 'undefined') {                                                                                  // 435\n    text = require('./text');                                                                                        // 436\n  }                                                                                                                  // 437\n                                                                                                                     // 438\n  text.api = {                                                                                                       // 439\n    provides: {                                                                                                      // 440\n      text: true                                                                                                     // 441\n    },                                                                                                               // 442\n    getLength: function() {                                                                                          // 443\n      return this.snapshot.length;                                                                                   // 444\n    },                                                                                                               // 445\n    getText: function() {                                                                                            // 446\n      return this.snapshot;                                                                                          // 447\n    },                                                                                                               // 448\n    insert: function(pos, text, callback) {                                                                          // 449\n      var op;                                                                                                        // 450\n                                                                                                                     // 451\n      op = [                                                                                                         // 452\n        {                                                                                                            // 453\n          p: pos,                                                                                                    // 454\n          i: text                                                                                                    // 455\n        }                                                                                                            // 456\n      ];                                                                                                             // 457\n      this.submitOp(op, callback);                                                                                   // 458\n      return op;                                                                                                     // 459\n    },                                                                                                               // 460\n    del: function(pos, length, callback) {                                                                           // 461\n      var op;                                                                                                        // 462\n                                                                                                                     // 463\n      op = [                                                                                                         // 464\n        {                                                                                                            // 465\n          p: pos,                                                                                                    // 466\n          d: this.snapshot.slice(pos, pos + length)                                                                  // 467\n        }                                                                                                            // 468\n      ];                                                                                                             // 469\n      this.submitOp(op, callback);                                                                                   // 470\n      return op;                                                                                                     // 471\n    },                                                                                                               // 472\n    _register: function() {                                                                                          // 473\n      return this.on('remoteop', function(op) {                                                                      // 474\n        var component, _i, _len, _results;                                                                           // 475\n                                                                                                                     // 476\n        _results = [];                                                                                               // 477\n        for (_i = 0, _len = op.length; _i < _len; _i++) {                                                            // 478\n          component = op[_i];                                                                                        // 479\n          if (component.i !== void 0) {                                                                              // 480\n            _results.push(this.emit('insert', component.p, component.i));                                            // 481\n          } else {                                                                                                   // 482\n            _results.push(this.emit('delete', component.p, component.d));                                            // 483\n          }                                                                                                          // 484\n        }                                                                                                            // 485\n        return _results;                                                                                             // 486\n      });                                                                                                            // 487\n    }                                                                                                                // 488\n  };                                                                                                                 // 489\n                                                                                                                     // 490\n  if (typeof WEB === \"undefined\" || WEB === null) {                                                                  // 491\n    types = require('../types');                                                                                     // 492\n  }                                                                                                                  // 493\n                                                                                                                     // 494\n  if (typeof WEB !== \"undefined\" && WEB !== null) {                                                                  // 495\n    exports.extendDoc = function(name, fn) {                                                                         // 496\n      return Doc.prototype[name] = fn;                                                                               // 497\n    };                                                                                                               // 498\n  }                                                                                                                  // 499\n                                                                                                                     // 500\n  Doc = (function() {                                                                                                // 501\n    function Doc(connection, name, openData) {                                                                       // 502\n      this.connection = connection;                                                                                  // 503\n      this.name = name;                                                                                              // 504\n      this.shout = __bind(this.shout, this);                                                                         // 505\n      this.flush = __bind(this.flush, this);                                                                         // 506\n      openData || (openData = {});                                                                                   // 507\n      this.version = openData.v;                                                                                     // 508\n      this.snapshot = openData.snaphot;                                                                              // 509\n      if (openData.type) {                                                                                           // 510\n        this._setType(openData.type);                                                                                // 511\n      }                                                                                                              // 512\n      this.state = 'closed';                                                                                         // 513\n      this.autoOpen = false;                                                                                         // 514\n      this._create = openData.create;                                                                                // 515\n      this.inflightOp = null;                                                                                        // 516\n      this.inflightCallbacks = [];                                                                                   // 517\n      this.inflightSubmittedIds = [];                                                                                // 518\n      this.pendingOp = null;                                                                                         // 519\n      this.pendingCallbacks = [];                                                                                    // 520\n      this.serverOps = {};                                                                                           // 521\n    }                                                                                                                // 522\n                                                                                                                     // 523\n    Doc.prototype._xf = function(client, server) {                                                                   // 524\n      var client_, server_;                                                                                          // 525\n                                                                                                                     // 526\n      if (this.type.transformX) {                                                                                    // 527\n        return this.type.transformX(client, server);                                                                 // 528\n      } else {                                                                                                       // 529\n        client_ = this.type.transform(client, server, 'left');                                                       // 530\n        server_ = this.type.transform(server, client, 'right');                                                      // 531\n        return [client_, server_];                                                                                   // 532\n      }                                                                                                              // 533\n    };                                                                                                               // 534\n                                                                                                                     // 535\n    Doc.prototype._otApply = function(docOp, isRemote) {                                                             // 536\n      var oldSnapshot;                                                                                               // 537\n                                                                                                                     // 538\n      oldSnapshot = this.snapshot;                                                                                   // 539\n      this.snapshot = this.type.apply(this.snapshot, docOp);                                                         // 540\n      this.emit('change', docOp, oldSnapshot);                                                                       // 541\n      if (isRemote) {                                                                                                // 542\n        return this.emit('remoteop', docOp, oldSnapshot);                                                            // 543\n      }                                                                                                              // 544\n    };                                                                                                               // 545\n                                                                                                                     // 546\n    Doc.prototype._connectionStateChanged = function(state, data) {                                                  // 547\n      switch (state) {                                                                                               // 548\n        case 'disconnected':                                                                                         // 549\n          this.state = 'closed';                                                                                     // 550\n          if (this.inflightOp) {                                                                                     // 551\n            this.inflightSubmittedIds.push(this.connection.id);                                                      // 552\n          }                                                                                                          // 553\n          this.emit('closed');                                                                                       // 554\n          break;                                                                                                     // 555\n        case 'ok':                                                                                                   // 556\n          if (this.autoOpen) {                                                                                       // 557\n            this.open();                                                                                             // 558\n          }                                                                                                          // 559\n          break;                                                                                                     // 560\n        case 'stopped':                                                                                              // 561\n          if (typeof this._openCallback === \"function\") {                                                            // 562\n            this._openCallback(data);                                                                                // 563\n          }                                                                                                          // 564\n      }                                                                                                              // 565\n      return this.emit(state, data);                                                                                 // 566\n    };                                                                                                               // 567\n                                                                                                                     // 568\n    Doc.prototype._setType = function(type) {                                                                        // 569\n      var k, v, _ref;                                                                                                // 570\n                                                                                                                     // 571\n      if (this.type) {                                                                                               // 572\n        return;                                                                                                      // 573\n      }                                                                                                              // 574\n      if (typeof type === 'string') {                                                                                // 575\n        type = types[type];                                                                                          // 576\n      }                                                                                                              // 577\n      if (!(type && type.compose)) {                                                                                 // 578\n        throw new Error('Support for types without compose() is not implemented');                                   // 579\n      }                                                                                                              // 580\n      this.type = type;                                                                                              // 581\n      if (type.api) {                                                                                                // 582\n        _ref = type.api;                                                                                             // 583\n        for (k in _ref) {                                                                                            // 584\n          v = _ref[k];                                                                                               // 585\n          this[k] = v;                                                                                               // 586\n        }                                                                                                            // 587\n        return typeof this._register === \"function\" ? this._register() : void 0;                                     // 588\n      } else {                                                                                                       // 589\n        return this.provides = {};                                                                                   // 590\n      }                                                                                                              // 591\n    };                                                                                                               // 592\n                                                                                                                     // 593\n    Doc.prototype._onMessage = function(msg) {                                                                       // 594\n      var callback, docOp, error, oldInflightOp, op, path, response, undo, value, _i, _j, _len, _len1, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;\n                                                                                                                     // 596\n      switch (false) {                                                                                               // 597\n        case msg.open !== true:                                                                                      // 598\n          this.state = 'open';                                                                                       // 599\n          this._create = false;                                                                                      // 600\n          if (this.created == null) {                                                                                // 601\n            this.created = !!msg.create;                                                                             // 602\n          }                                                                                                          // 603\n          if (msg.type) {                                                                                            // 604\n            this._setType(msg.type);                                                                                 // 605\n          }                                                                                                          // 606\n          if (msg.create) {                                                                                          // 607\n            this.created = true;                                                                                     // 608\n            this.snapshot = this.type.create();                                                                      // 609\n          } else {                                                                                                   // 610\n            if (this.created !== true) {                                                                             // 611\n              this.created = false;                                                                                  // 612\n            }                                                                                                        // 613\n            if (msg.snapshot !== void 0) {                                                                           // 614\n              this.snapshot = msg.snapshot;                                                                          // 615\n            }                                                                                                        // 616\n          }                                                                                                          // 617\n          if (msg.meta) {                                                                                            // 618\n            this.meta = msg.meta;                                                                                    // 619\n          }                                                                                                          // 620\n          if (msg.v != null) {                                                                                       // 621\n            this.version = msg.v;                                                                                    // 622\n          }                                                                                                          // 623\n          if (this.inflightOp) {                                                                                     // 624\n            response = {                                                                                             // 625\n              doc: this.name,                                                                                        // 626\n              op: this.inflightOp,                                                                                   // 627\n              v: this.version                                                                                        // 628\n            };                                                                                                       // 629\n            if (this.inflightSubmittedIds.length) {                                                                  // 630\n              response.dupIfSource = this.inflightSubmittedIds;                                                      // 631\n            }                                                                                                        // 632\n            this.connection.send(response);                                                                          // 633\n          } else {                                                                                                   // 634\n            this.flush();                                                                                            // 635\n          }                                                                                                          // 636\n          this.emit('open');                                                                                         // 637\n          return typeof this._openCallback === \"function\" ? this._openCallback(null) : void 0;                       // 638\n        case msg.open !== false:                                                                                     // 639\n          if (msg.error) {                                                                                           // 640\n            if (typeof console !== \"undefined\" && console !== null) {                                                // 641\n              console.error(\"Could not open document: \" + msg.error);                                                // 642\n            }                                                                                                        // 643\n            this.emit('error', msg.error);                                                                           // 644\n            if (typeof this._openCallback === \"function\") {                                                          // 645\n              this._openCallback(msg.error);                                                                         // 646\n            }                                                                                                        // 647\n          }                                                                                                          // 648\n          this.state = 'closed';                                                                                     // 649\n          this.emit('closed');                                                                                       // 650\n          if (typeof this._closeCallback === \"function\") {                                                           // 651\n            this._closeCallback();                                                                                   // 652\n          }                                                                                                          // 653\n          return this._closeCallback = null;                                                                         // 654\n        case !(msg.op === null && error === 'Op already submitted'):                                                 // 655\n          break;                                                                                                     // 656\n        case !((msg.op === void 0 && msg.v !== void 0) || (msg.op && (_ref = msg.meta.source, __indexOf.call(this.inflightSubmittedIds, _ref) >= 0))):\n          oldInflightOp = this.inflightOp;                                                                           // 658\n          this.inflightOp = null;                                                                                    // 659\n          this.inflightSubmittedIds.length = 0;                                                                      // 660\n          error = msg.error;                                                                                         // 661\n          if (error) {                                                                                               // 662\n            if (this.type.invert) {                                                                                  // 663\n              undo = this.type.invert(oldInflightOp);                                                                // 664\n              if (this.pendingOp) {                                                                                  // 665\n                _ref1 = this._xf(this.pendingOp, undo), this.pendingOp = _ref1[0], undo = _ref1[1];                  // 666\n              }                                                                                                      // 667\n              this._otApply(undo, true);                                                                             // 668\n            } else {                                                                                                 // 669\n              this.emit('error', \"Op apply failed (\" + error + \") and the op could not be reverted\");                // 670\n            }                                                                                                        // 671\n            _ref2 = this.inflightCallbacks;                                                                          // 672\n            for (_i = 0, _len = _ref2.length; _i < _len; _i++) {                                                     // 673\n              callback = _ref2[_i];                                                                                  // 674\n              callback(error);                                                                                       // 675\n            }                                                                                                        // 676\n          } else {                                                                                                   // 677\n            if (msg.v !== this.version) {                                                                            // 678\n              throw new Error('Invalid version from server');                                                        // 679\n            }                                                                                                        // 680\n            this.serverOps[this.version] = oldInflightOp;                                                            // 681\n            this.version++;                                                                                          // 682\n            this.emit('acknowledge', oldInflightOp);                                                                 // 683\n            _ref3 = this.inflightCallbacks;                                                                          // 684\n            for (_j = 0, _len1 = _ref3.length; _j < _len1; _j++) {                                                   // 685\n              callback = _ref3[_j];                                                                                  // 686\n              callback(null, oldInflightOp);                                                                         // 687\n            }                                                                                                        // 688\n          }                                                                                                          // 689\n          return this.flush();                                                                                       // 690\n        case !msg.op:                                                                                                // 691\n          if (msg.v < this.version) {                                                                                // 692\n            return;                                                                                                  // 693\n          }                                                                                                          // 694\n          if (msg.doc !== this.name) {                                                                               // 695\n            return this.emit('error', \"Expected docName '\" + this.name + \"' but got \" + msg.doc);                    // 696\n          }                                                                                                          // 697\n          if (msg.v !== this.version) {                                                                              // 698\n            return this.emit('error', \"Expected version \" + this.version + \" but got \" + msg.v);                     // 699\n          }                                                                                                          // 700\n          op = msg.op;                                                                                               // 701\n          this.serverOps[this.version] = op;                                                                         // 702\n          docOp = op;                                                                                                // 703\n          if (this.inflightOp !== null) {                                                                            // 704\n            _ref4 = this._xf(this.inflightOp, docOp), this.inflightOp = _ref4[0], docOp = _ref4[1];                  // 705\n          }                                                                                                          // 706\n          if (this.pendingOp !== null) {                                                                             // 707\n            _ref5 = this._xf(this.pendingOp, docOp), this.pendingOp = _ref5[0], docOp = _ref5[1];                    // 708\n          }                                                                                                          // 709\n          this.version++;                                                                                            // 710\n          return this._otApply(docOp, true);                                                                         // 711\n        case !msg.meta:                                                                                              // 712\n          _ref6 = msg.meta, path = _ref6.path, value = _ref6.value;                                                  // 713\n          switch (path != null ? path[0] : void 0) {                                                                 // 714\n            case 'shout':                                                                                            // 715\n              return this.emit('shout', value);                                                                      // 716\n            default:                                                                                                 // 717\n              return typeof console !== \"undefined\" && console !== null ? console.warn('Unhandled meta op:', msg) : void 0;\n          }                                                                                                          // 719\n          break;                                                                                                     // 720\n        default:                                                                                                     // 721\n          return typeof console !== \"undefined\" && console !== null ? console.warn('Unhandled document message:', msg) : void 0;\n      }                                                                                                              // 723\n    };                                                                                                               // 724\n                                                                                                                     // 725\n    Doc.prototype.flush = function() {                                                                               // 726\n      if (!(this.connection.state === 'ok' && this.inflightOp === null && this.pendingOp !== null)) {                // 727\n        return;                                                                                                      // 728\n      }                                                                                                              // 729\n      this.inflightOp = this.pendingOp;                                                                              // 730\n      this.inflightCallbacks = this.pendingCallbacks;                                                                // 731\n      this.pendingOp = null;                                                                                         // 732\n      this.pendingCallbacks = [];                                                                                    // 733\n      return this.connection.send({                                                                                  // 734\n        doc: this.name,                                                                                              // 735\n        op: this.inflightOp,                                                                                         // 736\n        v: this.version                                                                                              // 737\n      });                                                                                                            // 738\n    };                                                                                                               // 739\n                                                                                                                     // 740\n    Doc.prototype.submitOp = function(op, callback) {                                                                // 741\n      if (this.type.normalize != null) {                                                                             // 742\n        op = this.type.normalize(op);                                                                                // 743\n      }                                                                                                              // 744\n      this.snapshot = this.type.apply(this.snapshot, op);                                                            // 745\n      if (this.pendingOp !== null) {                                                                                 // 746\n        this.pendingOp = this.type.compose(this.pendingOp, op);                                                      // 747\n      } else {                                                                                                       // 748\n        this.pendingOp = op;                                                                                         // 749\n      }                                                                                                              // 750\n      if (callback) {                                                                                                // 751\n        this.pendingCallbacks.push(callback);                                                                        // 752\n      }                                                                                                              // 753\n      this.emit('change', op);                                                                                       // 754\n      return setTimeout(this.flush, 0);                                                                              // 755\n    };                                                                                                               // 756\n                                                                                                                     // 757\n    Doc.prototype.shout = function(msg) {                                                                            // 758\n      return this.connection.send({                                                                                  // 759\n        doc: this.name,                                                                                              // 760\n        meta: {                                                                                                      // 761\n          path: ['shout'],                                                                                           // 762\n          value: msg                                                                                                 // 763\n        }                                                                                                            // 764\n      });                                                                                                            // 765\n    };                                                                                                               // 766\n                                                                                                                     // 767\n    Doc.prototype.open = function(callback) {                                                                        // 768\n      var message,                                                                                                   // 769\n        _this = this;                                                                                                // 770\n                                                                                                                     // 771\n      this.autoOpen = true;                                                                                          // 772\n      if (this.state !== 'closed') {                                                                                 // 773\n        return;                                                                                                      // 774\n      }                                                                                                              // 775\n      message = {                                                                                                    // 776\n        doc: this.name,                                                                                              // 777\n        open: true                                                                                                   // 778\n      };                                                                                                             // 779\n      if (this.snapshot === void 0) {                                                                                // 780\n        message.snapshot = null;                                                                                     // 781\n      }                                                                                                              // 782\n      if (this.type) {                                                                                               // 783\n        message.type = this.type.name;                                                                               // 784\n      }                                                                                                              // 785\n      if (this.version != null) {                                                                                    // 786\n        message.v = this.version;                                                                                    // 787\n      }                                                                                                              // 788\n      if (this._create) {                                                                                            // 789\n        message.create = true;                                                                                       // 790\n      }                                                                                                              // 791\n      this.connection.send(message);                                                                                 // 792\n      this.state = 'opening';                                                                                        // 793\n      return this._openCallback = function(error) {                                                                  // 794\n        _this._openCallback = null;                                                                                  // 795\n        return typeof callback === \"function\" ? callback(error) : void 0;                                            // 796\n      };                                                                                                             // 797\n    };                                                                                                               // 798\n                                                                                                                     // 799\n    Doc.prototype.close = function(callback) {                                                                       // 800\n      this.autoOpen = false;                                                                                         // 801\n      if (this.state === 'closed') {                                                                                 // 802\n        return typeof callback === \"function\" ? callback() : void 0;                                                 // 803\n      }                                                                                                              // 804\n      this.connection.send({                                                                                         // 805\n        doc: this.name,                                                                                              // 806\n        open: false                                                                                                  // 807\n      });                                                                                                            // 808\n      this.state = 'closed';                                                                                         // 809\n      this.emit('closing');                                                                                          // 810\n      return this._closeCallback = callback;                                                                         // 811\n    };                                                                                                               // 812\n                                                                                                                     // 813\n    return Doc;                                                                                                      // 814\n                                                                                                                     // 815\n  })();                                                                                                              // 816\n                                                                                                                     // 817\n  if (typeof WEB === \"undefined\" || WEB === null) {                                                                  // 818\n    MicroEvent = require('./microevent');                                                                            // 819\n  }                                                                                                                  // 820\n                                                                                                                     // 821\n  MicroEvent.mixin(Doc);                                                                                             // 822\n                                                                                                                     // 823\n  exports.Doc = Doc;                                                                                                 // 824\n                                                                                                                     // 825\n  /*                                                                                                                 // 826\n  This behaves like a WebSocket in every way, except if it fails to connect,                                         // 827\n  or it gets disconnected, it will repeatedly poll until it succesfully connects                                     // 828\n  again.                                                                                                             // 829\n                                                                                                                     // 830\n  It is API compatible, so when you have:                                                                            // 831\n  ws = new WebSocket('ws://....');                                                                                   // 832\n  you can replace with:                                                                                              // 833\n  ws = new ReconnectingWebSocket('ws://....');                                                                       // 834\n                                                                                                                     // 835\n  The event stream will typically look like:                                                                         // 836\n  onopen                                                                                                             // 837\n  onmessage                                                                                                          // 838\n  onmessage                                                                                                          // 839\n  onclose // lost connection                                                                                         // 840\n  onopen  // sometime later...                                                                                       // 841\n  onmessage                                                                                                          // 842\n  onmessage                                                                                                          // 843\n  etc...                                                                                                             // 844\n                                                                                                                     // 845\n  It is API compatible with the standard WebSocket API.                                                              // 846\n                                                                                                                     // 847\n  Inspired from: https://github.com/joewalnes/reconnecting-websocket/                                                // 848\n  Contributors:                                                                                                      // 849\n  - Joe Walnes                                                                                                       // 850\n  - Didier Colens                                                                                                    // 851\n  - Wout Mertens                                                                                                     // 852\n  */                                                                                                                 // 853\n                                                                                                                     // 854\n                                                                                                                     // 855\n  ReconnectingWebSocket = (function() {                                                                              // 856\n    function ReconnectingWebSocket(url, protocols, Socket) {                                                         // 857\n      var connect, timedOut,                                                                                         // 858\n        _this = this;                                                                                                // 859\n                                                                                                                     // 860\n      if ((protocols != null) && typeof protocols === 'function') {                                                  // 861\n        Socket = protocols;                                                                                          // 862\n        protocols = void 0;                                                                                          // 863\n      } else if (typeof Socket !== 'function') {                                                                     // 864\n        Socket = WebSocket;                                                                                          // 865\n      }                                                                                                              // 866\n      this.debug = this.debugAll;                                                                                    // 867\n      this.reconnectInterval = 1000;                                                                                 // 868\n      this.timeoutInterval = 2000;                                                                                   // 869\n      this.forcedClose = false;                                                                                      // 870\n      this.url = url;                                                                                                // 871\n      this.protocols = protocols;                                                                                    // 872\n      this.readyState = Socket.CONNECTING;                                                                           // 873\n      this.URL = url;                                                                                                // 874\n      timedOut = false;                                                                                              // 875\n      connect = function(reconnectAttempt) {                                                                         // 876\n        var timeout;                                                                                                 // 877\n                                                                                                                     // 878\n        _this.ws = new Socket(_this.url);                                                                            // 879\n        if (_this.debug) {                                                                                           // 880\n          console.debug(\"ReconnectingWebSocket\", \"attempt-connect\", _this.url);                                      // 881\n        }                                                                                                            // 882\n        timeout = setTimeout(function() {                                                                            // 883\n          if (_this.debug) {                                                                                         // 884\n            console.debug(\"ReconnectingWebSocket\", \"connection-timeout\", _this.url);                                 // 885\n          }                                                                                                          // 886\n          timedOut = true;                                                                                           // 887\n          _this.ws.close();                                                                                          // 888\n          return timedOut = false;                                                                                   // 889\n        }, _this.timeoutInterval);                                                                                   // 890\n        _this.ws.onopen = function(event) {                                                                          // 891\n          clearTimeout(timeout);                                                                                     // 892\n          if (_this.debug) {                                                                                         // 893\n            console.debug(\"ReconnectingWebSocket\", \"onopen\", _this.url);                                             // 894\n          }                                                                                                          // 895\n          _this.readyState = Socket.OPEN;                                                                            // 896\n          reconnectAttempt = false;                                                                                  // 897\n          return _this.onopen(event);                                                                                // 898\n        };                                                                                                           // 899\n        _this.ws.onclose = function(event) {                                                                         // 900\n          clearTimeout(timeout);                                                                                     // 901\n          _this.ws = null;                                                                                           // 902\n          if (_this.forcedClose) {                                                                                   // 903\n            _this.readyState = Socket.CLOSED;                                                                        // 904\n            return _this.onclose(event);                                                                             // 905\n          } else {                                                                                                   // 906\n            _this.readyState = Socket.CONNECTING;                                                                    // 907\n            _this.onconnecting(event);                                                                               // 908\n            if (!reconnectAttempt && !timedOut) {                                                                    // 909\n              if (_this.debug) {                                                                                     // 910\n                console.debug(\"ReconnectingWebSocket\", \"onclose\", _this.url);                                        // 911\n              }                                                                                                      // 912\n              _this.onclose(event);                                                                                  // 913\n            }                                                                                                        // 914\n            return setTimeout((function() {                                                                          // 915\n              return connect(true);                                                                                  // 916\n            }), _this.reconnectInterval);                                                                            // 917\n          }                                                                                                          // 918\n        };                                                                                                           // 919\n        _this.ws.onmessage = function(event) {                                                                       // 920\n          if (_this.debug) {                                                                                         // 921\n            console.debug(\"ReconnectingWebSocket\", \"onmessage\", _this.url, event.data);                              // 922\n          }                                                                                                          // 923\n          return _this.onmessage(event);                                                                             // 924\n        };                                                                                                           // 925\n        return _this.ws.onerror = function(event) {                                                                  // 926\n          if (_this.debug) {                                                                                         // 927\n            console.debug(\"ReconnectingWebSocket\", \"onerror\", _this.url, event);                                     // 928\n          }                                                                                                          // 929\n          return _this.onerror(event);                                                                               // 930\n        };                                                                                                           // 931\n      };                                                                                                             // 932\n      connect(this.url);                                                                                             // 933\n    }                                                                                                                // 934\n                                                                                                                     // 935\n    ReconnectingWebSocket.prototype.onopen = function(event) {};                                                     // 936\n                                                                                                                     // 937\n    ReconnectingWebSocket.prototype.onclose = function(event) {};                                                    // 938\n                                                                                                                     // 939\n    ReconnectingWebSocket.prototype.onconnecting = function(event) {};                                               // 940\n                                                                                                                     // 941\n    ReconnectingWebSocket.prototype.onmessage = function(event) {};                                                  // 942\n                                                                                                                     // 943\n    ReconnectingWebSocket.prototype.onerror = function(event) {};                                                    // 944\n                                                                                                                     // 945\n    ReconnectingWebSocket.prototype.send = function(data) {                                                          // 946\n      if (this.ws) {                                                                                                 // 947\n        if (this.debug) {                                                                                            // 948\n          console.debug(\"ReconnectingWebSocket\", \"send\", this.url, data);                                            // 949\n        }                                                                                                            // 950\n        return this.ws.send(data);                                                                                   // 951\n      } else {                                                                                                       // 952\n        throw \"INVALID_STATE_ERR : Pausing to reconnect websocket\";                                                  // 953\n      }                                                                                                              // 954\n    };                                                                                                               // 955\n                                                                                                                     // 956\n    ReconnectingWebSocket.prototype.close = function() {                                                             // 957\n      if (this.ws) {                                                                                                 // 958\n        this.forcedClose = true;                                                                                     // 959\n        return this.ws.close();                                                                                      // 960\n      }                                                                                                              // 961\n    };                                                                                                               // 962\n                                                                                                                     // 963\n    /*                                                                                                               // 964\n    Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.          // 965\n    */                                                                                                               // 966\n                                                                                                                     // 967\n                                                                                                                     // 968\n    ReconnectingWebSocket.prototype.debugAll = false;                                                                // 969\n                                                                                                                     // 970\n    /*                                                                                                               // 971\n    Additional public API method to refresh the connection if still open (close, re-open).                           // 972\n    For example, if the app suspects bad data / missed heart beats, it can try to refresh.                           // 973\n    */                                                                                                               // 974\n                                                                                                                     // 975\n                                                                                                                     // 976\n    ReconnectingWebSocket.prototype.refresh = function() {                                                           // 977\n      if (this.ws) {                                                                                                 // 978\n        return this.ws.close();                                                                                      // 979\n      }                                                                                                              // 980\n    };                                                                                                               // 981\n                                                                                                                     // 982\n    return ReconnectingWebSocket;                                                                                    // 983\n                                                                                                                     // 984\n  })();                                                                                                              // 985\n                                                                                                                     // 986\n  if (typeof WEB !== \"undefined\" && WEB !== null) {                                                                  // 987\n    types = exports.types;                                                                                           // 988\n    BCSocket = window.BCSocket, SockJS = window.SockJS, WebSocket = window.WebSocket;                                // 989\n    if (BCSocket) {                                                                                                  // 990\n      socketImpl = 'channel';                                                                                        // 991\n    } else {                                                                                                         // 992\n      if (SockJS) {                                                                                                  // 993\n        socketImpl = 'sockjs';                                                                                       // 994\n      } else {                                                                                                       // 995\n        socketImpl = 'websocket';                                                                                    // 996\n      }                                                                                                              // 997\n    }                                                                                                                // 998\n  } else {                                                                                                           // 999\n    types = require('../types');                                                                                     // 1000\n    BCSocket = require('browserchannel').BCSocket;                                                                   // 1001\n    Doc = require('./doc').Doc;                                                                                      // 1002\n    WebSocket = require('ws');                                                                                       // 1003\n    socketImpl = null;                                                                                               // 1004\n  }                                                                                                                  // 1005\n                                                                                                                     // 1006\n  Connection = (function() {                                                                                         // 1007\n    function Connection(host, authentication) {                                                                      // 1008\n      var _this = this;                                                                                              // 1009\n                                                                                                                     // 1010\n      this.docs = {};                                                                                                // 1011\n      this.state = 'connecting';                                                                                     // 1012\n      if (socketImpl == null) {                                                                                      // 1013\n        if (host.match(/^ws:/)) {                                                                                    // 1014\n          socketImpl = 'websocket';                                                                                  // 1015\n        }                                                                                                            // 1016\n      }                                                                                                              // 1017\n      this.socket = (function() {                                                                                    // 1018\n        switch (socketImpl) {                                                                                        // 1019\n          case 'channel':                                                                                            // 1020\n            return new BCSocket(host, {                                                                              // 1021\n              reconnect: true                                                                                        // 1022\n            });                                                                                                      // 1023\n          case 'sockjs':                                                                                             // 1024\n            return new ReconnectingWebSocket(host, SockJS);                                                          // 1025\n          case 'websocket':                                                                                          // 1026\n            return new ReconnectingWebSocket(host);                                                                  // 1027\n          default:                                                                                                   // 1028\n            return new BCSocket(host, {                                                                              // 1029\n              reconnect: true                                                                                        // 1030\n            });                                                                                                      // 1031\n        }                                                                                                            // 1032\n      })();                                                                                                          // 1033\n      this.socket.onmessage = function(msg) {                                                                        // 1034\n        var docName;                                                                                                 // 1035\n                                                                                                                     // 1036\n        if (socketImpl === 'sockjs' || socketImpl === 'websocket') {                                                 // 1037\n          msg = JSON.parse(msg.data);                                                                                // 1038\n        }                                                                                                            // 1039\n        if (msg.auth === null) {                                                                                     // 1040\n          _this.lastError = msg.error;                                                                               // 1041\n          _this.disconnect();                                                                                        // 1042\n          return _this.emit('connect failed', msg.error);                                                            // 1043\n        } else if (msg.auth) {                                                                                       // 1044\n          _this.id = msg.auth;                                                                                       // 1045\n          _this.setState('ok');                                                                                      // 1046\n          return;                                                                                                    // 1047\n        }                                                                                                            // 1048\n        docName = msg.doc;                                                                                           // 1049\n        if (docName !== void 0) {                                                                                    // 1050\n          _this.lastReceivedDoc = docName;                                                                           // 1051\n        } else {                                                                                                     // 1052\n          msg.doc = docName = _this.lastReceivedDoc;                                                                 // 1053\n        }                                                                                                            // 1054\n        if (_this.docs[docName]) {                                                                                   // 1055\n          return _this.docs[docName]._onMessage(msg);                                                                // 1056\n        } else {                                                                                                     // 1057\n          return typeof console !== \"undefined\" && console !== null ? console.error('Unhandled message', msg) : void 0;\n        }                                                                                                            // 1059\n      };                                                                                                             // 1060\n      this.connected = false;                                                                                        // 1061\n      this.socket.onclose = function(reason) {                                                                       // 1062\n        _this.setState('disconnected', reason);                                                                      // 1063\n        if (reason === 'Closed' || reason === 'Stopped by server') {                                                 // 1064\n          return _this.setState('stopped', _this.lastError || reason);                                               // 1065\n        }                                                                                                            // 1066\n      };                                                                                                             // 1067\n      this.socket.onerror = function(e) {                                                                            // 1068\n        return _this.emit('error', e);                                                                               // 1069\n      };                                                                                                             // 1070\n      this.socket.onopen = function() {                                                                              // 1071\n        _this.send({                                                                                                 // 1072\n          auth: authentication ? authentication : null                                                               // 1073\n        });                                                                                                          // 1074\n        _this.lastError = _this.lastReceivedDoc = _this.lastSentDoc = null;                                          // 1075\n        return _this.setState('handshaking');                                                                        // 1076\n      };                                                                                                             // 1077\n      this.socket.onconnecting = function() {                                                                        // 1078\n        return _this.setState('connecting');                                                                         // 1079\n      };                                                                                                             // 1080\n    }                                                                                                                // 1081\n                                                                                                                     // 1082\n    Connection.prototype.setState = function(state, data) {                                                          // 1083\n      var doc, docName, _ref, _results;                                                                              // 1084\n                                                                                                                     // 1085\n      if (this.state === state) {                                                                                    // 1086\n        return;                                                                                                      // 1087\n      }                                                                                                              // 1088\n      this.state = state;                                                                                            // 1089\n      if (state === 'disconnected') {                                                                                // 1090\n        delete this.id;                                                                                              // 1091\n      }                                                                                                              // 1092\n      this.emit(state, data);                                                                                        // 1093\n      _ref = this.docs;                                                                                              // 1094\n      _results = [];                                                                                                 // 1095\n      for (docName in _ref) {                                                                                        // 1096\n        doc = _ref[docName];                                                                                         // 1097\n        _results.push(doc._connectionStateChanged(state, data));                                                     // 1098\n      }                                                                                                              // 1099\n      return _results;                                                                                               // 1100\n    };                                                                                                               // 1101\n                                                                                                                     // 1102\n    Connection.prototype.send = function(data) {                                                                     // 1103\n      var docName;                                                                                                   // 1104\n                                                                                                                     // 1105\n      if (data.doc) {                                                                                                // 1106\n        docName = data.doc;                                                                                          // 1107\n        if (docName === this.lastSentDoc) {                                                                          // 1108\n          delete data.doc;                                                                                           // 1109\n        } else {                                                                                                     // 1110\n          this.lastSentDoc = docName;                                                                                // 1111\n        }                                                                                                            // 1112\n      }                                                                                                              // 1113\n      if (socketImpl === 'sockjs' || socketImpl === 'websocket') {                                                   // 1114\n        data = JSON.stringify(data);                                                                                 // 1115\n      }                                                                                                              // 1116\n      return this.socket.send(data);                                                                                 // 1117\n    };                                                                                                               // 1118\n                                                                                                                     // 1119\n    Connection.prototype.disconnect = function() {                                                                   // 1120\n      return this.socket.close();                                                                                    // 1121\n    };                                                                                                               // 1122\n                                                                                                                     // 1123\n    Connection.prototype.makeDoc = function(name, data, callback) {                                                  // 1124\n      var doc,                                                                                                       // 1125\n        _this = this;                                                                                                // 1126\n                                                                                                                     // 1127\n      if (this.docs[name]) {                                                                                         // 1128\n        throw new Error(\"Doc \" + name + \" already open\");                                                            // 1129\n      }                                                                                                              // 1130\n      doc = new Doc(this, name, data);                                                                               // 1131\n      this.docs[name] = doc;                                                                                         // 1132\n      return doc.open(function(error) {                                                                              // 1133\n        if (error) {                                                                                                 // 1134\n          delete _this.docs[name];                                                                                   // 1135\n        }                                                                                                            // 1136\n        if (!error) {                                                                                                // 1137\n          doc.on('closed', function() {                                                                              // 1138\n            if (!doc.autoOpen) {                                                                                     // 1139\n              return delete _this.docs[name];                                                                        // 1140\n            }                                                                                                        // 1141\n          });                                                                                                        // 1142\n        }                                                                                                            // 1143\n        return callback(error, (!error ? doc : void 0));                                                             // 1144\n      });                                                                                                            // 1145\n    };                                                                                                               // 1146\n                                                                                                                     // 1147\n    Connection.prototype.openExisting = function(docName, callback) {                                                // 1148\n      var doc;                                                                                                       // 1149\n                                                                                                                     // 1150\n      if (this.state === 'stopped') {                                                                                // 1151\n        return callback('connection closed');                                                                        // 1152\n      }                                                                                                              // 1153\n      if (this.docs[docName]) {                                                                                      // 1154\n        return this._ensureOpenState(this.docs[docName], callback);                                                  // 1155\n      }                                                                                                              // 1156\n      return doc = this.makeDoc(docName, {}, callback);                                                              // 1157\n    };                                                                                                               // 1158\n                                                                                                                     // 1159\n    Connection.prototype.open = function(docName, type, callback) {                                                  // 1160\n      var doc;                                                                                                       // 1161\n                                                                                                                     // 1162\n      if (this.state === 'stopped') {                                                                                // 1163\n        return callback('connection closed');                                                                        // 1164\n      }                                                                                                              // 1165\n      if (this.state === 'connecting') {                                                                             // 1166\n        this.on('handshaking', function() {                                                                          // 1167\n          this.open(docName, type, callback);                                                                        // 1168\n          return callback = null;                                                                                    // 1169\n        });                                                                                                          // 1170\n        return;                                                                                                      // 1171\n      }                                                                                                              // 1172\n      if (typeof type === 'function') {                                                                              // 1173\n        callback = type;                                                                                             // 1174\n        type = 'text';                                                                                               // 1175\n      }                                                                                                              // 1176\n      callback || (callback = function() {});                                                                        // 1177\n      if (typeof type === 'string') {                                                                                // 1178\n        type = types[type];                                                                                          // 1179\n      }                                                                                                              // 1180\n      if (!type) {                                                                                                   // 1181\n        throw new Error(\"OT code for document type missing\");                                                        // 1182\n      }                                                                                                              // 1183\n      if (docName == null) {                                                                                         // 1184\n        throw new Error('Server-generated random doc names are not currently supported');                            // 1185\n      }                                                                                                              // 1186\n      if (this.docs[docName]) {                                                                                      // 1187\n        doc = this.docs[docName];                                                                                    // 1188\n        if (doc.type === type) {                                                                                     // 1189\n          this._ensureOpenState(doc, callback);                                                                      // 1190\n        } else {                                                                                                     // 1191\n          callback('Type mismatch', doc);                                                                            // 1192\n        }                                                                                                            // 1193\n        return;                                                                                                      // 1194\n      }                                                                                                              // 1195\n      return this.makeDoc(docName, {                                                                                 // 1196\n        create: true,                                                                                                // 1197\n        type: type.name                                                                                              // 1198\n      }, callback);                                                                                                  // 1199\n    };                                                                                                               // 1200\n                                                                                                                     // 1201\n    Connection.prototype._ensureOpenState = function(doc, callback) {                                                // 1202\n      switch (doc.state) {                                                                                           // 1203\n        case 'open':                                                                                                 // 1204\n          callback(null, doc);                                                                                       // 1205\n          break;                                                                                                     // 1206\n        case 'opening':                                                                                              // 1207\n          this.on('open', function() {                                                                               // 1208\n            return callback(null, doc);                                                                              // 1209\n          });                                                                                                        // 1210\n          break;                                                                                                     // 1211\n        case 'closed':                                                                                               // 1212\n          doc.open(function(error) {                                                                                 // 1213\n            return callback(error, (!error ? doc : void 0));                                                         // 1214\n          });                                                                                                        // 1215\n      }                                                                                                              // 1216\n    };                                                                                                               // 1217\n                                                                                                                     // 1218\n    return Connection;                                                                                               // 1219\n                                                                                                                     // 1220\n  })();                                                                                                              // 1221\n                                                                                                                     // 1222\n  if (typeof WEB === \"undefined\" || WEB === null) {                                                                  // 1223\n    MicroEvent = require('./microevent');                                                                            // 1224\n  }                                                                                                                  // 1225\n                                                                                                                     // 1226\n  MicroEvent.mixin(Connection);                                                                                      // 1227\n                                                                                                                     // 1228\n  exports.Connection = Connection;                                                                                   // 1229\n                                                                                                                     // 1230\n  if (typeof WEB !== \"undefined\" && WEB !== null) {                                                                  // 1231\n    hasBCSocket = window.BCSocket !== void 0;                                                                        // 1232\n    hasSockJS = window.SockJS !== void 0;                                                                            // 1233\n    if (hasBCSocket) {                                                                                               // 1234\n      socketImpl = 'channel';                                                                                        // 1235\n    } else {                                                                                                         // 1236\n      if (hasSockJS) {                                                                                               // 1237\n        socketImpl = 'sockjs';                                                                                       // 1238\n      } else {                                                                                                       // 1239\n        socketImpl = 'websocket';                                                                                    // 1240\n      }                                                                                                              // 1241\n    }                                                                                                                // 1242\n  } else {                                                                                                           // 1243\n    Connection = require('./connection').Connection;                                                                 // 1244\n  }                                                                                                                  // 1245\n                                                                                                                     // 1246\n  exports.open = (function() {                                                                                       // 1247\n    var connections, getConnection, maybeClose;                                                                      // 1248\n                                                                                                                     // 1249\n    connections = {};                                                                                                // 1250\n    getConnection = function(origin, authentication) {                                                               // 1251\n      var c, del, location, protocol;                                                                                // 1252\n                                                                                                                     // 1253\n      if ((typeof WEB !== \"undefined\" && WEB !== null) && (origin == null)) {                                        // 1254\n        location = window.location;                                                                                  // 1255\n        protocol = socketImpl === 'websocket' ? 'ws:' : location.protocol;                                           // 1256\n        origin = \"\" + protocol + \"//\" + location.host + \"/\" + socketImpl;                                            // 1257\n      }                                                                                                              // 1258\n      if (!connections[origin]) {                                                                                    // 1259\n        c = new Connection(origin, authentication);                                                                  // 1260\n        del = function() {                                                                                           // 1261\n          return delete connections[origin];                                                                         // 1262\n        };                                                                                                           // 1263\n        c.on('disconnected', del);                                                                                   // 1264\n        c.on('connect failed', del);                                                                                 // 1265\n        connections[origin] = c;                                                                                     // 1266\n      }                                                                                                              // 1267\n      return connections[origin];                                                                                    // 1268\n    };                                                                                                               // 1269\n    maybeClose = function(c) {                                                                                       // 1270\n      var doc, name, numDocs, _ref;                                                                                  // 1271\n                                                                                                                     // 1272\n      numDocs = 0;                                                                                                   // 1273\n      _ref = c.docs;                                                                                                 // 1274\n      for (name in _ref) {                                                                                           // 1275\n        doc = _ref[name];                                                                                            // 1276\n        if (doc.state !== 'closed' || doc.autoOpen) {                                                                // 1277\n          numDocs++;                                                                                                 // 1278\n        }                                                                                                            // 1279\n      }                                                                                                              // 1280\n      if (numDocs === 0) {                                                                                           // 1281\n        return c.disconnect();                                                                                       // 1282\n      }                                                                                                              // 1283\n    };                                                                                                               // 1284\n    return function(docName, type, options, callback) {                                                              // 1285\n      var authentication, c, origin;                                                                                 // 1286\n                                                                                                                     // 1287\n      if (typeof options === 'function') {                                                                           // 1288\n        callback = options;                                                                                          // 1289\n        options = {};                                                                                                // 1290\n      }                                                                                                              // 1291\n      if (typeof options === 'string') {                                                                             // 1292\n        options = {                                                                                                  // 1293\n          'origin': options                                                                                          // 1294\n        };                                                                                                           // 1295\n      }                                                                                                              // 1296\n      origin = options.origin;                                                                                       // 1297\n      authentication = options.authentication;                                                                       // 1298\n      c = getConnection(origin, authentication);                                                                     // 1299\n      c.open(docName, type, function(error, doc) {                                                                   // 1300\n        if (error) {                                                                                                 // 1301\n          callback(error);                                                                                           // 1302\n          return maybeClose(c);                                                                                      // 1303\n        } else {                                                                                                     // 1304\n          doc.on('closed', function() {                                                                              // 1305\n            return maybeClose(c);                                                                                    // 1306\n          });                                                                                                        // 1307\n          return callback(null, doc);                                                                                // 1308\n        }                                                                                                            // 1309\n      });                                                                                                            // 1310\n      c.on('connect failed');                                                                                        // 1311\n      return c;                                                                                                      // 1312\n    };                                                                                                               // 1313\n  })();                                                                                                              // 1314\n                                                                                                                     // 1315\n  if (typeof WEB === \"undefined\" || WEB === null) {                                                                  // 1316\n    exports.Doc = require('./doc').Doc;                                                                              // 1317\n    exports.Connection = require('./connection').Connection;                                                         // 1318\n  }                                                                                                                  // 1319\n                                                                                                                     // 1320\n}).call(this);                                                                                                       // 1321\n                                                                                                                     // 1322\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/mizzao_sharejs/.npm/package/node_modules/share/webclient/textarea.js                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Generated by CoffeeScript 1.6.2                                                                                   // 1\n(function() {                                                                                                        // 2\n  var applyChange;                                                                                                   // 3\n                                                                                                                     // 4\n  applyChange = function(doc, oldval, newval) {                                                                      // 5\n    var commonEnd, commonStart;                                                                                      // 6\n                                                                                                                     // 7\n    if (oldval === newval) {                                                                                         // 8\n      return;                                                                                                        // 9\n    }                                                                                                                // 10\n    commonStart = 0;                                                                                                 // 11\n    while (oldval.charAt(commonStart) === newval.charAt(commonStart)) {                                              // 12\n      commonStart++;                                                                                                 // 13\n    }                                                                                                                // 14\n    commonEnd = 0;                                                                                                   // 15\n    while (oldval.charAt(oldval.length - 1 - commonEnd) === newval.charAt(newval.length - 1 - commonEnd) && commonEnd + commonStart < oldval.length && commonEnd + commonStart < newval.length) {\n      commonEnd++;                                                                                                   // 17\n    }                                                                                                                // 18\n    if (oldval.length !== commonStart + commonEnd) {                                                                 // 19\n      doc.del(commonStart, oldval.length - commonStart - commonEnd);                                                 // 20\n    }                                                                                                                // 21\n    if (newval.length !== commonStart + commonEnd) {                                                                 // 22\n      return doc.insert(commonStart, newval.slice(commonStart, newval.length - commonEnd));                          // 23\n    }                                                                                                                // 24\n  };                                                                                                                 // 25\n                                                                                                                     // 26\n  window.sharejs.extendDoc('attach_textarea', function(elem) {                                                       // 27\n    var delete_listener, doc, event, genOp, insert_listener, prevvalue, replaceText, _i, _len, _ref,                 // 28\n      _this = this;                                                                                                  // 29\n                                                                                                                     // 30\n    doc = this;                                                                                                      // 31\n    elem.value = this.getText();                                                                                     // 32\n    prevvalue = elem.value;                                                                                          // 33\n    replaceText = function(newText, transformCursor) {                                                               // 34\n      var newSelection, scrollTop;                                                                                   // 35\n                                                                                                                     // 36\n      newSelection = [transformCursor(elem.selectionStart), transformCursor(elem.selectionEnd)];                     // 37\n      scrollTop = elem.scrollTop;                                                                                    // 38\n      elem.value = newText;                                                                                          // 39\n      if (elem.scrollTop !== scrollTop) {                                                                            // 40\n        elem.scrollTop = scrollTop;                                                                                  // 41\n      }                                                                                                              // 42\n      if (window.document.activeElement === elem) {                                                                  // 43\n        return elem.selectionStart = newSelection[0], elem.selectionEnd = newSelection[1], newSelection;             // 44\n      }                                                                                                              // 45\n    };                                                                                                               // 46\n    this.on('insert', insert_listener = function(pos, text) {                                                        // 47\n      var transformCursor;                                                                                           // 48\n                                                                                                                     // 49\n      transformCursor = function(cursor) {                                                                           // 50\n        if (pos < cursor) {                                                                                          // 51\n          return cursor + text.length;                                                                               // 52\n        } else {                                                                                                     // 53\n          return cursor;                                                                                             // 54\n        }                                                                                                            // 55\n      };                                                                                                             // 56\n      prevvalue = elem.value.replace(/\\r\\n/g, '\\n');                                                                 // 57\n      return replaceText(prevvalue.slice(0, pos) + text + prevvalue.slice(pos), transformCursor);                    // 58\n    });                                                                                                              // 59\n    this.on('delete', delete_listener = function(pos, text) {                                                        // 60\n      var transformCursor;                                                                                           // 61\n                                                                                                                     // 62\n      transformCursor = function(cursor) {                                                                           // 63\n        if (pos < cursor) {                                                                                          // 64\n          return cursor - Math.min(text.length, cursor - pos);                                                       // 65\n        } else {                                                                                                     // 66\n          return cursor;                                                                                             // 67\n        }                                                                                                            // 68\n      };                                                                                                             // 69\n      prevvalue = elem.value.replace(/\\r\\n/g, '\\n');                                                                 // 70\n      return replaceText(prevvalue.slice(0, pos) + prevvalue.slice(pos + text.length), transformCursor);             // 71\n    });                                                                                                              // 72\n    genOp = function(event) {                                                                                        // 73\n      var onNextTick;                                                                                                // 74\n                                                                                                                     // 75\n      onNextTick = function(fn) {                                                                                    // 76\n        return setTimeout(fn, 0);                                                                                    // 77\n      };                                                                                                             // 78\n      return onNextTick(function() {                                                                                 // 79\n        if (elem.value !== prevvalue) {                                                                              // 80\n          prevvalue = elem.value;                                                                                    // 81\n          return applyChange(doc, doc.getText(), elem.value.replace(/\\r\\n/g, '\\n'));                                 // 82\n        }                                                                                                            // 83\n      });                                                                                                            // 84\n    };                                                                                                               // 85\n    _ref = ['textInput', 'keydown', 'keyup', 'select', 'cut', 'paste'];                                              // 86\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                              // 87\n      event = _ref[_i];                                                                                              // 88\n      if (elem.addEventListener) {                                                                                   // 89\n        elem.addEventListener(event, genOp, false);                                                                  // 90\n      } else {                                                                                                       // 91\n        elem.attachEvent('on' + event, genOp);                                                                       // 92\n      }                                                                                                              // 93\n    }                                                                                                                // 94\n    return elem.detach_share = function() {                                                                          // 95\n      var _j, _len1, _ref1, _results;                                                                                // 96\n                                                                                                                     // 97\n      _this.removeListener('insert', insert_listener);                                                               // 98\n      _this.removeListener('delete', delete_listener);                                                               // 99\n      _ref1 = ['textInput', 'keydown', 'keyup', 'select', 'cut', 'paste'];                                           // 100\n      _results = [];                                                                                                 // 101\n      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {                                                         // 102\n        event = _ref1[_j];                                                                                           // 103\n        if (elem.removeEventListener) {                                                                              // 104\n          _results.push(elem.removeEventListener(event, genOp, false));                                              // 105\n        } else {                                                                                                     // 106\n          _results.push(elem.detachEvent('on' + event, genOp));                                                      // 107\n        }                                                                                                            // 108\n      }                                                                                                              // 109\n      return _results;                                                                                               // 110\n    };                                                                                                               // 111\n  });                                                                                                                // 112\n                                                                                                                     // 113\n}).call(this);                                                                                                       // 114\n                                                                                                                     // 115\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/mizzao_sharejs/template.sharejs-templates.js                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"_sharejsText\");                                                                                // 2\nTemplate[\"_sharejsText\"] = new Template(\"Template._sharejsText\", (function() {                                       // 3\n  var view = this;                                                                                                   // 4\n  return HTML.TEXTAREA({                                                                                             // 5\n    id: function() {                                                                                                 // 6\n      return Spacebars.mustache(view.lookup(\"id\"));                                                                  // 7\n    },                                                                                                               // 8\n    \"data-docid\": function() {                                                                                       // 9\n      return Spacebars.mustache(view.lookup(\"docid\"));                                                               // 10\n    },                                                                                                               // 11\n    \"class\": \"shareJSText\",                                                                                          // 12\n    disabled: \"\",                                                                                                    // 13\n    value: \"Loading...\"                                                                                              // 14\n  });                                                                                                                // 15\n}));                                                                                                                 // 16\n                                                                                                                     // 17\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/mizzao_sharejs/sharejs-client.coffee.js                                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ShareJSTextConnector,                                                                                            // 1\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;                                                                                       //\n                                                                                                                     //\nShareJSConnector = (function() {                                                                                     // 1\n  var getOptions;                                                                                                    // 3\n                                                                                                                     //\n  getOptions = function() {                                                                                          //\n    return {                                                                                                         //\n      origin: '//' + window.location.host + '/channel',                                                              //\n      authentication: (typeof Meteor.userId === \"function\" ? Meteor.userId() : void 0) || null                       //\n    };                                                                                                               //\n  };                                                                                                                 //\n                                                                                                                     //\n  function ShareJSConnector(parentView) {                                                                            //\n    var docIdVar, params;                                                                                            // 9\n    docIdVar = new Blaze.ReactiveVar;                                                                                //\n    parentView.onViewReady(function() {                                                                              //\n      return this.autorun(function() {                                                                               //\n        var data;                                                                                                    // 13\n        data = Blaze.getData();                                                                                      //\n        return docIdVar.set(data.docid);                                                                             //\n      });                                                                                                            //\n    });                                                                                                              //\n    parentView.onViewDestroyed((function(_this) {                                                                    //\n      return function() {                                                                                            //\n        return _this.destroy();                                                                                      //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.isCreated = false;                                                                                          //\n    this.docIdVar = docIdVar;                                                                                        //\n    params = Blaze.getData(parentView);                                                                              //\n    this.configCallback = params.onRender;                                                                           //\n    this.connectCallback = params.onConnect;                                                                         //\n  }                                                                                                                  //\n                                                                                                                     //\n  ShareJSConnector.prototype.create = function() {                                                                   //\n    var connector;                                                                                                   // 28\n    if (this.isCreated) {                                                                                            //\n      throw new Error(\"Already created\");                                                                            // 28\n    }                                                                                                                //\n    connector = this;                                                                                                //\n    this.isCreated = true;                                                                                           //\n    this.view = this.createView();                                                                                   //\n    this.view.onViewReady(function() {                                                                               //\n      connector.rendered(this.firstNode());                                                                          //\n      return this.autorun(function() {                                                                               //\n        var docId;                                                                                                   // 39\n        docId = connector.docIdVar.get();                                                                            //\n        connector.disconnect();                                                                                      //\n        if (docId) {                                                                                                 //\n          return connector.connect(docId);                                                                           //\n        }                                                                                                            //\n      });                                                                                                            //\n    });                                                                                                              //\n    return this.view;                                                                                                // 45\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSConnector.prototype.rendered = function(element) {                                                          //\n    return this.element = element;                                                                                   //\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSConnector.prototype.connect = function(docId, element) {                                                    //\n    this.connectingId = docId;                                                                                       //\n    return sharejs.open(docId, 'text', getOptions(), (function(_this) {                                              //\n      return function(error, doc) {                                                                                  //\n        if (error) {                                                                                                 //\n          Meteor._debug(error);                                                                                      //\n          return;                                                                                                    // 58\n        }                                                                                                            //\n        if (_this.connectingId !== doc.name) {                                                                       //\n          return doc.close();                                                                                        //\n        } else {                                                                                                     //\n          return _this.attach(doc);                                                                                  //\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSConnector.prototype.attach = function(doc) {                                                                //\n    return this.doc = doc;                                                                                           //\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSConnector.prototype.disconnect = function() {                                                               //\n    if (this.doc != null) {                                                                                          //\n      this.doc.close();                                                                                              //\n      return this.doc = null;                                                                                        //\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSConnector.prototype.destroy = function() {                                                                  //\n    if (this.isDestroyed) {                                                                                          //\n      throw new Error(\"Already destroyed\");                                                                          // 80\n    }                                                                                                                //\n    this.disconnect();                                                                                               //\n    this.view = null;                                                                                                //\n    return this.isDestroyed = true;                                                                                  //\n  };                                                                                                                 //\n                                                                                                                     //\n  return ShareJSConnector;                                                                                           //\n                                                                                                                     //\n})();                                                                                                                //\n                                                                                                                     //\nShareJSTextConnector = (function(superClass) {                                                                       // 86\n  extend(ShareJSTextConnector, superClass);                                                                          //\n                                                                                                                     //\n  function ShareJSTextConnector() {                                                                                  //\n    return ShareJSTextConnector.__super__.constructor.apply(this, arguments);                                        //\n  }                                                                                                                  //\n                                                                                                                     //\n  ShareJSTextConnector.prototype.createView = function() {                                                           //\n    return Blaze.With(Blaze.getData, function() {                                                                    // 89\n      return Template._sharejsText;                                                                                  //\n    });                                                                                                              //\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSTextConnector.prototype.rendered = function(element) {                                                      //\n    ShareJSTextConnector.__super__.rendered.apply(this, arguments);                                                  //\n    this.textarea = element;                                                                                         //\n    return typeof this.configCallback === \"function\" ? this.configCallback(this.textarea) : void 0;                  //\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSTextConnector.prototype.connect = function() {                                                              //\n    this.textarea.disabled = true;                                                                                   //\n    return ShareJSTextConnector.__super__.connect.apply(this, arguments);                                            //\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSTextConnector.prototype.attach = function(doc) {                                                            //\n    ShareJSTextConnector.__super__.attach.apply(this, arguments);                                                    //\n    doc.attach_textarea(this.textarea);                                                                              //\n    this.textarea.disabled = false;                                                                                  //\n    return typeof this.connectCallback === \"function\" ? this.connectCallback(this.textarea) : void 0;                //\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSTextConnector.prototype.disconnect = function() {                                                           //\n    var ref;                                                                                                         // 107\n    if ((ref = this.textarea) != null) {                                                                             //\n      if (typeof ref.detach_share === \"function\") {                                                                  //\n        ref.detach_share();                                                                                          //\n      }                                                                                                              //\n    }                                                                                                                //\n    return ShareJSTextConnector.__super__.disconnect.apply(this, arguments);                                         //\n  };                                                                                                                 //\n                                                                                                                     //\n  ShareJSTextConnector.prototype.destroy = function() {                                                              //\n    ShareJSTextConnector.__super__.destroy.apply(this, arguments);                                                   //\n    return this.textarea = null;                                                                                     //\n  };                                                                                                                 //\n                                                                                                                     //\n  return ShareJSTextConnector;                                                                                       //\n                                                                                                                     //\n})(ShareJSConnector);                                                                                                //\n                                                                                                                     //\nUI.registerHelper(\"sharejsText\", new Template('sharejsText', function() {                                            // 115\n  return new ShareJSTextConnector(this).create();                                                                    // 116\n}));                                                                                                                 // 115\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['mizzao:sharejs'] = {}, {\n  ShareJSConnector: ShareJSConnector\n});\n\n})();\n","servePath":"/packages/mizzao_sharejs.js","sourceMap":{"version":3,"sources":["/packages/mizzao_sharejs/.npm/package/node_modules/share/node_modules/browserchannel/dist/bcsocket-uncompressed.js","/packages/mizzao_sharejs/.npm/package/node_modules/share/webclient/share.uncompressed.js","/packages/mizzao_sharejs/.npm/package/node_modules/share/webclient/textarea.js","/packages/mizzao_sharejs/template.sharejs-templates.js","/packages/mizzao_sharejs/sharejs-client.coffee"],"names":[],"mappingstzylHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0H;;;;;;;;;;;;;;;;;;;AChBA;EAAA;;;AAAM;AAEJ;;EAAA,aAAa;WACX;MAAA,QAAQ,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAvB,GAA8B,UAAtC;MACA,uDAAgB,MAAM,CAAC,kBAAP,IAAoB,IADpC;;EADW;;EAIA,0BAAC,UAAD;AAEX;IAAA,WAAW,IAAI,KAAK,CAAC;IAErB,UAAU,CAAC,WAAX,CAAuB;aACrB,IAAI,CAAC,OAAL,CAAa;AACX;QAAA,OAAO,KAAK,CAAC,OAAN;eACP,QAAQ,CAAC,GAAT,CAAa,IAAI,CAAC,KAAlB;MAFW,CAAb;IADqB,CAAvB;IAKA,UAAU,CAAC,eAAX,CAA2B;aAAA;eACzB,KAAI,CAAC,OAAL;MADyB;IAAA,QAA3B;IAGA,IAAC,UAAD,GAAa;IACb,IAAC,SAAD,GAAY;IAGZ,SAAS,KAAK,CAAC,OAAN,CAAc,UAAd;IACT,IAAC,eAAD,GAAkB,MAAM,CAAC;IACzB,IAAC,gBAAD,GAAmB,MAAM,CAAC;EAlBf;;6BAoBb,SAAQ;AACN;IAAA,IAAsC,IAAC,UAAvC;AAAA,YAAU,UAAM,iBAAN,EAAV;;IACA,YAAY;IACZ,IAAC,UAAD,GAAa;IAEb,IAAC,KAAD,GAAQ,IAAC,WAAD;IACR,IAAC,KAAI,CAAC,WAAN,CAAkB;MAChB,SAAS,CAAC,QAAV,CAAoB,IAAI,CAAC,SAAL,EAApB;aAEA,IAAI,CAAC,OAAL,CAAa;AAGX;QAAA,QAAQ,SAAS,CAAC,QAAQ,CAAC,GAAnB;QAGR,SAAS,CAAC,UAAV;QACA,IAA4B,KAA5B;iBAAA,SAAS,CAAC,OAAV,CAAkB,KAAlB;;MAPW,CAAb;IAHgB,CAAlB;AAYA,WAAO,IAAC;EAlBF;;6BAqBR,WAAU,SAAC,OAAD;WACR,IAAI,CAAC,OAAL,GAAe;EADP;;6BAIV,UAAS,SAAC,KAAD,EAAQ,OAAR;IACP,IAAC,aAAD,GAAgB;WAEhB,OAAO,CAAC,IAAR,CAAa,KAAb,EAAoB,MAApB,EAA4B,YAA5B,EAA0C;aAAA,SAAC,KAAD,EAAQ,GAAR;QACxC,IAAG,KAAH;UACE,MAAM,CAAC,MAAP,CAAc,KAAd;AACA,iBAFF;;QAMA,IAAO,KAAC,aAAD,KAAiB,GAAG,CAAC,IAA5B;iBACE,GAAG,CAAC,KAAJ,GADF;SAAA;iBAGE,KAAC,OAAD,CAAQ,GAAR,EAHF;;MAPwC;IAAA,QAA1C;EAHO;;6BAgBT,SAAQ,SAAC,GAAD;WACN,IAAC,IAAD,GAAO;EADD;;6BAIR,aAAY;IAEV,IAAG,gBAAH;MACE,IAAC,IAAG,CAAC,KAAL;aACA,IAAC,IAAD,GAAO,KAFT;;EAFU;;6BAOZ,UAAS;IACP,IAAwC,IAAC,YAAzC;AAAA,YAAU,UAAM,mBAAN,EAAV;;IAEA,IAAC,WAAD;IACA,IAAC,KAAD,GAAQ;WACR,IAAC,YAAD,GAAe;EALR;;;;;;AAOL;;;;;;;iCAEJ,aAAY;AACV,WAAO,KAAK,CAAC,IAAN,CAAW,KAAK,CAAC,OAAjB,EAA0B;aAAG,QAAQ,CAAC;IAAZ,CAA1B;EADG;;iCAGZ,WAAU,SAAC,OAAD;IACR;IACA,IAAC,SAAD,GAAY;uDACZ,IAAC,gBAAgB,IAAC;EAHV;;iCAKV,UAAS;IACP,IAAC,SAAQ,CAAC,QAAV,GAAqB;WACrB;EAFO;;iCAIT,SAAQ,SAAC,GAAD;IACN;IACA,GAAG,CAAC,eAAJ,CAAoB,IAAC,SAArB;IACA,IAAC,SAAQ,CAAC,QAAV,GAAqB;wDACrB,IAAC,iBAAiB,IAAC;EAJb;;iCAMR,aAAY;AACV;;;WAAS,CAAE;;;WACX;EAFU;;iCAIZ,UAAS;IACP;WAEA,IAAC,SAAD,GAAY;EAHL;;;;GAxBwB;;AA6BnC,EAAE,CAAC,cAAH,CAAkB,aAAlB,EAAqC,aAAS,aAAT,EAAwB;AAC3D,SAAW,yBAAqB,IAArB,CAA0B,CAAC,MAA3B;AADgD,CAAxB,CAArC","file":"/packages/mizzao_sharejs.js","sourcesContent":["(function(){\nvar f, aa = aa || {}, l = this;\nfunction ba(a) {\n  a = a.split(\".\");\n  for (var b = l, c;c = a.shift();) {\n    if (null != b[c]) {\n      b = b[c];\n    } else {\n      return null;\n    }\n  }\n  return b;\n}\nfunction ca() {\n}\nfunction da(a) {\n  var b = typeof a;\n  if (\"object\" == b) {\n    if (a) {\n      if (a instanceof Array) {\n        return \"array\";\n      }\n      if (a instanceof Object) {\n        return b;\n      }\n      var c = Object.prototype.toString.call(a);\n      if (\"[object Window]\" == c) {\n        return \"object\";\n      }\n      if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\")) {\n        return \"array\";\n      }\n      if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\")) {\n        return \"function\";\n      }\n    } else {\n      return \"null\";\n    }\n  } else {\n    if (\"function\" == b && \"undefined\" == typeof a.call) {\n      return \"object\";\n    }\n  }\n  return b;\n}\nfunction m(a) {\n  return \"array\" == da(a);\n}\nfunction ea(a) {\n  var b = da(a);\n  return \"array\" == b || \"object\" == b && \"number\" == typeof a.length;\n}\nfunction n(a) {\n  return \"string\" == typeof a;\n}\nfunction fa(a) {\n  return \"function\" == da(a);\n}\nvar ga = \"closure_uid_\" + (1E9 * Math.random() >>> 0), ha = 0;\nfunction ia(a, b, c) {\n  return a.call.apply(a.bind, arguments);\n}\nfunction ja(a, b, c) {\n  if (!a) {\n    throw Error();\n  }\n  if (2 < arguments.length) {\n    var d = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      var c = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(c, d);\n      return a.apply(b, c);\n    };\n  }\n  return function() {\n    return a.apply(b, arguments);\n  };\n}\nfunction p(a, b, c) {\n  p = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? ia : ja;\n  return p.apply(null, arguments);\n}\nvar q = Date.now || function() {\n  return+new Date;\n};\nfunction s(a, b) {\n  function c() {\n  }\n  c.prototype = b.prototype;\n  a.oa = b.prototype;\n  a.prototype = new c;\n  a.ic = function(a, c, g) {\n    var h = Array.prototype.slice.call(arguments, 2);\n    b.prototype[c].apply(a, h);\n  };\n}\n;function ka(a, b) {\n  for (var c = a.split(\"%s\"), d = \"\", e = Array.prototype.slice.call(arguments, 1);e.length && 1 < c.length;) {\n    d += c.shift() + e.shift();\n  }\n  return d + c.join(\"%s\");\n}\nfunction la(a) {\n  if (!ma.test(a)) {\n    return a;\n  }\n  -1 != a.indexOf(\"&\") && (a = a.replace(na, \"&amp;\"));\n  -1 != a.indexOf(\"<\") && (a = a.replace(oa, \"&lt;\"));\n  -1 != a.indexOf(\">\") && (a = a.replace(pa, \"&gt;\"));\n  -1 != a.indexOf('\"') && (a = a.replace(qa, \"&quot;\"));\n  -1 != a.indexOf(\"'\") && (a = a.replace(ra, \"&#39;\"));\n  return a;\n}\nvar na = /&/g, oa = /</g, pa = />/g, qa = /\"/g, ra = /'/g, ma = /[&<>\"']/;\nfunction sa() {\n  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ q()).toString(36);\n}\nfunction ta(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n;var x, ua, va, wa;\nfunction xa() {\n  return l.navigator ? l.navigator.userAgent : null;\n}\nwa = va = ua = x = !1;\nvar ya;\nif (ya = xa()) {\n  var za = l.navigator;\n  x = 0 == ya.lastIndexOf(\"Opera\", 0);\n  ua = !x && (-1 != ya.indexOf(\"MSIE\") || -1 != ya.indexOf(\"Trident\"));\n  va = !x && -1 != ya.indexOf(\"WebKit\");\n  wa = !x && !va && !ua && \"Gecko\" == za.product;\n}\nvar Aa = x, y = ua, Ba = wa, z = va;\nfunction Ca() {\n  var a = l.document;\n  return a ? a.documentMode : void 0;\n}\nvar Da;\na: {\n  var Ea = \"\", Fa;\n  if (Aa && l.opera) {\n    var Ga = l.opera.version, Ea = \"function\" == typeof Ga ? Ga() : Ga\n  } else {\n    if (Ba ? Fa = /rv\\:([^\\);]+)(\\)|;)/ : y ? Fa = /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/ : z && (Fa = /WebKit\\/(\\S+)/), Fa) {\n      var Ha = Fa.exec(xa()), Ea = Ha ? Ha[1] : \"\"\n    }\n  }\n  if (y) {\n    var Ja = Ca();\n    if (Ja > parseFloat(Ea)) {\n      Da = String(Ja);\n      break a;\n    }\n  }\n  Da = Ea;\n}\nvar Ka = {};\nfunction A(a) {\n  var b;\n  if (!(b = Ka[a])) {\n    b = 0;\n    for (var c = String(Da).replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\").split(\".\"), d = String(a).replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\").split(\".\"), e = Math.max(c.length, d.length), g = 0;0 == b && g < e;g++) {\n      var h = c[g] || \"\", k = d[g] || \"\", u = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\"), K = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\");\n      do {\n        var v = u.exec(h) || [\"\", \"\", \"\"], r = K.exec(k) || [\"\", \"\", \"\"];\n        if (0 == v[0].length && 0 == r[0].length) {\n          break;\n        }\n        b = ta(0 == v[1].length ? 0 : parseInt(v[1], 10), 0 == r[1].length ? 0 : parseInt(r[1], 10)) || ta(0 == v[2].length, 0 == r[2].length) || ta(v[2], r[2]);\n      } while (0 == b);\n    }\n    b = Ka[a] = 0 <= b;\n  }\n  return b;\n}\nvar La = l.document, Ma = La && y ? Ca() || (\"CSS1Compat\" == La.compatMode ? parseInt(Da, 10) : 5) : void 0;\nfunction Na(a) {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Na);\n  } else {\n    var b = Error().stack;\n    b && (this.stack = b);\n  }\n  a && (this.message = String(a));\n}\ns(Na, Error);\nNa.prototype.name = \"CustomError\";\nfunction Oa(a, b) {\n  b.unshift(a);\n  Na.call(this, ka.apply(null, b));\n  b.shift();\n}\ns(Oa, Na);\nOa.prototype.name = \"AssertionError\";\nfunction Pa(a, b) {\n  throw new Oa(\"Failure\" + (a ? \": \" + a : \"\"), Array.prototype.slice.call(arguments, 1));\n}\n;var Qa = RegExp(\"^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\\\?([^#]*))?(?:#(.*))?$\");\nfunction Ra(a) {\n  if (Sa) {\n    Sa = !1;\n    var b = l.location;\n    if (b) {\n      var c = b.href;\n      if (c && (c = (c = Ra(c)[3] || null) && decodeURIComponent(c)) && c != b.hostname) {\n        throw Sa = !0, Error();\n      }\n    }\n  }\n  return a.match(Qa);\n}\nvar Sa = z;\nfunction Ta(a) {\n  var b = [], c = 0, d;\n  for (d in a) {\n    b[c++] = a[d];\n  }\n  return b;\n}\nfunction Ua(a) {\n  var b = [], c = 0, d;\n  for (d in a) {\n    b[c++] = d;\n  }\n  return b;\n}\nvar Va = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\nfunction Wa(a, b) {\n  for (var c, d, e = 1;e < arguments.length;e++) {\n    d = arguments[e];\n    for (c in d) {\n      a[c] = d[c];\n    }\n    for (var g = 0;g < Va.length;g++) {\n      c = Va[g], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\n    }\n  }\n}\n;var B = Array.prototype, Xa = B.indexOf ? function(a, b, c) {\n  return B.indexOf.call(a, b, c);\n} : function(a, b, c) {\n  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;\n  if (n(a)) {\n    return n(b) && 1 == b.length ? a.indexOf(b, c) : -1;\n  }\n  for (;c < a.length;c++) {\n    if (c in a && a[c] === b) {\n      return c;\n    }\n  }\n  return-1;\n}, Ya = B.forEach ? function(a, b, c) {\n  B.forEach.call(a, b, c);\n} : function(a, b, c) {\n  for (var d = a.length, e = n(a) ? a.split(\"\") : a, g = 0;g < d;g++) {\n    g in e && b.call(c, e[g], g, a);\n  }\n};\nfunction Za(a) {\n  var b;\n  a: {\n    b = $a;\n    for (var c = a.length, d = n(a) ? a.split(\"\") : a, e = 0;e < c;e++) {\n      if (e in d && b.call(void 0, d[e], e, a)) {\n        b = e;\n        break a;\n      }\n    }\n    b = -1;\n  }\n  return 0 > b ? null : n(a) ? a.charAt(b) : a[b];\n}\nfunction ab(a) {\n  return B.concat.apply(B, arguments);\n}\nfunction bb(a) {\n  var b = a.length;\n  if (0 < b) {\n    for (var c = Array(b), d = 0;d < b;d++) {\n      c[d] = a[d];\n    }\n    return c;\n  }\n  return[];\n}\n;function cb(a, b) {\n  this.O = {};\n  this.j = [];\n  this.o = 0;\n  var c = arguments.length;\n  if (1 < c) {\n    if (c % 2) {\n      throw Error(\"Uneven number of arguments\");\n    }\n    for (var d = 0;d < c;d += 2) {\n      this.set(arguments[d], arguments[d + 1]);\n    }\n  } else {\n    if (a) {\n      a instanceof cb ? (c = a.ba(), d = a.N()) : (c = Ua(a), d = Ta(a));\n      for (var e = 0;e < c.length;e++) {\n        this.set(c[e], d[e]);\n      }\n    }\n  }\n}\nf = cb.prototype;\nf.N = function() {\n  db(this);\n  for (var a = [], b = 0;b < this.j.length;b++) {\n    a.push(this.O[this.j[b]]);\n  }\n  return a;\n};\nf.ba = function() {\n  db(this);\n  return this.j.concat();\n};\nf.va = function(a) {\n  return C(this.O, a);\n};\nf.remove = function(a) {\n  return C(this.O, a) ? (delete this.O[a], this.o--, this.j.length > 2 * this.o && db(this), !0) : !1;\n};\nfunction db(a) {\n  if (a.o != a.j.length) {\n    for (var b = 0, c = 0;b < a.j.length;) {\n      var d = a.j[b];\n      C(a.O, d) && (a.j[c++] = d);\n      b++;\n    }\n    a.j.length = c;\n  }\n  if (a.o != a.j.length) {\n    for (var e = {}, c = b = 0;b < a.j.length;) {\n      d = a.j[b], C(e, d) || (a.j[c++] = d, e[d] = 1), b++;\n    }\n    a.j.length = c;\n  }\n}\nf.get = function(a, b) {\n  return C(this.O, a) ? this.O[a] : b;\n};\nf.set = function(a, b) {\n  C(this.O, a) || (this.o++, this.j.push(a));\n  this.O[a] = b;\n};\nf.n = function() {\n  return new cb(this);\n};\nfunction C(a, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n;function eb(a) {\n  if (\"function\" == typeof a.N) {\n    return a.N();\n  }\n  if (n(a)) {\n    return a.split(\"\");\n  }\n  if (ea(a)) {\n    for (var b = [], c = a.length, d = 0;d < c;d++) {\n      b.push(a[d]);\n    }\n    return b;\n  }\n  return Ta(a);\n}\nfunction fb(a, b, c) {\n  if (\"function\" == typeof a.forEach) {\n    a.forEach(b, c);\n  } else {\n    if (ea(a) || n(a)) {\n      Ya(a, b, c);\n    } else {\n      var d;\n      if (\"function\" == typeof a.ba) {\n        d = a.ba();\n      } else {\n        if (\"function\" != typeof a.N) {\n          if (ea(a) || n(a)) {\n            d = [];\n            for (var e = a.length, g = 0;g < e;g++) {\n              d.push(g);\n            }\n          } else {\n            d = Ua(a);\n          }\n        } else {\n          d = void 0;\n        }\n      }\n      for (var e = eb(a), g = e.length, h = 0;h < g;h++) {\n        b.call(c, e[h], d && d[h], a);\n      }\n    }\n  }\n}\n;function D(a, b) {\n  var c;\n  if (a instanceof D) {\n    this.D = void 0 !== b ? b : a.D, gb(this, a.na), c = a.eb, E(this), this.eb = c, hb(this, a.ia), ib(this, a.Ca), jb(this, a.I), kb(this, a.R.n()), c = a.Na, E(this), this.Na = c;\n  } else {\n    if (a && (c = Ra(String(a)))) {\n      this.D = !!b;\n      gb(this, c[1] || \"\", !0);\n      var d = c[2] || \"\";\n      E(this);\n      this.eb = d ? decodeURIComponent(d) : \"\";\n      hb(this, c[3] || \"\", !0);\n      ib(this, c[4]);\n      jb(this, c[5] || \"\", !0);\n      kb(this, c[6] || \"\", !0);\n      c = c[7] || \"\";\n      E(this);\n      this.Na = c ? decodeURIComponent(c) : \"\";\n    } else {\n      this.D = !!b, this.R = new lb(null, 0, this.D);\n    }\n  }\n}\nf = D.prototype;\nf.na = \"\";\nf.eb = \"\";\nf.ia = \"\";\nf.Ca = null;\nf.I = \"\";\nf.Na = \"\";\nf.oc = !1;\nf.D = !1;\nf.toString = function() {\n  var a = [], b = this.na;\n  b && a.push(mb(b, nb), \":\");\n  if (b = this.ia) {\n    a.push(\"//\");\n    var c = this.eb;\n    c && a.push(mb(c, nb), \"@\");\n    a.push(encodeURIComponent(String(b)));\n    b = this.Ca;\n    null != b && a.push(\":\", String(b));\n  }\n  if (b = this.I) {\n    this.ia && \"/\" != b.charAt(0) && a.push(\"/\"), a.push(mb(b, \"/\" == b.charAt(0) ? ob : pb));\n  }\n  (b = this.R.toString()) && a.push(\"?\", b);\n  (b = this.Na) && a.push(\"#\", mb(b, qb));\n  return a.join(\"\");\n};\nf.n = function() {\n  return new D(this);\n};\nfunction gb(a, b, c) {\n  E(a);\n  a.na = c ? b ? decodeURIComponent(b) : \"\" : b;\n  a.na && (a.na = a.na.replace(/:$/, \"\"));\n}\nfunction hb(a, b, c) {\n  E(a);\n  a.ia = c ? b ? decodeURIComponent(b) : \"\" : b;\n}\nfunction ib(a, b) {\n  E(a);\n  if (b) {\n    b = Number(b);\n    if (isNaN(b) || 0 > b) {\n      throw Error(\"Bad port number \" + b);\n    }\n    a.Ca = b;\n  } else {\n    a.Ca = null;\n  }\n}\nfunction jb(a, b, c) {\n  E(a);\n  a.I = c ? b ? decodeURIComponent(b) : \"\" : b;\n}\nfunction kb(a, b, c) {\n  E(a);\n  b instanceof lb ? (a.R = b, a.R.ub(a.D)) : (c || (b = mb(b, rb)), a.R = new lb(b, 0, a.D));\n}\nfunction F(a, b, c) {\n  E(a);\n  a.R.set(b, c);\n}\nfunction sb(a, b, c) {\n  E(a);\n  m(c) || (c = [String(c)]);\n  tb(a.R, b, c);\n}\nfunction G(a) {\n  E(a);\n  F(a, \"zx\", sa());\n  return a;\n}\nfunction E(a) {\n  if (a.oc) {\n    throw Error(\"Tried to modify a read-only Uri\");\n  }\n}\nf.ub = function(a) {\n  this.D = a;\n  this.R && this.R.ub(a);\n  return this;\n};\nfunction ub(a) {\n  return a instanceof D ? a.n() : new D(a, void 0);\n}\nfunction vb(a, b, c, d) {\n  var e = new D(null, void 0);\n  a && gb(e, a);\n  b && hb(e, b);\n  c && ib(e, c);\n  d && jb(e, d);\n  return e;\n}\nfunction mb(a, b) {\n  return n(a) ? encodeURI(a).replace(b, wb) : null;\n}\nfunction wb(a) {\n  a = a.charCodeAt(0);\n  return \"%\" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);\n}\nvar nb = /[#\\/\\?@]/g, pb = /[\\#\\?:]/g, ob = /[\\#\\?]/g, rb = /[\\#\\?@]/g, qb = /#/g;\nfunction lb(a, b, c) {\n  this.C = a || null;\n  this.D = !!c;\n}\nfunction H(a) {\n  if (!a.h && (a.h = new cb, a.o = 0, a.C)) {\n    for (var b = a.C.split(\"&\"), c = 0;c < b.length;c++) {\n      var d = b[c].indexOf(\"=\"), e = null, g = null;\n      0 <= d ? (e = b[c].substring(0, d), g = b[c].substring(d + 1)) : e = b[c];\n      e = decodeURIComponent(e.replace(/\\+/g, \" \"));\n      e = I(a, e);\n      a.add(e, g ? decodeURIComponent(g.replace(/\\+/g, \" \")) : \"\");\n    }\n  }\n}\nf = lb.prototype;\nf.h = null;\nf.o = null;\nf.add = function(a, b) {\n  H(this);\n  this.C = null;\n  a = I(this, a);\n  var c = this.h.get(a);\n  c || this.h.set(a, c = []);\n  c.push(b);\n  this.o++;\n  return this;\n};\nf.remove = function(a) {\n  H(this);\n  a = I(this, a);\n  return this.h.va(a) ? (this.C = null, this.o -= this.h.get(a).length, this.h.remove(a)) : !1;\n};\nf.va = function(a) {\n  H(this);\n  a = I(this, a);\n  return this.h.va(a);\n};\nf.ba = function() {\n  H(this);\n  for (var a = this.h.N(), b = this.h.ba(), c = [], d = 0;d < b.length;d++) {\n    for (var e = a[d], g = 0;g < e.length;g++) {\n      c.push(b[d]);\n    }\n  }\n  return c;\n};\nf.N = function(a) {\n  H(this);\n  var b = [];\n  if (n(a)) {\n    this.va(a) && (b = ab(b, this.h.get(I(this, a))));\n  } else {\n    a = this.h.N();\n    for (var c = 0;c < a.length;c++) {\n      b = ab(b, a[c]);\n    }\n  }\n  return b;\n};\nf.set = function(a, b) {\n  H(this);\n  this.C = null;\n  a = I(this, a);\n  this.va(a) && (this.o -= this.h.get(a).length);\n  this.h.set(a, [b]);\n  this.o++;\n  return this;\n};\nf.get = function(a, b) {\n  var c = a ? this.N(a) : [];\n  return 0 < c.length ? String(c[0]) : b;\n};\nfunction tb(a, b, c) {\n  a.remove(b);\n  0 < c.length && (a.C = null, a.h.set(I(a, b), bb(c)), a.o += c.length);\n}\nf.toString = function() {\n  if (this.C) {\n    return this.C;\n  }\n  if (!this.h) {\n    return \"\";\n  }\n  for (var a = [], b = this.h.ba(), c = 0;c < b.length;c++) {\n    for (var d = b[c], e = encodeURIComponent(String(d)), d = this.N(d), g = 0;g < d.length;g++) {\n      var h = e;\n      \"\" !== d[g] && (h += \"=\" + encodeURIComponent(String(d[g])));\n      a.push(h);\n    }\n  }\n  return this.C = a.join(\"&\");\n};\nf.n = function() {\n  var a = new lb;\n  a.C = this.C;\n  this.h && (a.h = this.h.n(), a.o = this.o);\n  return a;\n};\nfunction I(a, b) {\n  var c = String(b);\n  a.D && (c = c.toLowerCase());\n  return c;\n}\nf.ub = function(a) {\n  a && !this.D && (H(this), this.C = null, fb(this.h, function(a, c) {\n    var d = c.toLowerCase();\n    c != d && (this.remove(c), tb(this, d, a));\n  }, this));\n  this.D = a;\n};\nfunction xb(a) {\n  a = String(a);\n  if (/^\\s*$/.test(a) ? 0 : /^[\\],:{}\\s\\u2028\\u2029]*$/.test(a.replace(/\\\\[\"\\\\\\/bfnrtu]/g, \"@\").replace(/\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, \"]\").replace(/(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g, \"\"))) {\n    try {\n      return eval(\"(\" + a + \")\");\n    } catch (b) {\n    }\n  }\n  throw Error(\"Invalid JSON string: \" + a);\n}\nfunction yb(a) {\n  return eval(\"(\" + a + \")\");\n}\nfunction zb(a) {\n  var b = [];\n  Ab(new Bb, a, b);\n  return b.join(\"\");\n}\nfunction Bb() {\n  this.Ya = void 0;\n}\nfunction Ab(a, b, c) {\n  switch(typeof b) {\n    case \"string\":\n      Cb(b, c);\n      break;\n    case \"number\":\n      c.push(isFinite(b) && !isNaN(b) ? b : \"null\");\n      break;\n    case \"boolean\":\n      c.push(b);\n      break;\n    case \"undefined\":\n      c.push(\"null\");\n      break;\n    case \"object\":\n      if (null == b) {\n        c.push(\"null\");\n        break;\n      }\n      if (m(b)) {\n        var d = b.length;\n        c.push(\"[\");\n        for (var e = \"\", g = 0;g < d;g++) {\n          c.push(e), e = b[g], Ab(a, a.Ya ? a.Ya.call(b, String(g), e) : e, c), e = \",\";\n        }\n        c.push(\"]\");\n        break;\n      }\n      c.push(\"{\");\n      d = \"\";\n      for (g in b) {\n        Object.prototype.hasOwnProperty.call(b, g) && (e = b[g], \"function\" != typeof e && (c.push(d), Cb(g, c), c.push(\":\"), Ab(a, a.Ya ? a.Ya.call(b, g, e) : e, c), d = \",\"));\n      }\n      c.push(\"}\");\n      break;\n    case \"function\":\n      break;\n    default:\n      throw Error(\"Unknown type: \" + typeof b);;\n  }\n}\nvar Db = {'\"':'\\\\\"', \"\\\\\":\"\\\\\\\\\", \"/\":\"\\\\/\", \"\\b\":\"\\\\b\", \"\\f\":\"\\\\f\", \"\\n\":\"\\\\n\", \"\\r\":\"\\\\r\", \"\\t\":\"\\\\t\", \"\\x0B\":\"\\\\u000b\"}, Eb = /\\uffff/.test(\"\\uffff\") ? /[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g : /[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction Cb(a, b) {\n  b.push('\"', a.replace(Eb, function(a) {\n    if (a in Db) {\n      return Db[a];\n    }\n    var b = a.charCodeAt(0), e = \"\\\\u\";\n    16 > b ? e += \"000\" : 256 > b ? e += \"00\" : 4096 > b && (e += \"0\");\n    return Db[a] = e + b.toString(16);\n  }), '\"');\n}\n;function Fb(a) {\n  return Gb(a || arguments.callee.caller, []);\n}\nfunction Gb(a, b) {\n  var c = [];\n  if (0 <= Xa(b, a)) {\n    c.push(\"[...circular reference...]\");\n  } else {\n    if (a && 50 > b.length) {\n      c.push(Hb(a) + \"(\");\n      for (var d = a.arguments, e = 0;d && e < d.length;e++) {\n        0 < e && c.push(\", \");\n        var g;\n        g = d[e];\n        switch(typeof g) {\n          case \"object\":\n            g = g ? \"object\" : \"null\";\n            break;\n          case \"string\":\n            break;\n          case \"number\":\n            g = String(g);\n            break;\n          case \"boolean\":\n            g = g ? \"true\" : \"false\";\n            break;\n          case \"function\":\n            g = (g = Hb(g)) ? g : \"[fn]\";\n            break;\n          default:\n            g = typeof g;\n        }\n        40 < g.length && (g = g.substr(0, 40) + \"...\");\n        c.push(g);\n      }\n      b.push(a);\n      c.push(\")\\n\");\n      try {\n        c.push(Gb(a.caller, b));\n      } catch (h) {\n        c.push(\"[exception trying to get caller]\\n\");\n      }\n    } else {\n      a ? c.push(\"[...long stack...]\") : c.push(\"[end]\");\n    }\n  }\n  return c.join(\"\");\n}\nfunction Hb(a) {\n  if (Ib[a]) {\n    return Ib[a];\n  }\n  a = String(a);\n  if (!Ib[a]) {\n    var b = /function ([^\\(]+)/.exec(a);\n    Ib[a] = b ? b[1] : \"[Anonymous]\";\n  }\n  return Ib[a];\n}\nvar Ib = {};\nfunction Jb(a, b, c, d, e) {\n  this.reset(a, b, c, d, e);\n}\nJb.prototype.Fb = null;\nJb.prototype.Eb = null;\nvar Kb = 0;\nJb.prototype.reset = function(a, b, c, d, e) {\n  \"number\" == typeof e || Kb++;\n  d || q();\n  this.za = a;\n  this.qc = b;\n  delete this.Fb;\n  delete this.Eb;\n};\nJb.prototype.$b = function(a) {\n  this.za = a;\n};\nfunction Lb(a) {\n  this.rc = a;\n  this.Jb = this.jb = this.za = this.Sa = null;\n}\nfunction Mb(a, b) {\n  this.name = a;\n  this.value = b;\n}\nMb.prototype.toString = function() {\n  return this.name;\n};\nvar Nb = new Mb(\"SEVERE\", 1E3), Ob = new Mb(\"WARNING\", 900), Pb = new Mb(\"INFO\", 800), Qb = new Mb(\"CONFIG\", 700), Rb = new Mb(\"FINE\", 500);\nf = Lb.prototype;\nf.getParent = function() {\n  return this.Sa;\n};\nf.$b = function(a) {\n  this.za = a;\n};\nfunction Sb(a) {\n  if (a.za) {\n    return a.za;\n  }\n  if (a.Sa) {\n    return Sb(a.Sa);\n  }\n  Pa(\"Root logger has no level set.\");\n  return null;\n}\nf.log = function(a, b, c) {\n  if (a.value >= Sb(this).value) {\n    for (fa(b) && (b = b()), a = this.nc(a, b, c), b = \"log:\" + a.qc, l.console && (l.console.timeStamp ? l.console.timeStamp(b) : l.console.markTimeline && l.console.markTimeline(b)), l.msWriteProfilerMark && l.msWriteProfilerMark(b), b = this;b;) {\n      c = b;\n      var d = a;\n      if (c.Jb) {\n        for (var e = 0, g = void 0;g = c.Jb[e];e++) {\n          g(d);\n        }\n      }\n      b = b.getParent();\n    }\n  }\n};\nf.nc = function(a, b, c) {\n  var d = new Jb(a, String(b), this.rc);\n  if (c) {\n    d.Fb = c;\n    var e;\n    var g = arguments.callee.caller;\n    try {\n      var h;\n      var k = ba(\"window.location.href\");\n      if (n(c)) {\n        h = {message:c, name:\"Unknown error\", lineNumber:\"Not available\", fileName:k, stack:\"Not available\"};\n      } else {\n        var u, K, v = !1;\n        try {\n          u = c.lineNumber || c.Gc || \"Not available\";\n        } catch (r) {\n          u = \"Not available\", v = !0;\n        }\n        try {\n          K = c.fileName || c.filename || c.sourceURL || l.$googDebugFname || k;\n        } catch (Ia) {\n          K = \"Not available\", v = !0;\n        }\n        h = !v && c.lineNumber && c.fileName && c.stack && c.message && c.name ? c : {message:c.message || \"Not available\", name:c.name || \"UnknownError\", lineNumber:u, fileName:K, stack:c.stack || \"Not available\"};\n      }\n      e = \"Message: \" + la(h.message) + '\\nUrl: <a href=\"view-source:' + h.fileName + '\" target=\"_new\">' + h.fileName + \"</a>\\nLine: \" + h.lineNumber + \"\\n\\nBrowser stack:\\n\" + la(h.stack + \"-> \") + \"[end]\\n\\nJS stack traversal:\\n\" + la(Fb(g) + \"-> \");\n    } catch (w) {\n      e = \"Exception trying to expose exception! You win, we lose. \" + w;\n    }\n    d.Eb = e;\n  }\n  return d;\n};\nf.J = function(a, b) {\n  this.log(Nb, a, b);\n};\nf.fa = function(a, b) {\n  this.log(Ob, a, b);\n};\nf.info = function(a, b) {\n  this.log(Pb, a, b);\n};\nvar Tb = {}, Ub = null;\nfunction Vb(a) {\n  Ub || (Ub = new Lb(\"\"), Tb[\"\"] = Ub, Ub.$b(Qb));\n  var b;\n  if (!(b = Tb[a])) {\n    b = new Lb(a);\n    var c = a.lastIndexOf(\".\"), d = a.substr(c + 1), c = Vb(a.substr(0, c));\n    c.jb || (c.jb = {});\n    c.jb[d] = b;\n    b.Sa = c;\n    Tb[a] = b;\n  }\n  return b;\n}\n;function J(a, b) {\n  a && a.log(Rb, b, void 0);\n}\n;function L() {\n  this.r = Vb(\"goog.net.BrowserChannel\");\n}\nfunction Wb(a, b, c, d) {\n  a.info(\"XMLHTTP TEXT (\" + b + \"): \" + Xb(a, c) + (d ? \" \" + d : \"\"));\n}\nL.prototype.debug = function(a) {\n  this.info(a);\n};\nfunction M(a, b, c) {\n  a.J((c || \"Exception\") + b);\n}\nL.prototype.info = function(a) {\n  var b = this.r;\n  b && b.info(a, void 0);\n};\nL.prototype.fa = function(a) {\n  var b = this.r;\n  b && b.fa(a, void 0);\n};\nL.prototype.J = function(a) {\n  var b = this.r;\n  b && b.J(a, void 0);\n};\nfunction Xb(a, b) {\n  if (!b || b == Yb) {\n    return b;\n  }\n  try {\n    var c = yb(b);\n    if (c) {\n      for (var d = 0;d < c.length;d++) {\n        if (m(c[d])) {\n          var e = c[d];\n          if (!(2 > e.length)) {\n            var g = e[1];\n            if (m(g) && !(1 > g.length)) {\n              var h = g[0];\n              if (\"noop\" != h && \"stop\" != h) {\n                for (var k = 1;k < g.length;k++) {\n                  g[k] = \"\";\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return zb(c);\n  } catch (u) {\n    return a.debug(\"Exception parsing expected JS array - probably was not JS\"), b;\n  }\n}\n;function Zb(a, b) {\n  this.P = b ? yb : xb;\n}\nZb.prototype.parse = function(a) {\n  return this.P(a);\n};\nfunction N() {\n  0 != $b && (ac[this[ga] || (this[ga] = ++ha)] = this);\n}\nvar $b = 0, ac = {};\nN.prototype.mb = !1;\nN.prototype.Ja = function() {\n  if (!this.mb && (this.mb = !0, this.u(), 0 != $b)) {\n    var a = this[ga] || (this[ga] = ++ha);\n    delete ac[a];\n  }\n};\nN.prototype.u = function() {\n  if (this.Pb) {\n    for (;this.Pb.length;) {\n      this.Pb.shift()();\n    }\n  }\n};\nvar bc = \"closure_listenable_\" + (1E6 * Math.random() | 0);\nfunction cc(a) {\n  try {\n    return!(!a || !a[bc]);\n  } catch (b) {\n    return!1;\n  }\n}\nvar dc = 0;\nfunction ec(a, b, c, d, e) {\n  this.ea = a;\n  this.Ua = null;\n  this.src = b;\n  this.type = c;\n  this.capture = !!d;\n  this.Oa = e;\n  this.key = ++dc;\n  this.ma = this.Ia = !1;\n}\nfunction fc(a) {\n  a.ma = !0;\n  a.ea = null;\n  a.Ua = null;\n  a.src = null;\n  a.Oa = null;\n}\n;function O(a) {\n  this.src = a;\n  this.s = {};\n  this.Ga = 0;\n}\nO.prototype.add = function(a, b, c, d, e) {\n  var g = this.s[a];\n  g || (g = this.s[a] = [], this.Ga++);\n  var h = gc(g, b, d, e);\n  -1 < h ? (a = g[h], c || (a.Ia = !1)) : (a = new ec(b, this.src, a, !!d, e), a.Ia = c, g.push(a));\n  return a;\n};\nO.prototype.remove = function(a, b, c, d) {\n  if (!(a in this.s)) {\n    return!1;\n  }\n  var e = this.s[a];\n  b = gc(e, b, c, d);\n  return-1 < b ? (fc(e[b]), B.splice.call(e, b, 1), 0 == e.length && (delete this.s[a], this.Ga--), !0) : !1;\n};\nfunction hc(a, b) {\n  var c = b.type;\n  if (!(c in a.s)) {\n    return!1;\n  }\n  var d = a.s[c], e = Xa(d, b), g;\n  (g = 0 <= e) && B.splice.call(d, e, 1);\n  g && (fc(b), 0 == a.s[c].length && (delete a.s[c], a.Ga--));\n  return g;\n}\nO.prototype.Xa = function(a) {\n  var b = 0, c;\n  for (c in this.s) {\n    if (!a || c == a) {\n      for (var d = this.s[c], e = 0;e < d.length;e++) {\n        ++b, fc(d[e]);\n      }\n      delete this.s[c];\n      this.Ga--;\n    }\n  }\n  return b;\n};\nO.prototype.xa = function(a, b, c, d) {\n  a = this.s[a];\n  var e = -1;\n  a && (e = gc(a, b, c, d));\n  return-1 < e ? a[e] : null;\n};\nfunction gc(a, b, c, d) {\n  for (var e = 0;e < a.length;++e) {\n    var g = a[e];\n    if (!g.ma && g.ea == b && g.capture == !!c && g.Oa == d) {\n      return e;\n    }\n  }\n  return-1;\n}\n;var ic = !y || y && 9 <= Ma, jc = y && !A(\"9\");\n!z || A(\"528\");\nBa && A(\"1.9b\") || y && A(\"8\") || Aa && A(\"9.5\") || z && A(\"528\");\nBa && !A(\"8\") || y && A(\"9\");\nfunction P(a, b) {\n  this.type = a;\n  this.currentTarget = this.target = b;\n  this.defaultPrevented = this.ka = !1;\n  this.Yb = !0;\n}\nP.prototype.u = function() {\n};\nP.prototype.Ja = function() {\n};\nP.prototype.preventDefault = function() {\n  this.defaultPrevented = !0;\n  this.Yb = !1;\n};\nfunction kc(a) {\n  kc[\" \"](a);\n  return a;\n}\nkc[\" \"] = ca;\nfunction Q(a, b) {\n  Q.ic(this, \"constructor\", a ? a.type : \"\");\n  this.relatedTarget = this.currentTarget = this.target = null;\n  this.charCode = this.keyCode = this.button = this.screenY = this.screenX = this.clientY = this.clientX = this.offsetY = this.offsetX = 0;\n  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;\n  this.Db = this.state = null;\n  if (a) {\n    var c = this.type = a.type;\n    this.target = a.target || a.srcElement;\n    this.currentTarget = b;\n    var d = a.relatedTarget;\n    if (d) {\n      if (Ba) {\n        var e;\n        a: {\n          try {\n            kc(d.nodeName);\n            e = !0;\n            break a;\n          } catch (g) {\n          }\n          e = !1;\n        }\n        e || (d = null);\n      }\n    } else {\n      \"mouseover\" == c ? d = a.fromElement : \"mouseout\" == c && (d = a.toElement);\n    }\n    this.relatedTarget = d;\n    this.offsetX = z || void 0 !== a.offsetX ? a.offsetX : a.layerX;\n    this.offsetY = z || void 0 !== a.offsetY ? a.offsetY : a.layerY;\n    this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX;\n    this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY;\n    this.screenX = a.screenX || 0;\n    this.screenY = a.screenY || 0;\n    this.button = a.button;\n    this.keyCode = a.keyCode || 0;\n    this.charCode = a.charCode || (\"keypress\" == c ? a.keyCode : 0);\n    this.ctrlKey = a.ctrlKey;\n    this.altKey = a.altKey;\n    this.shiftKey = a.shiftKey;\n    this.metaKey = a.metaKey;\n    this.state = a.state;\n    this.Db = a;\n    a.defaultPrevented && this.preventDefault();\n  }\n}\ns(Q, P);\nQ.prototype.preventDefault = function() {\n  Q.oa.preventDefault.call(this);\n  var a = this.Db;\n  if (a.preventDefault) {\n    a.preventDefault();\n  } else {\n    if (a.returnValue = !1, jc) {\n      try {\n        if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) {\n          a.keyCode = -1;\n        }\n      } catch (b) {\n      }\n    }\n  }\n};\nQ.prototype.u = function() {\n};\nvar lc = \"closure_lm_\" + (1E6 * Math.random() | 0), mc = {}, nc = 0;\nfunction oc(a, b, c, d, e) {\n  if (m(b)) {\n    for (var g = 0;g < b.length;g++) {\n      oc(a, b[g], c, d, e);\n    }\n    return null;\n  }\n  c = pc(c);\n  if (cc(a)) {\n    a = a.Ra(b, c, d, e);\n  } else {\n    if (!b) {\n      throw Error(\"Invalid event type\");\n    }\n    var g = !!d, h = qc(a);\n    h || (a[lc] = h = new O(a));\n    c = h.add(b, c, !1, d, e);\n    c.Ua || (d = rc(), c.Ua = d, d.src = a, d.ea = c, a.addEventListener ? a.addEventListener(b, d, g) : a.attachEvent(b in mc ? mc[b] : mc[b] = \"on\" + b, d), nc++);\n    a = c;\n  }\n  return a;\n}\nfunction rc() {\n  var a = sc, b = ic ? function(c) {\n    return a.call(b.src, b.ea, c);\n  } : function(c) {\n    c = a.call(b.src, b.ea, c);\n    if (!c) {\n      return c;\n    }\n  };\n  return b;\n}\nfunction tc(a, b, c, d, e) {\n  if (m(b)) {\n    for (var g = 0;g < b.length;g++) {\n      tc(a, b[g], c, d, e);\n    }\n  } else {\n    c = pc(c), cc(a) ? a.vb(b, c, d, e) : a && (a = qc(a)) && (b = a.xa(b, c, !!d, e)) && uc(b);\n  }\n}\nfunction uc(a) {\n  if (\"number\" == typeof a || !a || a.ma) {\n    return!1;\n  }\n  var b = a.src;\n  if (cc(b)) {\n    return hc(b.W, a);\n  }\n  var c = a.type, d = a.Ua;\n  b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent && b.detachEvent(c in mc ? mc[c] : mc[c] = \"on\" + c, d);\n  nc--;\n  (c = qc(b)) ? (hc(c, a), 0 == c.Ga && (c.src = null, b[lc] = null)) : fc(a);\n  return!0;\n}\nfunction vc(a, b, c, d) {\n  var e = 1;\n  if (a = qc(a)) {\n    if (b = a.s[b]) {\n      for (b = bb(b), a = 0;a < b.length;a++) {\n        var g = b[a];\n        g && g.capture == c && !g.ma && (e &= !1 !== wc(g, d));\n      }\n    }\n  }\n  return Boolean(e);\n}\nfunction wc(a, b) {\n  var c = a.ea, d = a.Oa || a.src;\n  a.Ia && uc(a);\n  return c.call(d, b);\n}\nfunction sc(a, b) {\n  if (a.ma) {\n    return!0;\n  }\n  if (!ic) {\n    var c = b || ba(\"window.event\"), d = new Q(c, this), e = !0;\n    if (!(0 > c.keyCode || void 0 != c.returnValue)) {\n      a: {\n        var g = !1;\n        if (0 == c.keyCode) {\n          try {\n            c.keyCode = -1;\n            break a;\n          } catch (h) {\n            g = !0;\n          }\n        }\n        if (g || void 0 == c.returnValue) {\n          c.returnValue = !0;\n        }\n      }\n      c = [];\n      for (g = d.currentTarget;g;g = g.parentNode) {\n        c.push(g);\n      }\n      for (var g = a.type, k = c.length - 1;!d.ka && 0 <= k;k--) {\n        d.currentTarget = c[k], e &= vc(c[k], g, !0, d);\n      }\n      for (k = 0;!d.ka && k < c.length;k++) {\n        d.currentTarget = c[k], e &= vc(c[k], g, !1, d);\n      }\n    }\n    return e;\n  }\n  return wc(a, new Q(b, this));\n}\nfunction qc(a) {\n  a = a[lc];\n  return a instanceof O ? a : null;\n}\nvar xc = \"__closure_events_fn_\" + (1E9 * Math.random() >>> 0);\nfunction pc(a) {\n  return fa(a) ? a : a[xc] || (a[xc] = function(b) {\n    return a.handleEvent(b);\n  });\n}\n;function R() {\n  N.call(this);\n  this.W = new O(this);\n  this.fc = this;\n}\ns(R, N);\nR.prototype[bc] = !0;\nf = R.prototype;\nf.tb = null;\nf.addEventListener = function(a, b, c, d) {\n  oc(this, a, b, c, d);\n};\nf.removeEventListener = function(a, b, c, d) {\n  tc(this, a, b, c, d);\n};\nf.dispatchEvent = function(a) {\n  var b, c = this.tb;\n  if (c) {\n    for (b = [];c;c = c.tb) {\n      b.push(c);\n    }\n  }\n  var c = this.fc, d = a.type || a;\n  if (n(a)) {\n    a = new P(a, c);\n  } else {\n    if (a instanceof P) {\n      a.target = a.target || c;\n    } else {\n      var e = a;\n      a = new P(d, c);\n      Wa(a, e);\n    }\n  }\n  var e = !0, g;\n  if (b) {\n    for (var h = b.length - 1;!a.ka && 0 <= h;h--) {\n      g = a.currentTarget = b[h], e = yc(g, d, !0, a) && e;\n    }\n  }\n  a.ka || (g = a.currentTarget = c, e = yc(g, d, !0, a) && e, a.ka || (e = yc(g, d, !1, a) && e));\n  if (b) {\n    for (h = 0;!a.ka && h < b.length;h++) {\n      g = a.currentTarget = b[h], e = yc(g, d, !1, a) && e;\n    }\n  }\n  return e;\n};\nf.u = function() {\n  R.oa.u.call(this);\n  this.W && this.W.Xa(void 0);\n  this.tb = null;\n};\nf.Ra = function(a, b, c, d) {\n  return this.W.add(String(a), b, !1, c, d);\n};\nf.vb = function(a, b, c, d) {\n  return this.W.remove(String(a), b, c, d);\n};\nfunction yc(a, b, c, d) {\n  b = a.W.s[String(b)];\n  if (!b) {\n    return!0;\n  }\n  b = bb(b);\n  for (var e = !0, g = 0;g < b.length;++g) {\n    var h = b[g];\n    if (h && !h.ma && h.capture == c) {\n      var k = h.ea, u = h.Oa || h.src;\n      h.Ia && hc(a.W, h);\n      e = !1 !== k.call(u, d) && e;\n    }\n  }\n  return e && !1 != d.Yb;\n}\nf.xa = function(a, b, c, d) {\n  return this.W.xa(String(a), b, c, d);\n};\nfunction zc(a, b) {\n  R.call(this);\n  this.da = a || 1;\n  this.qa = b || l;\n  this.ib = p(this.Fc, this);\n  this.sb = q();\n}\ns(zc, R);\nf = zc.prototype;\nf.enabled = !1;\nf.l = null;\nf.setInterval = function(a) {\n  this.da = a;\n  this.l && this.enabled ? (this.stop(), this.start()) : this.l && this.stop();\n};\nf.Fc = function() {\n  if (this.enabled) {\n    var a = q() - this.sb;\n    0 < a && a < 0.8 * this.da ? this.l = this.qa.setTimeout(this.ib, this.da - a) : (this.l && (this.qa.clearTimeout(this.l), this.l = null), this.dispatchEvent(Ac), this.enabled && (this.l = this.qa.setTimeout(this.ib, this.da), this.sb = q()));\n  }\n};\nf.start = function() {\n  this.enabled = !0;\n  this.l || (this.l = this.qa.setTimeout(this.ib, this.da), this.sb = q());\n};\nf.stop = function() {\n  this.enabled = !1;\n  this.l && (this.qa.clearTimeout(this.l), this.l = null);\n};\nf.u = function() {\n  zc.oa.u.call(this);\n  this.stop();\n  delete this.qa;\n};\nvar Ac = \"tick\";\nfunction Bc(a, b, c) {\n  if (fa(a)) {\n    c && (a = p(a, c));\n  } else {\n    if (a && \"function\" == typeof a.handleEvent) {\n      a = p(a.handleEvent, a);\n    } else {\n      throw Error(\"Invalid listener argument\");\n    }\n  }\n  return 2147483647 < b ? -1 : l.setTimeout(a, b || 0);\n}\n;function Cc() {\n}\nCc.prototype.Ab = null;\nfunction Dc(a) {\n  var b;\n  (b = a.Ab) || (b = {}, Ec(a) && (b[0] = !0, b[1] = !0), b = a.Ab = b);\n  return b;\n}\n;var Fc;\nfunction Gc() {\n}\ns(Gc, Cc);\nfunction Hc(a) {\n  return(a = Ec(a)) ? new ActiveXObject(a) : new XMLHttpRequest;\n}\nfunction Ec(a) {\n  if (!a.Kb && \"undefined\" == typeof XMLHttpRequest && \"undefined\" != typeof ActiveXObject) {\n    for (var b = [\"MSXML2.XMLHTTP.6.0\", \"MSXML2.XMLHTTP.3.0\", \"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\"], c = 0;c < b.length;c++) {\n      var d = b[c];\n      try {\n        return new ActiveXObject(d), a.Kb = d;\n      } catch (e) {\n      }\n    }\n    throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");\n  }\n  return a.Kb;\n}\nFc = new Gc;\nfunction Ic(a) {\n  R.call(this);\n  this.headers = new cb;\n  this.gb = a || null;\n  this.T = !1;\n  this.fb = this.f = null;\n  this.Mb = this.Qa = \"\";\n  this.ja = 0;\n  this.q = \"\";\n  this.ca = this.qb = this.Pa = this.nb = !1;\n  this.Fa = 0;\n  this.bb = null;\n  this.Xb = Jc;\n  this.cb = this.dc = !1;\n}\ns(Ic, R);\nvar Jc = \"\";\nIc.prototype.r = Vb(\"goog.net.XhrIo\");\nvar Kc = /^https?$/i, Lc = [\"POST\", \"PUT\"];\nf = Ic.prototype;\nf.send = function(a, b, c, d) {\n  if (this.f) {\n    throw Error(\"[goog.net.XhrIo] Object is active with another request=\" + this.Qa + \"; newUri=\" + a);\n  }\n  b = b ? b.toUpperCase() : \"GET\";\n  this.Qa = a;\n  this.q = \"\";\n  this.ja = 0;\n  this.Mb = b;\n  this.nb = !1;\n  this.T = !0;\n  this.f = this.gb ? Hc(this.gb) : Hc(Fc);\n  this.fb = this.gb ? Dc(this.gb) : Dc(Fc);\n  this.f.onreadystatechange = p(this.Qb, this);\n  try {\n    J(this.r, S(this, \"Opening Xhr\")), this.qb = !0, this.f.open(b, String(a), !0), this.qb = !1;\n  } catch (e) {\n    J(this.r, S(this, \"Error opening Xhr: \" + e.message));\n    Mc(this, e);\n    return;\n  }\n  a = c || \"\";\n  var g = this.headers.n();\n  d && fb(d, function(a, b) {\n    g.set(b, a);\n  });\n  d = Za(g.ba());\n  c = l.FormData && a instanceof l.FormData;\n  !(0 <= Xa(Lc, b)) || d || c || g.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");\n  fb(g, function(a, b) {\n    this.f.setRequestHeader(b, a);\n  }, this);\n  this.Xb && (this.f.responseType = this.Xb);\n  \"withCredentials\" in this.f && (this.f.withCredentials = this.dc);\n  try {\n    Nc(this), 0 < this.Fa && (this.cb = Oc(this.f), J(this.r, S(this, \"Will abort after \" + this.Fa + \"ms if incomplete, xhr2 \" + this.cb)), this.cb ? (this.f.timeout = this.Fa, this.f.ontimeout = p(this.pa, this)) : this.bb = Bc(this.pa, this.Fa, this)), J(this.r, S(this, \"Sending request\")), this.Pa = !0, this.f.send(a), this.Pa = !1;\n  } catch (h) {\n    J(this.r, S(this, \"Send error: \" + h.message)), Mc(this, h);\n  }\n};\nfunction Oc(a) {\n  return y && A(9) && \"number\" == typeof a.timeout && void 0 !== a.ontimeout;\n}\nfunction $a(a) {\n  return \"content-type\" == a.toLowerCase();\n}\nf.pa = function() {\n  \"undefined\" != typeof aa && this.f && (this.q = \"Timed out after \" + this.Fa + \"ms, aborting\", this.ja = 8, J(this.r, S(this, this.q)), this.dispatchEvent(\"timeout\"), this.abort(8));\n};\nfunction Mc(a, b) {\n  a.T = !1;\n  a.f && (a.ca = !0, a.f.abort(), a.ca = !1);\n  a.q = b;\n  a.ja = 5;\n  Pc(a);\n  Qc(a);\n}\nfunction Pc(a) {\n  a.nb || (a.nb = !0, a.dispatchEvent(\"complete\"), a.dispatchEvent(\"error\"));\n}\nf.abort = function(a) {\n  this.f && this.T && (J(this.r, S(this, \"Aborting\")), this.T = !1, this.ca = !0, this.f.abort(), this.ca = !1, this.ja = a || 7, this.dispatchEvent(\"complete\"), this.dispatchEvent(\"abort\"), Qc(this));\n};\nf.u = function() {\n  this.f && (this.T && (this.T = !1, this.ca = !0, this.f.abort(), this.ca = !1), Qc(this, !0));\n  Ic.oa.u.call(this);\n};\nf.Qb = function() {\n  this.mb || (this.qb || this.Pa || this.ca ? Rc(this) : this.uc());\n};\nf.uc = function() {\n  Rc(this);\n};\nfunction Rc(a) {\n  if (a.T && \"undefined\" != typeof aa) {\n    if (a.fb[1] && 4 == T(a) && 2 == Sc(a)) {\n      J(a.r, S(a, \"Local request error detected and ignored\"));\n    } else {\n      if (a.Pa && 4 == T(a)) {\n        Bc(a.Qb, 0, a);\n      } else {\n        if (a.dispatchEvent(\"readystatechange\"), 4 == T(a)) {\n          J(a.r, S(a, \"Request complete\"));\n          a.T = !1;\n          try {\n            var b = Sc(a), c, d;\n            a: {\n              switch(b) {\n                case 200:\n                ;\n                case 201:\n                ;\n                case 202:\n                ;\n                case 204:\n                ;\n                case 206:\n                ;\n                case 304:\n                ;\n                case 1223:\n                  d = !0;\n                  break a;\n                default:\n                  d = !1;\n              }\n            }\n            if (!(c = d)) {\n              var e;\n              if (e = 0 === b) {\n                var g = Ra(String(a.Qa))[1] || null;\n                if (!g && self.location) {\n                  var h = self.location.protocol, g = h.substr(0, h.length - 1)\n                }\n                e = !Kc.test(g ? g.toLowerCase() : \"\");\n              }\n              c = e;\n            }\n            if (c) {\n              a.dispatchEvent(\"complete\"), a.dispatchEvent(\"success\");\n            } else {\n              a.ja = 6;\n              var k;\n              try {\n                k = 2 < T(a) ? a.f.statusText : \"\";\n              } catch (u) {\n                J(a.r, \"Can not get status: \" + u.message), k = \"\";\n              }\n              a.q = k + \" [\" + Sc(a) + \"]\";\n              Pc(a);\n            }\n          } finally {\n            Qc(a);\n          }\n        }\n      }\n    }\n  }\n}\nfunction Qc(a, b) {\n  if (a.f) {\n    Nc(a);\n    var c = a.f, d = a.fb[0] ? ca : null;\n    a.f = null;\n    a.fb = null;\n    b || a.dispatchEvent(\"ready\");\n    try {\n      c.onreadystatechange = d;\n    } catch (e) {\n      (c = a.r) && c.J(\"Problem encountered resetting onreadystatechange: \" + e.message, void 0);\n    }\n  }\n}\nfunction Nc(a) {\n  a.f && a.cb && (a.f.ontimeout = null);\n  \"number\" == typeof a.bb && (l.clearTimeout(a.bb), a.bb = null);\n}\nf.isActive = function() {\n  return!!this.f;\n};\nfunction T(a) {\n  return a.f ? a.f.readyState : 0;\n}\nfunction Sc(a) {\n  try {\n    return 2 < T(a) ? a.f.status : -1;\n  } catch (b) {\n    return-1;\n  }\n}\nfunction Tc(a) {\n  try {\n    return a.f ? a.f.responseText : \"\";\n  } catch (b) {\n    return J(a.r, \"Can not get responseText: \" + b.message), \"\";\n  }\n}\nf.Ib = function() {\n  return n(this.q) ? this.q : String(this.q);\n};\nfunction S(a, b) {\n  return b + \" [\" + a.Mb + \" \" + a.Qa + \" \" + Sc(a) + \"]\";\n}\n;function Uc() {\n  this.Wb = q();\n}\nnew Uc;\nUc.prototype.set = function(a) {\n  this.Wb = a;\n};\nUc.prototype.reset = function() {\n  this.set(q());\n};\nUc.prototype.get = function() {\n  return this.Wb;\n};\nfunction Vc(a) {\n  N.call(this);\n  this.e = a;\n  this.j = {};\n}\ns(Vc, N);\nvar Wc = [];\nf = Vc.prototype;\nf.Ra = function(a, b, c, d) {\n  m(b) || (Wc[0] = b, b = Wc);\n  for (var e = 0;e < b.length;e++) {\n    var g = oc(a, b[e], c || this.handleEvent, d || !1, this.e || this);\n    if (!g) {\n      break;\n    }\n    this.j[g.key] = g;\n  }\n  return this;\n};\nf.vb = function(a, b, c, d, e) {\n  if (m(b)) {\n    for (var g = 0;g < b.length;g++) {\n      this.vb(a, b[g], c, d, e);\n    }\n  } else {\n    c = c || this.handleEvent, e = e || this.e || this, c = pc(c), d = !!d, b = cc(a) ? a.xa(b, c, d, e) : a ? (a = qc(a)) ? a.xa(b, c, d, e) : null : null, b && (uc(b), delete this.j[b.key]);\n  }\n  return this;\n};\nf.Xa = function() {\n  var a = this.j, b = uc, c;\n  for (c in a) {\n    b.call(void 0, a[c], c, a);\n  }\n  this.j = {};\n};\nf.u = function() {\n  Vc.oa.u.call(this);\n  this.Xa();\n};\nf.handleEvent = function() {\n  throw Error(\"EventHandler.handleEvent not implemented\");\n};\nfunction Xc(a, b, c) {\n  N.call(this);\n  this.pc = a;\n  this.da = b;\n  this.e = c;\n  this.kc = p(this.vc, this);\n}\ns(Xc, N);\nf = Xc.prototype;\nf.Za = !1;\nf.Vb = 0;\nf.l = null;\nf.stop = function() {\n  this.l && (l.clearTimeout(this.l), this.l = null, this.Za = !1);\n};\nf.u = function() {\n  Xc.oa.u.call(this);\n  this.stop();\n};\nf.vc = function() {\n  this.l = null;\n  this.Za && !this.Vb && (this.Za = !1, Yc(this));\n};\nfunction Yc(a) {\n  a.l = Bc(a.kc, a.da);\n  a.pc.call(a.e);\n}\n;function U(a, b, c, d, e) {\n  this.b = a;\n  this.a = b;\n  this.Y = c;\n  this.B = d;\n  this.Ea = e || 1;\n  this.pa = Zc;\n  this.ob = new Vc(this);\n  this.Ta = new zc;\n  this.Ta.setInterval($c);\n}\nf = U.prototype;\nf.v = null;\nf.F = !1;\nf.ta = null;\nf.xb = null;\nf.Da = null;\nf.ra = null;\nf.U = null;\nf.w = null;\nf.X = null;\nf.k = null;\nf.Ha = 0;\nf.K = null;\nf.sa = null;\nf.q = null;\nf.g = -1;\nf.Zb = !0;\nf.Z = !1;\nf.la = 0;\nf.Va = null;\nvar Zc = 45E3, $c = 250;\nfunction ad(a, b) {\n  switch(a) {\n    case 0:\n      return \"Non-200 return code (\" + b + \")\";\n    case 1:\n      return \"XMLHTTP failure (no data)\";\n    case 2:\n      return \"HttpConnection timeout\";\n    default:\n      return \"Unknown error\";\n  }\n}\nvar bd = {}, cd = {};\nfunction dd() {\n  return!y || y && 10 <= Ma;\n}\nf = U.prototype;\nf.S = function(a) {\n  this.v = a;\n};\nf.setTimeout = function(a) {\n  this.pa = a;\n};\nf.bc = function(a) {\n  this.la = a;\n};\nfunction ed(a, b, c) {\n  a.ra = 1;\n  a.U = G(b.n());\n  a.X = c;\n  a.Cb = !0;\n  fd(a, null);\n}\nfunction gd(a, b, c, d, e) {\n  a.ra = 1;\n  a.U = G(b.n());\n  a.X = null;\n  a.Cb = c;\n  e && (a.Zb = !1);\n  fd(a, d);\n}\nfunction fd(a, b) {\n  a.Da = q();\n  hd(a);\n  a.w = a.U.n();\n  sb(a.w, \"t\", a.Ea);\n  a.Ha = 0;\n  a.k = a.b.lb(a.b.$a() ? b : null);\n  0 < a.la && (a.Va = new Xc(p(a.ec, a, a.k), a.la));\n  a.ob.Ra(a.k, \"readystatechange\", a.Bc);\n  var c;\n  if (a.v) {\n    c = a.v;\n    var d = {}, e;\n    for (e in c) {\n      d[e] = c[e];\n    }\n    c = d;\n  } else {\n    c = {};\n  }\n  a.X ? (a.sa = \"POST\", c[\"Content-Type\"] = \"application/x-www-form-urlencoded\", a.k.send(a.w, a.sa, a.X, c)) : (a.sa = \"GET\", a.Zb && !z && (c.Connection = \"close\"), a.k.send(a.w, a.sa, null, c));\n  a.b.H(id);\n  if (d = a.X) {\n    for (c = \"\", d = d.split(\"&\"), e = 0;e < d.length;e++) {\n      var g = d[e].split(\"=\");\n      if (1 < g.length) {\n        var h = g[0], g = g[1], k = h.split(\"_\");\n        c = 2 <= k.length && \"type\" == k[1] ? c + (h + \"=\" + g + \"&\") : c + (h + \"=redacted&\");\n      }\n    }\n  } else {\n    c = null;\n  }\n  a.a.info(\"XMLHTTP REQ (\" + a.B + \") [attempt \" + a.Ea + \"]: \" + a.sa + \"\\n\" + a.w + \"\\n\" + c);\n}\nf.Bc = function(a) {\n  a = a.target;\n  var b = this.Va;\n  b && 3 == T(a) ? (this.a.debug(\"Throttling readystatechange.\"), b.l || b.Vb ? b.Za = !0 : Yc(b)) : this.ec(a);\n};\nf.ec = function(a) {\n  try {\n    if (a == this.k) {\n      a: {\n        var b = T(this.k), c = this.k.ja, d = Sc(this.k);\n        if (!dd() || z && !A(\"420+\")) {\n          if (4 > b) {\n            break a;\n          }\n        } else {\n          if (3 > b || 3 == b && !Aa && !Tc(this.k)) {\n            break a;\n          }\n        }\n        this.Z || 4 != b || 7 == c || (8 == c || 0 >= d ? this.b.H(jd) : this.b.H(kd));\n        ld(this);\n        var e = Sc(this.k);\n        this.g = e;\n        var g = Tc(this.k);\n        g || this.a.debug(\"No response text for uri \" + this.w + \" status \" + e);\n        this.F = 200 == e;\n        this.a.info(\"XMLHTTP RESP (\" + this.B + \") [ attempt \" + this.Ea + \"]: \" + this.sa + \"\\n\" + this.w + \"\\n\" + b + \" \" + e);\n        this.F ? (4 == b && V(this), this.Cb ? (md(this, b, g), Aa && this.F && 3 == b && (this.ob.Ra(this.Ta, Ac, this.Ac), this.Ta.start())) : (Wb(this.a, this.B, g, null), nd(this, g)), this.F && !this.Z && (4 == b ? this.b.Ba(this) : (this.F = !1, hd(this)))) : (400 == e && 0 < g.indexOf(\"Unknown SID\") ? (this.q = 3, W(), this.a.fa(\"XMLHTTP Unknown SID (\" + this.B + \")\")) : (this.q = 0, W(), this.a.fa(\"XMLHTTP Bad status \" + e + \" (\" + this.B + \")\")), V(this), od(this));\n      }\n    } else {\n      this.a.fa(\"Called back with an unexpected xmlhttp\");\n    }\n  } catch (h) {\n    this.a.debug(\"Failed call to OnXmlHttpReadyStateChanged_\"), this.k && Tc(this.k) ? M(this.a, h, \"ResponseText: \" + Tc(this.k)) : M(this.a, h, \"No response text\");\n  } finally {\n  }\n};\nfunction md(a, b, c) {\n  for (var d = !0;!a.Z && a.Ha < c.length;) {\n    var e = pd(a, c);\n    if (e == cd) {\n      4 == b && (a.q = 4, W(), d = !1);\n      Wb(a.a, a.B, null, \"[Incomplete Response]\");\n      break;\n    } else {\n      if (e == bd) {\n        a.q = 4;\n        W();\n        Wb(a.a, a.B, c, \"[Invalid Chunk]\");\n        d = !1;\n        break;\n      } else {\n        Wb(a.a, a.B, e, null), nd(a, e);\n      }\n    }\n  }\n  4 == b && 0 == c.length && (a.q = 1, W(), d = !1);\n  a.F = a.F && d;\n  d || (Wb(a.a, a.B, c, \"[Invalid Chunked Response]\"), V(a), od(a));\n}\nf.Ac = function() {\n  var a = T(this.k), b = Tc(this.k);\n  this.Ha < b.length && (ld(this), md(this, a, b), this.F && 4 != a && hd(this));\n};\nfunction pd(a, b) {\n  var c = a.Ha, d = b.indexOf(\"\\n\", c);\n  if (-1 == d) {\n    return cd;\n  }\n  c = Number(b.substring(c, d));\n  if (isNaN(c)) {\n    return bd;\n  }\n  d += 1;\n  if (d + c > b.length) {\n    return cd;\n  }\n  var e = b.substr(d, c);\n  a.Ha = d + c;\n  return e;\n}\nfunction qd(a, b) {\n  a.Da = q();\n  hd(a);\n  var c = b ? window.location.hostname : \"\";\n  a.w = a.U.n();\n  F(a.w, \"DOMAIN\", c);\n  F(a.w, \"t\", a.Ea);\n  try {\n    a.K = new ActiveXObject(\"htmlfile\");\n  } catch (d) {\n    a.a.J(\"ActiveX blocked\");\n    V(a);\n    a.q = 7;\n    W();\n    od(a);\n    return;\n  }\n  var e = \"<html><body>\";\n  b && (e += '<script>document.domain=\"' + c + '\"\\x3c/script>');\n  e += \"</body></html>\";\n  a.K.open();\n  a.K.write(e);\n  a.K.close();\n  a.K.parentWindow.m = p(a.yc, a);\n  a.K.parentWindow.d = p(a.Ub, a, !0);\n  a.K.parentWindow.rpcClose = p(a.Ub, a, !1);\n  c = a.K.createElement(\"div\");\n  a.K.parentWindow.document.body.appendChild(c);\n  c.innerHTML = '<iframe src=\"' + a.w + '\"></iframe>';\n  a.a.info(\"TRIDENT REQ (\" + a.B + \") [ attempt \" + a.Ea + \"]: GET\\n\" + a.w);\n  a.b.H(id);\n}\nf.yc = function(a) {\n  X(p(this.xc, this, a), 0);\n};\nf.xc = function(a) {\n  if (!this.Z) {\n    var b = this.a;\n    b.info(\"TRIDENT TEXT (\" + this.B + \"): \" + Xb(b, a));\n    ld(this);\n    nd(this, a);\n    hd(this);\n  }\n};\nf.Ub = function(a) {\n  X(p(this.wc, this, a), 0);\n};\nf.wc = function(a) {\n  this.Z || (this.a.info(\"TRIDENT TEXT (\" + this.B + \"): \" + a ? \"success\" : \"failure\"), V(this), this.F = a, this.b.Ba(this), this.b.H(rd));\n};\nf.cancel = function() {\n  this.Z = !0;\n  V(this);\n};\nfunction hd(a) {\n  a.xb = q() + a.pa;\n  sd(a, a.pa);\n}\nfunction sd(a, b) {\n  if (null != a.ta) {\n    throw Error(\"WatchDog timer not null\");\n  }\n  a.ta = X(p(a.zc, a), b);\n}\nfunction ld(a) {\n  a.ta && (l.clearTimeout(a.ta), a.ta = null);\n}\nf.zc = function() {\n  this.ta = null;\n  var a = q();\n  0 <= a - this.xb ? (this.F && this.a.J(\"Received watchdog timeout even though request loaded successfully\"), this.a.info(\"TIMEOUT: \" + this.w), 2 != this.ra && this.b.H(jd), V(this), this.q = 2, W(), od(this)) : (this.a.fa(\"WatchDog timer called too early\"), sd(this, this.xb - a));\n};\nfunction od(a) {\n  a.b.Lb() || a.Z || a.b.Ba(a);\n}\nfunction V(a) {\n  ld(a);\n  var b = a.Va;\n  b && \"function\" == typeof b.Ja && b.Ja();\n  a.Va = null;\n  a.Ta.stop();\n  a.ob.Xa();\n  a.k && (b = a.k, a.k = null, b.abort(), b.Ja());\n  a.K && (a.K = null);\n}\nf.Ib = function() {\n  return this.q;\n};\nfunction nd(a, b) {\n  try {\n    a.b.Rb(a, b), a.b.H(rd);\n  } catch (c) {\n    M(a.a, c, \"Error in httprequest callback\");\n  }\n}\n;function td(a, b, c, d, e) {\n  (new L).debug(\"TestLoadImageWithRetries: \" + e);\n  if (0 == d) {\n    c(!1);\n  } else {\n    var g = e || 0;\n    d--;\n    ud(a, b, function(e) {\n      e ? c(!0) : l.setTimeout(function() {\n        td(a, b, c, d, g);\n      }, g);\n    });\n  }\n}\nfunction ud(a, b, c) {\n  var d = new L;\n  d.debug(\"TestLoadImage: loading \" + a);\n  var e = new Image;\n  e.onload = function() {\n    try {\n      d.debug(\"TestLoadImage: loaded\"), vd(e), c(!0);\n    } catch (a) {\n      M(d, a);\n    }\n  };\n  e.onerror = function() {\n    try {\n      d.debug(\"TestLoadImage: error\"), vd(e), c(!1);\n    } catch (a) {\n      M(d, a);\n    }\n  };\n  e.onabort = function() {\n    try {\n      d.debug(\"TestLoadImage: abort\"), vd(e), c(!1);\n    } catch (a) {\n      M(d, a);\n    }\n  };\n  e.ontimeout = function() {\n    try {\n      d.debug(\"TestLoadImage: timeout\"), vd(e), c(!1);\n    } catch (a) {\n      M(d, a);\n    }\n  };\n  l.setTimeout(function() {\n    if (e.ontimeout) {\n      e.ontimeout();\n    }\n  }, b);\n  e.src = a;\n}\nfunction vd(a) {\n  a.onload = null;\n  a.onerror = null;\n  a.onabort = null;\n  a.ontimeout = null;\n}\n;function wd(a, b) {\n  this.b = a;\n  this.a = b;\n  this.P = new Zb(0, !0);\n}\nf = wd.prototype;\nf.v = null;\nf.A = null;\nf.Wa = !1;\nf.cc = null;\nf.La = null;\nf.rb = null;\nf.I = null;\nf.c = null;\nf.g = -1;\nf.L = null;\nf.ua = null;\nf.S = function(a) {\n  this.v = a;\n};\nf.ac = function(a) {\n  this.P = a;\n};\nf.kb = function(a) {\n  this.I = a;\n  a = xd(this.b, this.I);\n  W();\n  this.cc = q();\n  var b = this.b.Gb;\n  null != b ? (this.L = this.b.correctHostPrefix(b[0]), (this.ua = b[1]) ? (this.c = 1, yd(this)) : (this.c = 2, zd(this))) : (sb(a, \"MODE\", \"init\"), this.A = new U(this, this.a, void 0, void 0, void 0), this.A.S(this.v), gd(this.A, a, !1, null, !0), this.c = 0);\n};\nfunction yd(a) {\n  var b = Ad(a.b, a.ua, \"/mail/images/cleardot.gif\");\n  G(b);\n  td(b.toString(), 5E3, p(a.lc, a), 3, 2E3);\n  a.H(id);\n}\nf.lc = function(a) {\n  if (a) {\n    this.c = 2, zd(this);\n  } else {\n    W();\n    var b = this.b;\n    b.a.debug(\"Test Connection Blocked\");\n    b.g = b.V.g;\n    Z(b, 9);\n  }\n  a && this.H(kd);\n};\nfunction zd(a) {\n  a.a.debug(\"TestConnection: starting stage 2\");\n  var b = a.b.Dc;\n  if (null != b) {\n    a.a.debug(\"TestConnection: skipping stage 2, precomputed result is \" + b ? \"Buffered\" : \"Unbuffered\"), W(), b ? (W(), Bd(a.b, a, !1)) : (W(), Bd(a.b, a, !0));\n  } else {\n    if (a.A = new U(a, a.a, void 0, void 0, void 0), a.A.S(a.v), b = Cd(a.b, a.L, a.I), W(), dd()) {\n      sb(b, \"TYPE\", \"xmlhttp\"), gd(a.A, b, !1, a.L, !1);\n    } else {\n      sb(b, \"TYPE\", \"html\");\n      var c = a.A;\n      a = Boolean(a.L);\n      c.ra = 3;\n      c.U = G(b.n());\n      qd(c, a);\n    }\n  }\n}\nf.lb = function(a) {\n  return this.b.lb(a);\n};\nf.abort = function() {\n  this.A && (this.A.cancel(), this.A = null);\n  this.g = -1;\n};\nf.Lb = function() {\n  return!1;\n};\nf.Rb = function(a, b) {\n  this.g = a.g;\n  if (0 == this.c) {\n    if (this.a.debug(\"TestConnection: Got data for stage 1\"), b) {\n      try {\n        var c = this.P.parse(b);\n      } catch (d) {\n        M(this.a, d);\n        Dd(this.b, this);\n        return;\n      }\n      this.L = this.b.correctHostPrefix(c[0]);\n      this.ua = c[1];\n    } else {\n      this.a.debug(\"TestConnection: Null responseText\"), Dd(this.b, this);\n    }\n  } else {\n    if (2 == this.c) {\n      if (this.Wa) {\n        W(), this.rb = q();\n      } else {\n        if (\"11111\" == b) {\n          if (W(), this.Wa = !0, this.La = q(), c = this.La - this.cc, dd() || 500 > c) {\n            this.g = 200, this.A.cancel(), this.a.debug(\"Test connection succeeded; using streaming connection\"), W(), Bd(this.b, this, !0);\n          }\n        } else {\n          W(), this.La = this.rb = q(), this.Wa = !1;\n        }\n      }\n    }\n  }\n};\nf.Ba = function() {\n  this.g = this.A.g;\n  if (!this.A.F) {\n    this.a.debug(\"TestConnection: request failed, in state \" + this.c), 0 == this.c ? W() : 2 == this.c && W(), Dd(this.b, this);\n  } else {\n    if (0 == this.c) {\n      this.a.debug(\"TestConnection: request complete for initial check\"), this.ua ? (this.c = 1, yd(this)) : (this.c = 2, zd(this));\n    } else {\n      if (2 == this.c) {\n        this.a.debug(\"TestConnection: request complete for stage 2\");\n        var a = !1;\n        (a = dd() ? this.Wa : 200 > this.rb - this.La ? !1 : !0) ? (this.a.debug(\"Test connection succeeded; using streaming connection\"), W(), Bd(this.b, this, !0)) : (this.a.debug(\"Test connection failed; not using streaming\"), W(), Bd(this.b, this, !1));\n      }\n    }\n  }\n};\nf.$a = function() {\n  return this.b.$a();\n};\nf.isActive = function() {\n  return this.b.isActive();\n};\nf.H = function(a) {\n  this.b.H(a);\n};\nfunction Ed(a, b, c) {\n  this.Bb = a || null;\n  this.c = Fd;\n  this.t = [];\n  this.Q = [];\n  this.a = new L;\n  this.P = new Zb(0, !0);\n  this.Gb = b || null;\n  this.Dc = null != c ? c : null;\n}\nfunction Gd(a, b) {\n  this.Ob = a;\n  this.map = b;\n}\nf = Ed.prototype;\nf.v = null;\nf.wa = null;\nf.p = null;\nf.i = null;\nf.I = null;\nf.Ma = null;\nf.zb = null;\nf.L = null;\nf.hc = !0;\nf.Aa = 0;\nf.sc = 0;\nf.Ka = !1;\nf.e = null;\nf.G = null;\nf.M = null;\nf.$ = null;\nf.V = null;\nf.wb = null;\nf.gc = !0;\nf.ya = -1;\nf.Nb = -1;\nf.g = -1;\nf.aa = 0;\nf.ga = 0;\nf.jc = 5E3;\nf.Cc = 1E4;\nf.pb = 2;\nf.Hb = 2E4;\nf.la = 0;\nf.ab = !1;\nf.ha = 8;\nvar Fd = 1, Hd = new R;\nfunction Id(a) {\n  P.call(this, \"statevent\", a);\n}\ns(Id, P);\nfunction Jd(a, b) {\n  P.call(this, \"timingevent\", a);\n  this.size = b;\n}\ns(Jd, P);\nvar id = 1, kd = 2, jd = 3, rd = 4;\nfunction Kd(a) {\n  P.call(this, \"serverreachability\", a);\n}\ns(Kd, P);\nvar Yb = \"y2f%\";\nf = Ed.prototype;\nf.kb = function(a, b, c, d, e) {\n  this.a.debug(\"connect()\");\n  W();\n  this.I = b;\n  this.wa = c || {};\n  d && void 0 !== e && (this.wa.OSID = d, this.wa.OAID = e);\n  this.a.debug(\"connectTest_()\");\n  Ld(this) && (this.V = new wd(this, this.a), this.V.S(this.v), this.V.ac(this.P), this.V.kb(a));\n};\nf.disconnect = function() {\n  this.a.debug(\"disconnect()\");\n  Md(this);\n  if (3 == this.c) {\n    var a = this.Aa++, b = this.Ma.n();\n    F(b, \"SID\", this.Y);\n    F(b, \"RID\", a);\n    F(b, \"TYPE\", \"terminate\");\n    Nd(this, b);\n    a = new U(this, this.a, this.Y, a, void 0);\n    a.ra = 2;\n    a.U = G(b.n());\n    (new Image).src = a.U;\n    a.Da = q();\n    hd(a);\n  }\n  Od(this);\n};\nfunction Md(a) {\n  a.V && (a.V.abort(), a.V = null);\n  a.i && (a.i.cancel(), a.i = null);\n  a.M && (l.clearTimeout(a.M), a.M = null);\n  Pd(a);\n  a.p && (a.p.cancel(), a.p = null);\n  a.G && (l.clearTimeout(a.G), a.G = null);\n}\nf.S = function(a) {\n  this.v = a;\n};\nf.bc = function(a) {\n  this.la = a;\n};\nf.Lb = function() {\n  return 0 == this.c;\n};\nf.ac = function(a) {\n  this.P = a;\n};\nfunction Qd(a) {\n  a.p || a.G || (a.G = X(p(a.Tb, a), 0), a.aa = 0);\n}\nf.Tb = function(a) {\n  this.G = null;\n  this.a.debug(\"startForwardChannel_\");\n  if (Ld(this)) {\n    if (this.c == Fd) {\n      if (a) {\n        this.a.J(\"Not supposed to retry the open\");\n      } else {\n        this.a.debug(\"open_()\");\n        this.Aa = Math.floor(1E5 * Math.random());\n        a = this.Aa++;\n        var b = new U(this, this.a, \"\", a, void 0);\n        b.S(this.v);\n        var c = Rd(this), d = this.Ma.n();\n        F(d, \"RID\", a);\n        this.Bb && F(d, \"CVER\", this.Bb);\n        Nd(this, d);\n        ed(b, d, c);\n        this.p = b;\n        this.c = 2;\n      }\n    } else {\n      3 == this.c && (a ? Sd(this, a) : 0 == this.t.length ? this.a.debug(\"startForwardChannel_ returned: nothing to send\") : this.p ? this.a.J(\"startForwardChannel_ returned: connection already in progress\") : (Sd(this), this.a.debug(\"startForwardChannel_ finished, sent request\")));\n    }\n  }\n};\nfunction Sd(a, b) {\n  var c, d;\n  b ? 6 < a.ha ? (a.t = a.Q.concat(a.t), a.Q.length = 0, c = a.Aa - 1, d = Rd(a)) : (c = b.B, d = b.X) : (c = a.Aa++, d = Rd(a));\n  var e = a.Ma.n();\n  F(e, \"SID\", a.Y);\n  F(e, \"RID\", c);\n  F(e, \"AID\", a.ya);\n  Nd(a, e);\n  c = new U(a, a.a, a.Y, c, a.aa + 1);\n  c.S(a.v);\n  c.setTimeout(Math.round(0.5 * a.Hb) + Math.round(0.5 * a.Hb * Math.random()));\n  a.p = c;\n  ed(c, e, d);\n}\nfunction Nd(a, b) {\n  if (a.e) {\n    var c = a.e.getAdditionalParams(a);\n    c && fb(c, function(a, c) {\n      F(b, c, a);\n    });\n  }\n}\nfunction Rd(a) {\n  var b = Math.min(a.t.length, 1E3), c = [\"count=\" + b], d;\n  6 < a.ha && 0 < b ? (d = a.t[0].Ob, c.push(\"ofs=\" + d)) : d = 0;\n  for (var e = 0;e < b;e++) {\n    var g = a.t[e].Ob, h = a.t[e].map, g = 6 >= a.ha ? e : g - d;\n    try {\n      fb(h, function(a, b) {\n        c.push(\"req\" + g + \"_\" + b + \"=\" + encodeURIComponent(a));\n      });\n    } catch (k) {\n      c.push(\"req\" + g + \"_type=\" + encodeURIComponent(\"_badmap\")), a.e && a.e.badMapError(a, h);\n    }\n  }\n  a.Q = a.Q.concat(a.t.splice(0, b));\n  return c.join(\"&\");\n}\nfunction Td(a) {\n  a.i || a.M || (a.yb = 1, a.M = X(p(a.Sb, a), 0), a.ga = 0);\n}\nfunction Ud(a) {\n  if (a.i || a.M) {\n    return a.a.J(\"Request already in progress\"), !1;\n  }\n  if (3 <= a.ga) {\n    return!1;\n  }\n  a.a.debug(\"Going to retry GET\");\n  a.yb++;\n  a.M = X(p(a.Sb, a), Vd(a, a.ga));\n  a.ga++;\n  return!0;\n}\nf.Sb = function() {\n  this.M = null;\n  if (Ld(this)) {\n    this.a.debug(\"Creating new HttpRequest\");\n    this.i = new U(this, this.a, this.Y, \"rpc\", this.yb);\n    this.i.S(this.v);\n    this.i.bc(this.la);\n    var a = this.zb.n();\n    F(a, \"RID\", \"rpc\");\n    F(a, \"SID\", this.Y);\n    F(a, \"CI\", this.wb ? \"0\" : \"1\");\n    F(a, \"AID\", this.ya);\n    Nd(this, a);\n    if (dd()) {\n      F(a, \"TYPE\", \"xmlhttp\"), gd(this.i, a, !0, this.L, !1);\n    } else {\n      F(a, \"TYPE\", \"html\");\n      var b = this.i, c = Boolean(this.L);\n      b.ra = 3;\n      b.U = G(a.n());\n      qd(b, c);\n    }\n    this.a.debug(\"New Request created\");\n  }\n};\nfunction Ld(a) {\n  if (a.e) {\n    var b = a.e.okToMakeRequest(a);\n    if (0 != b) {\n      return a.a.debug(\"Handler returned error code from okToMakeRequest\"), Z(a, b), !1;\n    }\n  }\n  return!0;\n}\nfunction Bd(a, b, c) {\n  a.a.debug(\"Test Connection Finished\");\n  a.wb = a.gc && c;\n  a.g = b.g;\n  a.a.debug(\"connectChannel_()\");\n  a.mc(Fd, 0);\n  a.Ma = xd(a, a.I);\n  Qd(a);\n}\nfunction Dd(a, b) {\n  a.a.debug(\"Test Connection Failed\");\n  a.g = b.g;\n  Z(a, 2);\n}\nf.Rb = function(a, b) {\n  if (0 != this.c && (this.i == a || this.p == a)) {\n    if (this.g = a.g, this.p == a && 3 == this.c) {\n      if (7 < this.ha) {\n        var c;\n        try {\n          c = this.P.parse(b);\n        } catch (d) {\n          c = null;\n        }\n        if (m(c) && 3 == c.length) {\n          var e = c;\n          if (0 == e[0]) {\n            a: {\n              if (this.a.debug(\"Server claims our backchannel is missing.\"), this.M) {\n                this.a.debug(\"But we are currently starting the request.\");\n              } else {\n                if (this.i) {\n                  if (this.i.Da + 3E3 < this.p.Da) {\n                    Pd(this), this.i.cancel(), this.i = null;\n                  } else {\n                    break a;\n                  }\n                } else {\n                  this.a.fa(\"We do not have a BackChannel established\");\n                }\n                Ud(this);\n                W();\n              }\n            }\n          } else {\n            this.Nb = e[1], c = this.Nb - this.ya, 0 < c && (e = e[2], this.a.debug(e + \" bytes (in \" + c + \" arrays) are outstanding on the BackChannel\"), 37500 > e && this.wb && 0 == this.ga && !this.$ && (this.$ = X(p(this.tc, this), 6E3)));\n          }\n        } else {\n          this.a.debug(\"Bad POST response data returned\"), Z(this, 11);\n        }\n      } else {\n        b != Yb && (this.a.debug(\"Bad data returned - missing/invald magic cookie\"), Z(this, 11));\n      }\n    } else {\n      if (this.i == a && Pd(this), !/^[\\s\\xa0]*$/.test(b)) {\n        c = this.P.parse(b);\n        for (var e = this.e && this.e.channelHandleMultipleArrays ? [] : null, g = 0;g < c.length;g++) {\n          var h = c[g];\n          this.ya = h[0];\n          h = h[1];\n          2 == this.c ? \"c\" == h[0] ? (this.Y = h[1], this.L = this.correctHostPrefix(h[2]), h = h[3], this.ha = null != h ? h : 6, this.c = 3, this.e && this.e.channelOpened(this), this.zb = Cd(this, this.L, this.I), Td(this)) : \"stop\" == h[0] && Z(this, 7) : 3 == this.c && (\"stop\" == h[0] ? (e && 0 != e.length && (this.e.channelHandleMultipleArrays(this, e), e.length = 0), Z(this, 7)) : \"noop\" != h[0] && (e ? e.push(h) : this.e && this.e.channelHandleArray(this, h)), this.ga = 0);\n        }\n        e && 0 != e.length && this.e.channelHandleMultipleArrays(this, e);\n      }\n    }\n  }\n};\nf.correctHostPrefix = function(a) {\n  return this.hc ? this.e ? this.e.correctHostPrefix(a) : a : null;\n};\nf.tc = function() {\n  null != this.$ && (this.$ = null, this.i.cancel(), this.i = null, Ud(this), W());\n};\nfunction Pd(a) {\n  null != a.$ && (l.clearTimeout(a.$), a.$ = null);\n}\nf.Ba = function(a) {\n  this.a.debug(\"Request complete\");\n  var b;\n  if (this.i == a) {\n    Pd(this), this.i = null, b = 2;\n  } else {\n    if (this.p == a) {\n      this.p = null, b = 1;\n    } else {\n      return;\n    }\n  }\n  this.g = a.g;\n  if (0 != this.c) {\n    if (a.F) {\n      1 == b ? (q(), Hd.dispatchEvent(new Jd(Hd, a.X ? a.X.length : 0)), Qd(this), this.Q.length = 0) : Td(this);\n    } else {\n      var c = a.Ib();\n      if (3 == c || 7 == c || 0 == c && 0 < this.g) {\n        this.a.debug(\"Not retrying due to error type\");\n      } else {\n        this.a.debug(\"Maybe retrying, last error: \" + ad(c, this.g));\n        var d;\n        if (d = 1 == b) {\n          this.p || this.G ? (this.a.J(\"Request already in progress\"), d = !1) : this.c == Fd || this.aa >= (this.Ka ? 0 : this.pb) ? d = !1 : (this.a.debug(\"Going to retry POST\"), this.G = X(p(this.Tb, this, a), Vd(this, this.aa)), this.aa++, d = !0);\n        }\n        if (d || 2 == b && Ud(this)) {\n          return;\n        }\n        this.a.debug(\"Exceeded max number of retries\");\n      }\n      this.a.debug(\"Error: HTTP request failed\");\n      switch(c) {\n        case 1:\n          Z(this, 5);\n          break;\n        case 4:\n          Z(this, 10);\n          break;\n        case 3:\n          Z(this, 6);\n          break;\n        case 7:\n          Z(this, 12);\n          break;\n        default:\n          Z(this, 2);\n      }\n    }\n  }\n};\nfunction Vd(a, b) {\n  var c = a.jc + Math.floor(Math.random() * a.Cc);\n  a.isActive() || (a.a.debug(\"Inactive channel\"), c *= 2);\n  return c * b;\n}\nf.mc = function(a) {\n  if (!(0 <= Xa(arguments, this.c))) {\n    throw Error(\"Unexpected channel state: \" + this.c);\n  }\n};\nfunction Z(a, b) {\n  a.a.info(\"Error code \" + b);\n  if (2 == b || 9 == b) {\n    var c = null;\n    a.e && (c = a.e.getNetworkTestImageUri(a));\n    var d = p(a.Ec, a);\n    c || (c = new D(\"//www.google.com/images/cleardot.gif\"), G(c));\n    ud(c.toString(), 1E4, d);\n  } else {\n    W();\n  }\n  Wd(a, b);\n}\nf.Ec = function(a) {\n  a ? (this.a.info(\"Successfully pinged google.com\"), W()) : (this.a.info(\"Failed to ping google.com\"), W(), Wd(this, 8));\n};\nfunction Wd(a, b) {\n  a.a.debug(\"HttpChannel: error - \" + b);\n  a.c = 0;\n  a.e && a.e.channelError(a, b);\n  Od(a);\n  Md(a);\n}\nfunction Od(a) {\n  a.c = 0;\n  a.g = -1;\n  if (a.e) {\n    if (0 == a.Q.length && 0 == a.t.length) {\n      a.e.channelClosed(a);\n    } else {\n      a.a.debug(\"Number of undelivered maps, pending: \" + a.Q.length + \", outgoing: \" + a.t.length);\n      var b = bb(a.Q), c = bb(a.t);\n      a.Q.length = 0;\n      a.t.length = 0;\n      a.e.channelClosed(a, b, c);\n    }\n  }\n}\nfunction xd(a, b) {\n  var c = Ad(a, null, b);\n  a.a.debug(\"GetForwardChannelUri: \" + c);\n  return c;\n}\nfunction Cd(a, b, c) {\n  b = Ad(a, a.$a() ? b : null, c);\n  a.a.debug(\"GetBackChannelUri: \" + b);\n  return b;\n}\nfunction Ad(a, b, c) {\n  var d = ub(c);\n  if (\"\" != d.ia) {\n    b && hb(d, b + \".\" + d.ia), ib(d, d.Ca);\n  } else {\n    var e = window.location, d = vb(e.protocol, b ? b + \".\" + e.hostname : e.hostname, e.port, c)\n  }\n  a.wa && fb(a.wa, function(a, b) {\n    F(d, b, a);\n  });\n  F(d, \"VER\", a.ha);\n  Nd(a, d);\n  return d;\n}\nf.lb = function(a) {\n  if (a && !this.ab) {\n    throw Error(\"Can't create secondary domain capable XhrIo object.\");\n  }\n  a = new Ic;\n  a.dc = this.ab;\n  return a;\n};\nf.isActive = function() {\n  return!!this.e && this.e.isActive(this);\n};\nfunction X(a, b) {\n  if (!fa(a)) {\n    throw Error(\"Fn must not be null and must be a function\");\n  }\n  return l.setTimeout(function() {\n    a();\n  }, b);\n}\nf.H = function() {\n  Hd.dispatchEvent(new Kd(Hd));\n};\nfunction W() {\n  Hd.dispatchEvent(new Id(Hd));\n}\nf.$a = function() {\n  return this.ab || !dd();\n};\nfunction Xd() {\n}\nf = Xd.prototype;\nf.channelHandleMultipleArrays = null;\nf.okToMakeRequest = function() {\n  return 0;\n};\nf.channelOpened = function() {\n};\nf.channelHandleArray = function() {\n};\nf.channelError = function() {\n};\nf.channelClosed = function() {\n};\nf.getAdditionalParams = function() {\n  return{};\n};\nf.getNetworkTestImageUri = function() {\n  return null;\n};\nf.isActive = function() {\n  return!0;\n};\nf.badMapError = function() {\n};\nf.correctHostPrefix = function(a) {\n  return a;\n};\nvar $, Yd, Zd = [].slice;\nYd = {0:\"Ok\", 4:\"User is logging out\", 6:\"Unknown session ID\", 7:\"Stopped by server\", 8:\"General network error\", 2:\"Request failed\", 9:\"Blocked by a network administrator\", 5:\"No data from server\", 10:\"Got bad data from the server\", 11:\"Got a bad response from the server\"};\n$ = function(a, b) {\n  var c, d, e, g, h, k, u, K, v, r, Ia, w, Y;\n  r = this;\n  a || (a = \"channel\");\n  a.match(/:\\/\\//) && a.replace(/^ws/, \"http\");\n  b || (b = {});\n  m(b || \"string\" === typeof b) && (b = {});\n  K = b.reconnectTime || 3E3;\n  c = b.extraHeaders || null;\n  d = b.extraParams || null;\n  null !== b.affinity && (d || (d = {}), b.affinityParam || (b.affinityParam = \"a\"), this.affinity = b.affinity || sa(), d[b.affinityParam] = this.affinity);\n  Y = function(a) {\n    r.readyState = r.readyState = a;\n  };\n  Y(this.CLOSED);\n  w = null;\n  k = b.Hc;\n  e = function() {\n    var a, b;\n    b = arguments[0];\n    a = 2 <= arguments.length ? Zd.call(arguments, 1) : [];\n    try {\n      return \"function\" === typeof r[b] ? r[b].apply(r, a) : void 0;\n    } catch (c) {\n      throw a = c, \"undefined\" !== typeof console && null !== console && console.error(a.stack), a;\n    }\n  };\n  g = new Xd;\n  g.channelOpened = function() {\n    k = w;\n    Y($.OPEN);\n    return e(\"onopen\");\n  };\n  h = null;\n  g.channelError = function(a, b) {\n    var c;\n    c = Yd[b];\n    h = b;\n    r.readyState !== $.CLOSED && Y($.hb);\n    try {\n      return e(\"onerror\", c, b);\n    } catch (d) {\n    }\n  };\n  v = null;\n  g.channelClosed = function(a, c, d) {\n    var g;\n    if (r.readyState !== $.CLOSED) {\n      w = null;\n      a = h ? Yd[h] : \"Closed\";\n      Y($.CLOSED);\n      b.reconnect && 7 !== h && 0 !== h && (g = 6 === h ? 0 : K, clearTimeout(v), v = setTimeout(u, g));\n      try {\n        e(\"onclose\", a, c, d);\n      } catch (k) {\n      }\n      return h = null;\n    }\n  };\n  g.channelHandleArray = function(a, b) {\n    return e(\"onmessage\", b);\n  };\n  u = function() {\n    if (w) {\n      throw Error(\"Reconnect() called from invalid state\");\n    }\n    Y($.CONNECTING);\n    e(\"onconnecting\");\n    clearTimeout(v);\n    w = new Ed(b.appVersion, null != k ? k.Gb : void 0);\n    b.crossDomainXhr && (w.ab = !0);\n    w.e = g;\n    c && w.S(c);\n    h = null;\n    if (b.failFast) {\n      var t = w;\n      t.Ka = !0;\n      t.a.info(\"setFailFast: true\");\n      (t.p || t.G) && t.aa > (t.Ka ? 0 : t.pb) && (t.a.info(\"Retry count \" + t.aa + \" > new maxRetries \" + (t.Ka ? 0 : t.pb) + \". Fail immediately!\"), t.p ? (t.p.cancel(), t.Ba(t.p)) : (l.clearTimeout(t.G), t.G = null, Z(t, 2)));\n    }\n    return w.kb(\"\" + a + \"/test\", \"\" + a + \"/bind\", d, null != k ? k.Y : void 0, null != k ? k.ya : void 0);\n  };\n  this.open = function() {\n    if (r.readyState !== r.CLOSED) {\n      throw Error(\"Already open\");\n    }\n    return u();\n  };\n  this.close = function() {\n    clearTimeout(v);\n    h = 0;\n    if (r.readyState !== $.CLOSED) {\n      return Y($.hb), w.disconnect();\n    }\n  };\n  this.sendMap = Ia = function(a) {\n    var b;\n    if ((b = r.readyState) === $.hb || b === $.CLOSED) {\n      throw Error(\"Cannot send to a closed connection\");\n    }\n    b = w;\n    if (0 == b.c) {\n      throw Error(\"Invalid operation: sending map when state is closed\");\n    }\n    1E3 == b.t.length && b.a.J(\"Already have 1000 queued maps upon queueing \" + zb(a));\n    b.t.push(new Gd(b.sc++, a));\n    2 != b.c && 3 != b.c || Qd(b);\n  };\n  this.send = function(a) {\n    return \"string\" === typeof a ? Ia({_S:a}) : Ia({JSON:zb(a)});\n  };\n  u();\n  return this;\n};\n$.prototype.CONNECTING = $.CONNECTING = $.CONNECTING = 0;\n$.prototype.OPEN = $.OPEN = $.OPEN = 1;\n$.prototype.CLOSING = $.CLOSING = $.hb = 2;\n$.prototype.CLOSED = $.CLOSED = $.CLOSED = 3;\n(\"undefined\" !== typeof exports && null !== exports ? exports : window).BCSocket = $;\n\n})();\n","// Generated by CoffeeScript 1.6.2\n(function() {\n  var BCSocket, Connection, Doc, MicroEvent, ReconnectingWebSocket, SockJS, WebSocket, append, bootstrapTransform, checkValidComponent, checkValidOp, exports, hasBCSocket, hasSockJS, invertComponent, nextTick, socketImpl, strInject, text, transformComponent, transformPosition, types,\n    __slice = [].slice,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  window.sharejs = exports = {\n    'version': '0.6.3'\n  };\n\n  if (typeof WEB === 'undefined') {\n    window.WEB = true;\n  }\n\n  nextTick = typeof WEB !== \"undefined\" && WEB !== null ? function(fn) {\n    return setTimeout(fn, 0);\n  } : process['nextTick'];\n\n  MicroEvent = (function() {\n    function MicroEvent() {}\n\n    MicroEvent.prototype.on = function(event, f) {\n      var _base;\n\n      this._events || (this._events = {});\n      (_base = this._events)[event] || (_base[event] = []);\n      this._events[event].push(f);\n      return this;\n    };\n\n    MicroEvent.prototype.removeListener = function(event, fct) {\n      var i, listeners, _base,\n        _this = this;\n\n      this._events || (this._events = {});\n      listeners = ((_base = this._events)[event] || (_base[event] = []));\n      i = 0;\n      while (i < listeners.length) {\n        if (listeners[i] === fct) {\n          listeners[i] = void 0;\n        }\n        i++;\n      }\n      nextTick(function() {\n        var x;\n\n        return _this._events[event] = (function() {\n          var _i, _len, _ref, _results;\n\n          _ref = this._events[event];\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            x = _ref[_i];\n            if (x) {\n              _results.push(x);\n            }\n          }\n          return _results;\n        }).call(_this);\n      });\n      return this;\n    };\n\n    MicroEvent.prototype.emit = function() {\n      var args, event, fn, _i, _len, _ref, _ref1;\n\n      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (!((_ref = this._events) != null ? _ref[event] : void 0)) {\n        return this;\n      }\n      _ref1 = this._events[event];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        fn = _ref1[_i];\n        if (fn) {\n          fn.apply(this, args);\n        }\n      }\n      return this;\n    };\n\n    MicroEvent.prototype.once = function(event, f) {\n      var listener,\n        _this = this;\n\n      return this.on(event, listener = function() {\n        var args;\n\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        _this.removeListener(event, listener);\n        return f.apply(_this, args);\n      });\n    };\n\n    return MicroEvent;\n\n  })();\n\n  MicroEvent.mixin = function(obj) {\n    var proto;\n\n    proto = obj.prototype || obj;\n    proto.on = MicroEvent.prototype.on;\n    proto.removeListener = MicroEvent.prototype.removeListener;\n    proto.emit = MicroEvent.prototype.emit;\n    proto.once = MicroEvent.prototype.once;\n    return obj;\n  };\n\n  if (typeof WEB === \"undefined\" || WEB === null) {\n    module.exports = MicroEvent;\n  }\n\n  exports['_bt'] = bootstrapTransform = function(type, transformComponent, checkValidOp, append) {\n    var transformComponentX, transformX;\n\n    transformComponentX = function(left, right, destLeft, destRight) {\n      transformComponent(destLeft, left, right, 'left');\n      return transformComponent(destRight, right, left, 'right');\n    };\n    type.transformX = type['transformX'] = transformX = function(leftOp, rightOp) {\n      var k, l, l_, newLeftOp, newRightOp, nextC, r, r_, rightComponent, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1;\n\n      checkValidOp(leftOp);\n      checkValidOp(rightOp);\n      newRightOp = [];\n      for (_i = 0, _len = rightOp.length; _i < _len; _i++) {\n        rightComponent = rightOp[_i];\n        newLeftOp = [];\n        k = 0;\n        while (k < leftOp.length) {\n          nextC = [];\n          transformComponentX(leftOp[k], rightComponent, newLeftOp, nextC);\n          k++;\n          if (nextC.length === 1) {\n            rightComponent = nextC[0];\n          } else if (nextC.length === 0) {\n            _ref = leftOp.slice(k);\n            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n              l = _ref[_j];\n              append(newLeftOp, l);\n            }\n            rightComponent = null;\n            break;\n          } else {\n            _ref1 = transformX(leftOp.slice(k), nextC), l_ = _ref1[0], r_ = _ref1[1];\n            for (_k = 0, _len2 = l_.length; _k < _len2; _k++) {\n              l = l_[_k];\n              append(newLeftOp, l);\n            }\n            for (_l = 0, _len3 = r_.length; _l < _len3; _l++) {\n              r = r_[_l];\n              append(newRightOp, r);\n            }\n            rightComponent = null;\n            break;\n          }\n        }\n        if (rightComponent != null) {\n          append(newRightOp, rightComponent);\n        }\n        leftOp = newLeftOp;\n      }\n      return [leftOp, newRightOp];\n    };\n    return type.transform = type['transform'] = function(op, otherOp, type) {\n      var left, right, _, _ref, _ref1;\n\n      if (!(type === 'left' || type === 'right')) {\n        throw new Error(\"type must be 'left' or 'right'\");\n      }\n      if (otherOp.length === 0) {\n        return op;\n      }\n      if (op.length === 1 && otherOp.length === 1) {\n        return transformComponent([], op[0], otherOp[0], type);\n      }\n      if (type === 'left') {\n        _ref = transformX(op, otherOp), left = _ref[0], _ = _ref[1];\n        return left;\n      } else {\n        _ref1 = transformX(otherOp, op), _ = _ref1[0], right = _ref1[1];\n        return right;\n      }\n    };\n  };\n\n  if (typeof WEB === 'undefined') {\n    exports.bootstrapTransform = bootstrapTransform;\n  }\n\n  text = {};\n\n  text.name = 'text';\n\n  text.create = function() {\n    return '';\n  };\n\n  strInject = function(s1, pos, s2) {\n    return s1.slice(0, pos) + s2 + s1.slice(pos);\n  };\n\n  checkValidComponent = function(c) {\n    var d_type, i_type;\n\n    if (typeof c.p !== 'number') {\n      throw new Error('component missing position field');\n    }\n    i_type = typeof c.i;\n    d_type = typeof c.d;\n    if (!((i_type === 'string') ^ (d_type === 'string'))) {\n      throw new Error('component needs an i or d field');\n    }\n    if (!(c.p >= 0)) {\n      throw new Error('position cannot be negative');\n    }\n  };\n\n  checkValidOp = function(op) {\n    var c, _i, _len;\n\n    for (_i = 0, _len = op.length; _i < _len; _i++) {\n      c = op[_i];\n      checkValidComponent(c);\n    }\n    return true;\n  };\n\n  text.apply = function(snapshot, op) {\n    var component, deleted, _i, _len;\n\n    checkValidOp(op);\n    for (_i = 0, _len = op.length; _i < _len; _i++) {\n      component = op[_i];\n      if (component.i != null) {\n        snapshot = strInject(snapshot, component.p, component.i);\n      } else {\n        deleted = snapshot.slice(component.p, component.p + component.d.length);\n        if (component.d !== deleted) {\n          throw new Error(\"Delete component '\" + component.d + \"' does not match deleted text '\" + deleted + \"'\");\n        }\n        snapshot = snapshot.slice(0, component.p) + snapshot.slice(component.p + component.d.length);\n      }\n    }\n    return snapshot;\n  };\n\n  text._append = append = function(newOp, c) {\n    var last, _ref, _ref1;\n\n    if (c.i === '' || c.d === '') {\n      return;\n    }\n    if (newOp.length === 0) {\n      return newOp.push(c);\n    } else {\n      last = newOp[newOp.length - 1];\n      if ((last.i != null) && (c.i != null) && (last.p <= (_ref = c.p) && _ref <= (last.p + last.i.length))) {\n        return newOp[newOp.length - 1] = {\n          i: strInject(last.i, c.p - last.p, c.i),\n          p: last.p\n        };\n      } else if ((last.d != null) && (c.d != null) && (c.p <= (_ref1 = last.p) && _ref1 <= (c.p + c.d.length))) {\n        return newOp[newOp.length - 1] = {\n          d: strInject(c.d, last.p - c.p, last.d),\n          p: c.p\n        };\n      } else {\n        return newOp.push(c);\n      }\n    }\n  };\n\n  text.compose = function(op1, op2) {\n    var c, newOp, _i, _len;\n\n    checkValidOp(op1);\n    checkValidOp(op2);\n    newOp = op1.slice();\n    for (_i = 0, _len = op2.length; _i < _len; _i++) {\n      c = op2[_i];\n      append(newOp, c);\n    }\n    return newOp;\n  };\n\n  text.compress = function(op) {\n    return text.compose([], op);\n  };\n\n  text.normalize = function(op) {\n    var c, newOp, _i, _len, _ref;\n\n    newOp = [];\n    if ((op.i != null) || (op.p != null)) {\n      op = [op];\n    }\n    for (_i = 0, _len = op.length; _i < _len; _i++) {\n      c = op[_i];\n      if ((_ref = c.p) == null) {\n        c.p = 0;\n      }\n      append(newOp, c);\n    }\n    return newOp;\n  };\n\n  transformPosition = function(pos, c, insertAfter) {\n    if (c.i != null) {\n      if (c.p < pos || (c.p === pos && insertAfter)) {\n        return pos + c.i.length;\n      } else {\n        return pos;\n      }\n    } else {\n      if (pos <= c.p) {\n        return pos;\n      } else if (pos <= c.p + c.d.length) {\n        return c.p;\n      } else {\n        return pos - c.d.length;\n      }\n    }\n  };\n\n  text.transformCursor = function(position, op, side) {\n    var c, insertAfter, _i, _len;\n\n    insertAfter = side === 'right';\n    for (_i = 0, _len = op.length; _i < _len; _i++) {\n      c = op[_i];\n      position = transformPosition(position, c, insertAfter);\n    }\n    return position;\n  };\n\n  text._tc = transformComponent = function(dest, c, otherC, side) {\n    var cIntersect, intersectEnd, intersectStart, newC, otherIntersect, s;\n\n    checkValidOp([c]);\n    checkValidOp([otherC]);\n    if (c.i != null) {\n      append(dest, {\n        i: c.i,\n        p: transformPosition(c.p, otherC, side === 'right')\n      });\n    } else {\n      if (otherC.i != null) {\n        s = c.d;\n        if (c.p < otherC.p) {\n          append(dest, {\n            d: s.slice(0, otherC.p - c.p),\n            p: c.p\n          });\n          s = s.slice(otherC.p - c.p);\n        }\n        if (s !== '') {\n          append(dest, {\n            d: s,\n            p: c.p + otherC.i.length\n          });\n        }\n      } else {\n        if (c.p >= otherC.p + otherC.d.length) {\n          append(dest, {\n            d: c.d,\n            p: c.p - otherC.d.length\n          });\n        } else if (c.p + c.d.length <= otherC.p) {\n          append(dest, c);\n        } else {\n          newC = {\n            d: '',\n            p: c.p\n          };\n          if (c.p < otherC.p) {\n            newC.d = c.d.slice(0, otherC.p - c.p);\n          }\n          if (c.p + c.d.length > otherC.p + otherC.d.length) {\n            newC.d += c.d.slice(otherC.p + otherC.d.length - c.p);\n          }\n          intersectStart = Math.max(c.p, otherC.p);\n          intersectEnd = Math.min(c.p + c.d.length, otherC.p + otherC.d.length);\n          cIntersect = c.d.slice(intersectStart - c.p, intersectEnd - c.p);\n          otherIntersect = otherC.d.slice(intersectStart - otherC.p, intersectEnd - otherC.p);\n          if (cIntersect !== otherIntersect) {\n            throw new Error('Delete ops delete different text in the same region of the document');\n          }\n          if (newC.d !== '') {\n            newC.p = transformPosition(newC.p, otherC);\n            append(dest, newC);\n          }\n        }\n      }\n    }\n    return dest;\n  };\n\n  invertComponent = function(c) {\n    if (c.i != null) {\n      return {\n        d: c.i,\n        p: c.p\n      };\n    } else {\n      return {\n        i: c.d,\n        p: c.p\n      };\n    }\n  };\n\n  text.invert = function(op) {\n    var c, _i, _len, _ref, _results;\n\n    _ref = op.slice().reverse();\n    _results = [];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      c = _ref[_i];\n      _results.push(invertComponent(c));\n    }\n    return _results;\n  };\n\n  if (typeof WEB !== \"undefined\" && WEB !== null) {\n    exports.types || (exports.types = {});\n    bootstrapTransform(text, transformComponent, checkValidOp, append);\n    exports.types.text = text;\n  } else {\n    module.exports = text;\n    require('./helpers').bootstrapTransform(text, transformComponent, checkValidOp, append);\n  }\n\n  if (typeof WEB === 'undefined') {\n    text = require('./text');\n  }\n\n  text.api = {\n    provides: {\n      text: true\n    },\n    getLength: function() {\n      return this.snapshot.length;\n    },\n    getText: function() {\n      return this.snapshot;\n    },\n    insert: function(pos, text, callback) {\n      var op;\n\n      op = [\n        {\n          p: pos,\n          i: text\n        }\n      ];\n      this.submitOp(op, callback);\n      return op;\n    },\n    del: function(pos, length, callback) {\n      var op;\n\n      op = [\n        {\n          p: pos,\n          d: this.snapshot.slice(pos, pos + length)\n        }\n      ];\n      this.submitOp(op, callback);\n      return op;\n    },\n    _register: function() {\n      return this.on('remoteop', function(op) {\n        var component, _i, _len, _results;\n\n        _results = [];\n        for (_i = 0, _len = op.length; _i < _len; _i++) {\n          component = op[_i];\n          if (component.i !== void 0) {\n            _results.push(this.emit('insert', component.p, component.i));\n          } else {\n            _results.push(this.emit('delete', component.p, component.d));\n          }\n        }\n        return _results;\n      });\n    }\n  };\n\n  if (typeof WEB === \"undefined\" || WEB === null) {\n    types = require('../types');\n  }\n\n  if (typeof WEB !== \"undefined\" && WEB !== null) {\n    exports.extendDoc = function(name, fn) {\n      return Doc.prototype[name] = fn;\n    };\n  }\n\n  Doc = (function() {\n    function Doc(connection, name, openData) {\n      this.connection = connection;\n      this.name = name;\n      this.shout = __bind(this.shout, this);\n      this.flush = __bind(this.flush, this);\n      openData || (openData = {});\n      this.version = openData.v;\n      this.snapshot = openData.snaphot;\n      if (openData.type) {\n        this._setType(openData.type);\n      }\n      this.state = 'closed';\n      this.autoOpen = false;\n      this._create = openData.create;\n      this.inflightOp = null;\n      this.inflightCallbacks = [];\n      this.inflightSubmittedIds = [];\n      this.pendingOp = null;\n      this.pendingCallbacks = [];\n      this.serverOps = {};\n    }\n\n    Doc.prototype._xf = function(client, server) {\n      var client_, server_;\n\n      if (this.type.transformX) {\n        return this.type.transformX(client, server);\n      } else {\n        client_ = this.type.transform(client, server, 'left');\n        server_ = this.type.transform(server, client, 'right');\n        return [client_, server_];\n      }\n    };\n\n    Doc.prototype._otApply = function(docOp, isRemote) {\n      var oldSnapshot;\n\n      oldSnapshot = this.snapshot;\n      this.snapshot = this.type.apply(this.snapshot, docOp);\n      this.emit('change', docOp, oldSnapshot);\n      if (isRemote) {\n        return this.emit('remoteop', docOp, oldSnapshot);\n      }\n    };\n\n    Doc.prototype._connectionStateChanged = function(state, data) {\n      switch (state) {\n        case 'disconnected':\n          this.state = 'closed';\n          if (this.inflightOp) {\n            this.inflightSubmittedIds.push(this.connection.id);\n          }\n          this.emit('closed');\n          break;\n        case 'ok':\n          if (this.autoOpen) {\n            this.open();\n          }\n          break;\n        case 'stopped':\n          if (typeof this._openCallback === \"function\") {\n            this._openCallback(data);\n          }\n      }\n      return this.emit(state, data);\n    };\n\n    Doc.prototype._setType = function(type) {\n      var k, v, _ref;\n\n      if (this.type) {\n        return;\n      }\n      if (typeof type === 'string') {\n        type = types[type];\n      }\n      if (!(type && type.compose)) {\n        throw new Error('Support for types without compose() is not implemented');\n      }\n      this.type = type;\n      if (type.api) {\n        _ref = type.api;\n        for (k in _ref) {\n          v = _ref[k];\n          this[k] = v;\n        }\n        return typeof this._register === \"function\" ? this._register() : void 0;\n      } else {\n        return this.provides = {};\n      }\n    };\n\n    Doc.prototype._onMessage = function(msg) {\n      var callback, docOp, error, oldInflightOp, op, path, response, undo, value, _i, _j, _len, _len1, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;\n\n      switch (false) {\n        case msg.open !== true:\n          this.state = 'open';\n          this._create = false;\n          if (this.created == null) {\n            this.created = !!msg.create;\n          }\n          if (msg.type) {\n            this._setType(msg.type);\n          }\n          if (msg.create) {\n            this.created = true;\n            this.snapshot = this.type.create();\n          } else {\n            if (this.created !== true) {\n              this.created = false;\n            }\n            if (msg.snapshot !== void 0) {\n              this.snapshot = msg.snapshot;\n            }\n          }\n          if (msg.meta) {\n            this.meta = msg.meta;\n          }\n          if (msg.v != null) {\n            this.version = msg.v;\n          }\n          if (this.inflightOp) {\n            response = {\n              doc: this.name,\n              op: this.inflightOp,\n              v: this.version\n            };\n            if (this.inflightSubmittedIds.length) {\n              response.dupIfSource = this.inflightSubmittedIds;\n            }\n            this.connection.send(response);\n          } else {\n            this.flush();\n          }\n          this.emit('open');\n          return typeof this._openCallback === \"function\" ? this._openCallback(null) : void 0;\n        case msg.open !== false:\n          if (msg.error) {\n            if (typeof console !== \"undefined\" && console !== null) {\n              console.error(\"Could not open document: \" + msg.error);\n            }\n            this.emit('error', msg.error);\n            if (typeof this._openCallback === \"function\") {\n              this._openCallback(msg.error);\n            }\n          }\n          this.state = 'closed';\n          this.emit('closed');\n          if (typeof this._closeCallback === \"function\") {\n            this._closeCallback();\n          }\n          return this._closeCallback = null;\n        case !(msg.op === null && error === 'Op already submitted'):\n          break;\n        case !((msg.op === void 0 && msg.v !== void 0) || (msg.op && (_ref = msg.meta.source, __indexOf.call(this.inflightSubmittedIds, _ref) >= 0))):\n          oldInflightOp = this.inflightOp;\n          this.inflightOp = null;\n          this.inflightSubmittedIds.length = 0;\n          error = msg.error;\n          if (error) {\n            if (this.type.invert) {\n              undo = this.type.invert(oldInflightOp);\n              if (this.pendingOp) {\n                _ref1 = this._xf(this.pendingOp, undo), this.pendingOp = _ref1[0], undo = _ref1[1];\n              }\n              this._otApply(undo, true);\n            } else {\n              this.emit('error', \"Op apply failed (\" + error + \") and the op could not be reverted\");\n            }\n            _ref2 = this.inflightCallbacks;\n            for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n              callback = _ref2[_i];\n              callback(error);\n            }\n          } else {\n            if (msg.v !== this.version) {\n              throw new Error('Invalid version from server');\n            }\n            this.serverOps[this.version] = oldInflightOp;\n            this.version++;\n            this.emit('acknowledge', oldInflightOp);\n            _ref3 = this.inflightCallbacks;\n            for (_j = 0, _len1 = _ref3.length; _j < _len1; _j++) {\n              callback = _ref3[_j];\n              callback(null, oldInflightOp);\n            }\n          }\n          return this.flush();\n        case !msg.op:\n          if (msg.v < this.version) {\n            return;\n          }\n          if (msg.doc !== this.name) {\n            return this.emit('error', \"Expected docName '\" + this.name + \"' but got \" + msg.doc);\n          }\n          if (msg.v !== this.version) {\n            return this.emit('error', \"Expected version \" + this.version + \" but got \" + msg.v);\n          }\n          op = msg.op;\n          this.serverOps[this.version] = op;\n          docOp = op;\n          if (this.inflightOp !== null) {\n            _ref4 = this._xf(this.inflightOp, docOp), this.inflightOp = _ref4[0], docOp = _ref4[1];\n          }\n          if (this.pendingOp !== null) {\n            _ref5 = this._xf(this.pendingOp, docOp), this.pendingOp = _ref5[0], docOp = _ref5[1];\n          }\n          this.version++;\n          return this._otApply(docOp, true);\n        case !msg.meta:\n          _ref6 = msg.meta, path = _ref6.path, value = _ref6.value;\n          switch (path != null ? path[0] : void 0) {\n            case 'shout':\n              return this.emit('shout', value);\n            default:\n              return typeof console !== \"undefined\" && console !== null ? console.warn('Unhandled meta op:', msg) : void 0;\n          }\n          break;\n        default:\n          return typeof console !== \"undefined\" && console !== null ? console.warn('Unhandled document message:', msg) : void 0;\n      }\n    };\n\n    Doc.prototype.flush = function() {\n      if (!(this.connection.state === 'ok' && this.inflightOp === null && this.pendingOp !== null)) {\n        return;\n      }\n      this.inflightOp = this.pendingOp;\n      this.inflightCallbacks = this.pendingCallbacks;\n      this.pendingOp = null;\n      this.pendingCallbacks = [];\n      return this.connection.send({\n        doc: this.name,\n        op: this.inflightOp,\n        v: this.version\n      });\n    };\n\n    Doc.prototype.submitOp = function(op, callback) {\n      if (this.type.normalize != null) {\n        op = this.type.normalize(op);\n      }\n      this.snapshot = this.type.apply(this.snapshot, op);\n      if (this.pendingOp !== null) {\n        this.pendingOp = this.type.compose(this.pendingOp, op);\n      } else {\n        this.pendingOp = op;\n      }\n      if (callback) {\n        this.pendingCallbacks.push(callback);\n      }\n      this.emit('change', op);\n      return setTimeout(this.flush, 0);\n    };\n\n    Doc.prototype.shout = function(msg) {\n      return this.connection.send({\n        doc: this.name,\n        meta: {\n          path: ['shout'],\n          value: msg\n        }\n      });\n    };\n\n    Doc.prototype.open = function(callback) {\n      var message,\n        _this = this;\n\n      this.autoOpen = true;\n      if (this.state !== 'closed') {\n        return;\n      }\n      message = {\n        doc: this.name,\n        open: true\n      };\n      if (this.snapshot === void 0) {\n        message.snapshot = null;\n      }\n      if (this.type) {\n        message.type = this.type.name;\n      }\n      if (this.version != null) {\n        message.v = this.version;\n      }\n      if (this._create) {\n        message.create = true;\n      }\n      this.connection.send(message);\n      this.state = 'opening';\n      return this._openCallback = function(error) {\n        _this._openCallback = null;\n        return typeof callback === \"function\" ? callback(error) : void 0;\n      };\n    };\n\n    Doc.prototype.close = function(callback) {\n      this.autoOpen = false;\n      if (this.state === 'closed') {\n        return typeof callback === \"function\" ? callback() : void 0;\n      }\n      this.connection.send({\n        doc: this.name,\n        open: false\n      });\n      this.state = 'closed';\n      this.emit('closing');\n      return this._closeCallback = callback;\n    };\n\n    return Doc;\n\n  })();\n\n  if (typeof WEB === \"undefined\" || WEB === null) {\n    MicroEvent = require('./microevent');\n  }\n\n  MicroEvent.mixin(Doc);\n\n  exports.Doc = Doc;\n\n  /*\n  This behaves like a WebSocket in every way, except if it fails to connect,\n  or it gets disconnected, it will repeatedly poll until it succesfully connects\n  again.\n  \n  It is API compatible, so when you have:\n  ws = new WebSocket('ws://....');\n  you can replace with:\n  ws = new ReconnectingWebSocket('ws://....');\n  \n  The event stream will typically look like:\n  onopen\n  onmessage\n  onmessage\n  onclose // lost connection\n  onopen  // sometime later...\n  onmessage\n  onmessage\n  etc...\n  \n  It is API compatible with the standard WebSocket API.\n  \n  Inspired from: https://github.com/joewalnes/reconnecting-websocket/\n  Contributors:\n  - Joe Walnes\n  - Didier Colens\n  - Wout Mertens\n  */\n\n\n  ReconnectingWebSocket = (function() {\n    function ReconnectingWebSocket(url, protocols, Socket) {\n      var connect, timedOut,\n        _this = this;\n\n      if ((protocols != null) && typeof protocols === 'function') {\n        Socket = protocols;\n        protocols = void 0;\n      } else if (typeof Socket !== 'function') {\n        Socket = WebSocket;\n      }\n      this.debug = this.debugAll;\n      this.reconnectInterval = 1000;\n      this.timeoutInterval = 2000;\n      this.forcedClose = false;\n      this.url = url;\n      this.protocols = protocols;\n      this.readyState = Socket.CONNECTING;\n      this.URL = url;\n      timedOut = false;\n      connect = function(reconnectAttempt) {\n        var timeout;\n\n        _this.ws = new Socket(_this.url);\n        if (_this.debug) {\n          console.debug(\"ReconnectingWebSocket\", \"attempt-connect\", _this.url);\n        }\n        timeout = setTimeout(function() {\n          if (_this.debug) {\n            console.debug(\"ReconnectingWebSocket\", \"connection-timeout\", _this.url);\n          }\n          timedOut = true;\n          _this.ws.close();\n          return timedOut = false;\n        }, _this.timeoutInterval);\n        _this.ws.onopen = function(event) {\n          clearTimeout(timeout);\n          if (_this.debug) {\n            console.debug(\"ReconnectingWebSocket\", \"onopen\", _this.url);\n          }\n          _this.readyState = Socket.OPEN;\n          reconnectAttempt = false;\n          return _this.onopen(event);\n        };\n        _this.ws.onclose = function(event) {\n          clearTimeout(timeout);\n          _this.ws = null;\n          if (_this.forcedClose) {\n            _this.readyState = Socket.CLOSED;\n            return _this.onclose(event);\n          } else {\n            _this.readyState = Socket.CONNECTING;\n            _this.onconnecting(event);\n            if (!reconnectAttempt && !timedOut) {\n              if (_this.debug) {\n                console.debug(\"ReconnectingWebSocket\", \"onclose\", _this.url);\n              }\n              _this.onclose(event);\n            }\n            return setTimeout((function() {\n              return connect(true);\n            }), _this.reconnectInterval);\n          }\n        };\n        _this.ws.onmessage = function(event) {\n          if (_this.debug) {\n            console.debug(\"ReconnectingWebSocket\", \"onmessage\", _this.url, event.data);\n          }\n          return _this.onmessage(event);\n        };\n        return _this.ws.onerror = function(event) {\n          if (_this.debug) {\n            console.debug(\"ReconnectingWebSocket\", \"onerror\", _this.url, event);\n          }\n          return _this.onerror(event);\n        };\n      };\n      connect(this.url);\n    }\n\n    ReconnectingWebSocket.prototype.onopen = function(event) {};\n\n    ReconnectingWebSocket.prototype.onclose = function(event) {};\n\n    ReconnectingWebSocket.prototype.onconnecting = function(event) {};\n\n    ReconnectingWebSocket.prototype.onmessage = function(event) {};\n\n    ReconnectingWebSocket.prototype.onerror = function(event) {};\n\n    ReconnectingWebSocket.prototype.send = function(data) {\n      if (this.ws) {\n        if (this.debug) {\n          console.debug(\"ReconnectingWebSocket\", \"send\", this.url, data);\n        }\n        return this.ws.send(data);\n      } else {\n        throw \"INVALID_STATE_ERR : Pausing to reconnect websocket\";\n      }\n    };\n\n    ReconnectingWebSocket.prototype.close = function() {\n      if (this.ws) {\n        this.forcedClose = true;\n        return this.ws.close();\n      }\n    };\n\n    /*\n    Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.\n    */\n\n\n    ReconnectingWebSocket.prototype.debugAll = false;\n\n    /*\n    Additional public API method to refresh the connection if still open (close, re-open).\n    For example, if the app suspects bad data / missed heart beats, it can try to refresh.\n    */\n\n\n    ReconnectingWebSocket.prototype.refresh = function() {\n      if (this.ws) {\n        return this.ws.close();\n      }\n    };\n\n    return ReconnectingWebSocket;\n\n  })();\n\n  if (typeof WEB !== \"undefined\" && WEB !== null) {\n    types = exports.types;\n    BCSocket = window.BCSocket, SockJS = window.SockJS, WebSocket = window.WebSocket;\n    if (BCSocket) {\n      socketImpl = 'channel';\n    } else {\n      if (SockJS) {\n        socketImpl = 'sockjs';\n      } else {\n        socketImpl = 'websocket';\n      }\n    }\n  } else {\n    types = require('../types');\n    BCSocket = require('browserchannel').BCSocket;\n    Doc = require('./doc').Doc;\n    WebSocket = require('ws');\n    socketImpl = null;\n  }\n\n  Connection = (function() {\n    function Connection(host, authentication) {\n      var _this = this;\n\n      this.docs = {};\n      this.state = 'connecting';\n      if (socketImpl == null) {\n        if (host.match(/^ws:/)) {\n          socketImpl = 'websocket';\n        }\n      }\n      this.socket = (function() {\n        switch (socketImpl) {\n          case 'channel':\n            return new BCSocket(host, {\n              reconnect: true\n            });\n          case 'sockjs':\n            return new ReconnectingWebSocket(host, SockJS);\n          case 'websocket':\n            return new ReconnectingWebSocket(host);\n          default:\n            return new BCSocket(host, {\n              reconnect: true\n            });\n        }\n      })();\n      this.socket.onmessage = function(msg) {\n        var docName;\n\n        if (socketImpl === 'sockjs' || socketImpl === 'websocket') {\n          msg = JSON.parse(msg.data);\n        }\n        if (msg.auth === null) {\n          _this.lastError = msg.error;\n          _this.disconnect();\n          return _this.emit('connect failed', msg.error);\n        } else if (msg.auth) {\n          _this.id = msg.auth;\n          _this.setState('ok');\n          return;\n        }\n        docName = msg.doc;\n        if (docName !== void 0) {\n          _this.lastReceivedDoc = docName;\n        } else {\n          msg.doc = docName = _this.lastReceivedDoc;\n        }\n        if (_this.docs[docName]) {\n          return _this.docs[docName]._onMessage(msg);\n        } else {\n          return typeof console !== \"undefined\" && console !== null ? console.error('Unhandled message', msg) : void 0;\n        }\n      };\n      this.connected = false;\n      this.socket.onclose = function(reason) {\n        _this.setState('disconnected', reason);\n        if (reason === 'Closed' || reason === 'Stopped by server') {\n          return _this.setState('stopped', _this.lastError || reason);\n        }\n      };\n      this.socket.onerror = function(e) {\n        return _this.emit('error', e);\n      };\n      this.socket.onopen = function() {\n        _this.send({\n          auth: authentication ? authentication : null\n        });\n        _this.lastError = _this.lastReceivedDoc = _this.lastSentDoc = null;\n        return _this.setState('handshaking');\n      };\n      this.socket.onconnecting = function() {\n        return _this.setState('connecting');\n      };\n    }\n\n    Connection.prototype.setState = function(state, data) {\n      var doc, docName, _ref, _results;\n\n      if (this.state === state) {\n        return;\n      }\n      this.state = state;\n      if (state === 'disconnected') {\n        delete this.id;\n      }\n      this.emit(state, data);\n      _ref = this.docs;\n      _results = [];\n      for (docName in _ref) {\n        doc = _ref[docName];\n        _results.push(doc._connectionStateChanged(state, data));\n      }\n      return _results;\n    };\n\n    Connection.prototype.send = function(data) {\n      var docName;\n\n      if (data.doc) {\n        docName = data.doc;\n        if (docName === this.lastSentDoc) {\n          delete data.doc;\n        } else {\n          this.lastSentDoc = docName;\n        }\n      }\n      if (socketImpl === 'sockjs' || socketImpl === 'websocket') {\n        data = JSON.stringify(data);\n      }\n      return this.socket.send(data);\n    };\n\n    Connection.prototype.disconnect = function() {\n      return this.socket.close();\n    };\n\n    Connection.prototype.makeDoc = function(name, data, callback) {\n      var doc,\n        _this = this;\n\n      if (this.docs[name]) {\n        throw new Error(\"Doc \" + name + \" already open\");\n      }\n      doc = new Doc(this, name, data);\n      this.docs[name] = doc;\n      return doc.open(function(error) {\n        if (error) {\n          delete _this.docs[name];\n        }\n        if (!error) {\n          doc.on('closed', function() {\n            if (!doc.autoOpen) {\n              return delete _this.docs[name];\n            }\n          });\n        }\n        return callback(error, (!error ? doc : void 0));\n      });\n    };\n\n    Connection.prototype.openExisting = function(docName, callback) {\n      var doc;\n\n      if (this.state === 'stopped') {\n        return callback('connection closed');\n      }\n      if (this.docs[docName]) {\n        return this._ensureOpenState(this.docs[docName], callback);\n      }\n      return doc = this.makeDoc(docName, {}, callback);\n    };\n\n    Connection.prototype.open = function(docName, type, callback) {\n      var doc;\n\n      if (this.state === 'stopped') {\n        return callback('connection closed');\n      }\n      if (this.state === 'connecting') {\n        this.on('handshaking', function() {\n          this.open(docName, type, callback);\n          return callback = null;\n        });\n        return;\n      }\n      if (typeof type === 'function') {\n        callback = type;\n        type = 'text';\n      }\n      callback || (callback = function() {});\n      if (typeof type === 'string') {\n        type = types[type];\n      }\n      if (!type) {\n        throw new Error(\"OT code for document type missing\");\n      }\n      if (docName == null) {\n        throw new Error('Server-generated random doc names are not currently supported');\n      }\n      if (this.docs[docName]) {\n        doc = this.docs[docName];\n        if (doc.type === type) {\n          this._ensureOpenState(doc, callback);\n        } else {\n          callback('Type mismatch', doc);\n        }\n        return;\n      }\n      return this.makeDoc(docName, {\n        create: true,\n        type: type.name\n      }, callback);\n    };\n\n    Connection.prototype._ensureOpenState = function(doc, callback) {\n      switch (doc.state) {\n        case 'open':\n          callback(null, doc);\n          break;\n        case 'opening':\n          this.on('open', function() {\n            return callback(null, doc);\n          });\n          break;\n        case 'closed':\n          doc.open(function(error) {\n            return callback(error, (!error ? doc : void 0));\n          });\n      }\n    };\n\n    return Connection;\n\n  })();\n\n  if (typeof WEB === \"undefined\" || WEB === null) {\n    MicroEvent = require('./microevent');\n  }\n\n  MicroEvent.mixin(Connection);\n\n  exports.Connection = Connection;\n\n  if (typeof WEB !== \"undefined\" && WEB !== null) {\n    hasBCSocket = window.BCSocket !== void 0;\n    hasSockJS = window.SockJS !== void 0;\n    if (hasBCSocket) {\n      socketImpl = 'channel';\n    } else {\n      if (hasSockJS) {\n        socketImpl = 'sockjs';\n      } else {\n        socketImpl = 'websocket';\n      }\n    }\n  } else {\n    Connection = require('./connection').Connection;\n  }\n\n  exports.open = (function() {\n    var connections, getConnection, maybeClose;\n\n    connections = {};\n    getConnection = function(origin, authentication) {\n      var c, del, location, protocol;\n\n      if ((typeof WEB !== \"undefined\" && WEB !== null) && (origin == null)) {\n        location = window.location;\n        protocol = socketImpl === 'websocket' ? 'ws:' : location.protocol;\n        origin = \"\" + protocol + \"//\" + location.host + \"/\" + socketImpl;\n      }\n      if (!connections[origin]) {\n        c = new Connection(origin, authentication);\n        del = function() {\n          return delete connections[origin];\n        };\n        c.on('disconnected', del);\n        c.on('connect failed', del);\n        connections[origin] = c;\n      }\n      return connections[origin];\n    };\n    maybeClose = function(c) {\n      var doc, name, numDocs, _ref;\n\n      numDocs = 0;\n      _ref = c.docs;\n      for (name in _ref) {\n        doc = _ref[name];\n        if (doc.state !== 'closed' || doc.autoOpen) {\n          numDocs++;\n        }\n      }\n      if (numDocs === 0) {\n        return c.disconnect();\n      }\n    };\n    return function(docName, type, options, callback) {\n      var authentication, c, origin;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      if (typeof options === 'string') {\n        options = {\n          'origin': options\n        };\n      }\n      origin = options.origin;\n      authentication = options.authentication;\n      c = getConnection(origin, authentication);\n      c.open(docName, type, function(error, doc) {\n        if (error) {\n          callback(error);\n          return maybeClose(c);\n        } else {\n          doc.on('closed', function() {\n            return maybeClose(c);\n          });\n          return callback(null, doc);\n        }\n      });\n      c.on('connect failed');\n      return c;\n    };\n  })();\n\n  if (typeof WEB === \"undefined\" || WEB === null) {\n    exports.Doc = require('./doc').Doc;\n    exports.Connection = require('./connection').Connection;\n  }\n\n}).call(this);\n","// Generated by CoffeeScript 1.6.2\n(function() {\n  var applyChange;\n\n  applyChange = function(doc, oldval, newval) {\n    var commonEnd, commonStart;\n\n    if (oldval === newval) {\n      return;\n    }\n    commonStart = 0;\n    while (oldval.charAt(commonStart) === newval.charAt(commonStart)) {\n      commonStart++;\n    }\n    commonEnd = 0;\n    while (oldval.charAt(oldval.length - 1 - commonEnd) === newval.charAt(newval.length - 1 - commonEnd) && commonEnd + commonStart < oldval.length && commonEnd + commonStart < newval.length) {\n      commonEnd++;\n    }\n    if (oldval.length !== commonStart + commonEnd) {\n      doc.del(commonStart, oldval.length - commonStart - commonEnd);\n    }\n    if (newval.length !== commonStart + commonEnd) {\n      return doc.insert(commonStart, newval.slice(commonStart, newval.length - commonEnd));\n    }\n  };\n\n  window.sharejs.extendDoc('attach_textarea', function(elem) {\n    var delete_listener, doc, event, genOp, insert_listener, prevvalue, replaceText, _i, _len, _ref,\n      _this = this;\n\n    doc = this;\n    elem.value = this.getText();\n    prevvalue = elem.value;\n    replaceText = function(newText, transformCursor) {\n      var newSelection, scrollTop;\n\n      newSelection = [transformCursor(elem.selectionStart), transformCursor(elem.selectionEnd)];\n      scrollTop = elem.scrollTop;\n      elem.value = newText;\n      if (elem.scrollTop !== scrollTop) {\n        elem.scrollTop = scrollTop;\n      }\n      if (window.document.activeElement === elem) {\n        return elem.selectionStart = newSelection[0], elem.selectionEnd = newSelection[1], newSelection;\n      }\n    };\n    this.on('insert', insert_listener = function(pos, text) {\n      var transformCursor;\n\n      transformCursor = function(cursor) {\n        if (pos < cursor) {\n          return cursor + text.length;\n        } else {\n          return cursor;\n        }\n      };\n      prevvalue = elem.value.replace(/\\r\\n/g, '\\n');\n      return replaceText(prevvalue.slice(0, pos) + text + prevvalue.slice(pos), transformCursor);\n    });\n    this.on('delete', delete_listener = function(pos, text) {\n      var transformCursor;\n\n      transformCursor = function(cursor) {\n        if (pos < cursor) {\n          return cursor - Math.min(text.length, cursor - pos);\n        } else {\n          return cursor;\n        }\n      };\n      prevvalue = elem.value.replace(/\\r\\n/g, '\\n');\n      return replaceText(prevvalue.slice(0, pos) + prevvalue.slice(pos + text.length), transformCursor);\n    });\n    genOp = function(event) {\n      var onNextTick;\n\n      onNextTick = function(fn) {\n        return setTimeout(fn, 0);\n      };\n      return onNextTick(function() {\n        if (elem.value !== prevvalue) {\n          prevvalue = elem.value;\n          return applyChange(doc, doc.getText(), elem.value.replace(/\\r\\n/g, '\\n'));\n        }\n      });\n    };\n    _ref = ['textInput', 'keydown', 'keyup', 'select', 'cut', 'paste'];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      event = _ref[_i];\n      if (elem.addEventListener) {\n        elem.addEventListener(event, genOp, false);\n      } else {\n        elem.attachEvent('on' + event, genOp);\n      }\n    }\n    return elem.detach_share = function() {\n      var _j, _len1, _ref1, _results;\n\n      _this.removeListener('insert', insert_listener);\n      _this.removeListener('delete', delete_listener);\n      _ref1 = ['textInput', 'keydown', 'keyup', 'select', 'cut', 'paste'];\n      _results = [];\n      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n        event = _ref1[_j];\n        if (elem.removeEventListener) {\n          _results.push(elem.removeEventListener(event, genOp, false));\n        } else {\n          _results.push(elem.detachEvent('on' + event, genOp));\n        }\n      }\n      return _results;\n    };\n  });\n\n}).call(this);\n","\nTemplate.__checkName(\"_sharejsText\");\nTemplate[\"_sharejsText\"] = new Template(\"Template._sharejsText\", (function() {\n  var view = this;\n  return HTML.TEXTAREA({\n    id: function() {\n      return Spacebars.mustache(view.lookup(\"id\"));\n    },\n    \"data-docid\": function() {\n      return Spacebars.mustache(view.lookup(\"docid\"));\n    },\n    \"class\": \"shareJSText\",\n    disabled: \"\",\n    value: \"Loading...\"\n  });\n}));\n","class ShareJSConnector\n\n  getOptions = ->\n    origin: '//' + window.location.host + '/channel'\n    authentication: Meteor.userId?() or null # accounts-base may not be in the app\n\n  constructor: (parentView) ->\n    # Create a ReactiveVar that tracks the docId that was passed in\n    docIdVar = new Blaze.ReactiveVar\n\n    parentView.onViewReady ->\n      this.autorun ->\n        data = Blaze.getData()\n        docIdVar.set(data.docid)\n\n    parentView.onViewDestroyed =>\n      this.destroy()\n\n    @isCreated = false\n    @docIdVar = docIdVar\n\n    # Configure any callbacks if specified\n    params = Blaze.getData(parentView)\n    @configCallback = params.onRender\n    @connectCallback = params.onConnect\n\n  create: ->\n    throw new Error(\"Already created\") if @isCreated\n    connector = this\n    @isCreated = true\n\n    @view = @createView()\n    @view.onViewReady ->\n      connector.rendered( this.firstNode() )\n\n      this.autorun ->\n        # By grabbing docId here, we ensure that we only try to connect when\n        # this is rendered.\n        docId = connector.docIdVar.get()\n\n        # Disconnect any existing connections\n        connector.disconnect()\n        connector.connect(docId) if docId\n\n    return @view\n\n  # Set up the context when rendered.\n  rendered: (element) ->\n    this.element = element\n\n  # Connect to a document.\n  connect: (docId, element) ->\n    @connectingId = docId\n\n    sharejs.open docId, 'text', getOptions(), (error, doc) =>\n      if error\n        Meteor._debug(error)\n        return\n\n      # Don't attach if re-render happens too quickly and we're trying to\n      # connect to a different document now.\n      unless @connectingId is doc.name\n        doc.close() # Close immediately\n      else\n        @attach(doc)\n\n  # Attach shareJS to the on-screen editor\n  attach: (doc) ->\n    @doc = doc\n\n  # Disconnect from ShareJS. This should be idempotent.\n  disconnect: ->\n    # Close connection to the ShareJS doc\n    if @doc?\n      @doc.close()\n      @doc = null\n\n  # Destroy the connector and make sure everything's disconnected.\n  destroy: ->\n    throw new Error(\"Already destroyed\") if @isDestroyed\n\n    @disconnect()\n    @view = null\n    @isDestroyed = true\n\nclass ShareJSTextConnector extends ShareJSConnector\n\n  createView: ->\n    return Blaze.With(Blaze.getData, -> Template._sharejsText)\n\n  rendered: (element) ->\n    super\n    @textarea = element\n    @configCallback?(@textarea)\n\n  connect: ->\n    @textarea.disabled = true\n    super\n\n  attach: (doc) ->\n    super\n    doc.attach_textarea(@textarea)\n    @textarea.disabled = false\n    @connectCallback?(@textarea)\n\n  disconnect: ->\n    @textarea?.detach_share?()\n    super\n\n  destroy: ->\n    super\n    # Meteor._debug \"destroying textarea editor\"\n    @textarea = null\n\nUI.registerHelper \"sharejsText\", new Template('sharejsText', ->\n  return new ShareJSTextConnector(this).create()\n)\n"]}}]