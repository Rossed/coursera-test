{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ShareJSCMConnector,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nShareJSCMConnector = (function(superClass) {\n  extend(ShareJSCMConnector, superClass);\n\n  function ShareJSCMConnector() {\n    return ShareJSCMConnector.__super__.constructor.apply(this, arguments);\n  }\n\n  ShareJSCMConnector.prototype.createView = function() {\n    return Blaze.With(Blaze.getData, function() {\n      return Template._sharejsCM;\n    });\n  };\n\n  ShareJSCMConnector.prototype.rendered = function(element) {\n    ShareJSCMConnector.__super__.rendered.apply(this, arguments);\n    this.cm = new CodeMirror(element);\n    return typeof this.configCallback === \"function\" ? this.configCallback(this.cm) : void 0;\n  };\n\n  ShareJSCMConnector.prototype.connect = function() {\n    this.cm.readOnly = true;\n    return ShareJSCMConnector.__super__.connect.apply(this, arguments);\n  };\n\n  ShareJSCMConnector.prototype.attach = function(doc) {\n    ShareJSCMConnector.__super__.attach.apply(this, arguments);\n    doc.attach_cm(this.cm);\n    this.cm.readOnly = false;\n    return typeof this.connectCallback === \"function\" ? this.connectCallback(this.cm) : void 0;\n  };\n\n  ShareJSCMConnector.prototype.disconnect = function() {\n    var ref;\n    if ((ref = this.doc) != null) {\n      if (typeof ref.detach_cm === \"function\") {\n        ref.detach_cm();\n      }\n    }\n    return ShareJSCMConnector.__super__.disconnect.apply(this, arguments);\n  };\n\n  ShareJSCMConnector.prototype.destroy = function() {\n    ShareJSCMConnector.__super__.destroy.apply(this, arguments);\n    return this.cm = null;\n  };\n\n  return ShareJSCMConnector;\n\n})(ShareJSConnector);\n\nUI.registerHelper(\"sharejsCM\", new Template('sharejsCM', function() {\n  return new ShareJSCMConnector(this).create();\n}));\n","sourceMap":{"version":3,"file":"/client.coffee.js","sourceRoot":"","sources":["/packages/mizzao_sharejs-codemirror/client.coffee"],"names":[],"mappings":";AAAA,IAAA,kBAAA;EAAA;;;AAAM;;;;;;;+BACJ,UAAA,GAAY,SAAA;AACV,WAAO,KAAK,CAAC,IAAN,CAAW,KAAK,CAAC,OAAjB,EAA0B,SAAA;aAAG,QAAQ,CAAC;IAAZ,CAA1B;EADG;;+BAGZ,QAAA,GAAU,SAAC,OAAD;IACR,kDAAA,SAAA;IACA,IAAC,CAAA,EAAD,GAAU,IAAA,UAAA,CAAW,OAAX;uDACV,IAAC,CAAA,eAAgB,IAAC,CAAA;EAHV;;+BAKV,OAAA,GAAS,SAAA;IACP,IAAC,CAAA,EAAE,CAAC,QAAJ,GAAe;WACf,iDAAA,SAAA;EAFO;;+BAIT,MAAA,GAAQ,SAAC,GAAD;IACN,gDAAA,SAAA;IACA,GAAG,CAAC,SAAJ,CAAc,IAAC,CAAA,EAAf;IACA,IAAC,CAAA,EAAE,CAAC,QAAJ,GAAe;wDACf,IAAC,CAAA,gBAAiB,IAAC,CAAA;EAJb;;+BAMR,UAAA,GAAY,SAAA;AAEV,QAAA;;;WAAI,CAAE;;;WACN,oDAAA,SAAA;EAHU;;+BAKZ,OAAA,GAAS,SAAA;IACP,iDAAA,SAAA;WAGA,IAAC,CAAA,EAAD,GAAM;EAJC;;;;GAxBsB;;AA8BjC,EAAE,CAAC,cAAH,CAAkB,WAAlB,EAAmC,IAAA,QAAA,CAAS,WAAT,EAAsB,SAAA;AACvD,SAAW,IAAA,kBAAA,CAAmB,IAAnB,CAAwB,CAAC,MAAzB,CAAA;AAD4C,CAAtB,CAAnC","sourcesContent":["class ShareJSCMConnector extends ShareJSConnector\n  createView: ->\n    return Blaze.With(Blaze.getData, -> Template._sharejsCM)\n\n  rendered: (element) ->\n    super\n    @cm = new CodeMirror(element)\n    @configCallback?(@cm)\n\n  connect: ->\n    @cm.readOnly = true\n    super\n\n  attach: (doc) ->\n    super\n    doc.attach_cm(@cm)\n    @cm.readOnly = false\n    @connectCallback?(@cm)\n\n  disconnect: ->\n    # from share/webclient/cm.js\n    @doc?.detach_cm?()\n    super\n\n  destroy: ->\n    super\n    # Blaze will take it off the DOM,\n    # Nothing needs to be done explicitly to clean up.\n    @cm = null\n\nUI.registerHelper \"sharejsCM\", new Template('sharejsCM', ->\n  return new ShareJSCMConnector(this).create()\n)\n"]}}