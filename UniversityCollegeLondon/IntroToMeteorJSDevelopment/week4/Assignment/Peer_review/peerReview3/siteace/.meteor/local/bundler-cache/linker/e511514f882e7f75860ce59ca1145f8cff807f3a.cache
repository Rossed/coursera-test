[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nEasySearch = Package['easy:search'].EasySearch;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nmoment = Package['momentjs:moment'].moment;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAccountsServer = Package['accounts-base'].AccountsServer;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// siteace.js                                                          //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nvar Websites = new Mongo.Collection(\"websites\"),                       // 1\n    WebsitesIndex = new EasySearch.Index({                             //\n    collection: Websites,                                              // 3\n    fields: ['title', 'description'],                                  // 4\n    engine: new EasySearch.Minimongo()                                 // 5\n});                                                                    //\n                                                                       //\nComments = new Mongo.Collection(\"comments\");                           // 8\n                                                                       //\n// meteor --release 1.3.4.4 reset                                      //\n                                                                       //\n//Routing stuff!                                                       //\nRouter.configure({                                                     // 13\n    layoutTemplate: 'ApplicationLayout'                                // 14\n});                                                                    //\n                                                                       //\nRouter.route('/', function () {                                        // 17\n    this.render('navbar', {                                            // 18\n        to: 'navbar'                                                   // 19\n    });                                                                //\n    this.render('website_form', {                                      // 21\n        to: 'form'                                                     // 22\n    });                                                                //\n    this.render('website_list', {                                      // 24\n        to: 'main'                                                     // 25\n    });                                                                //\n    this.render('comments_list', {                                     // 27\n        to: 'comments'                                                 // 28\n    });                                                                //\n    this.render('comment_form', {                                      // 30\n        to: 'comment'                                                  // 31\n    });                                                                //\n});                                                                    //\n                                                                       //\nRouter.route('/:_id', function () {                                    // 35\n    this.render('navbar', {                                            // 36\n        to: 'navbar'                                                   // 37\n    });                                                                //\n    this.render('website_detail', {                                    // 39\n        to: 'main',                                                    // 40\n        data: function () {                                            // 41\n            return Websites.findOne({                                  // 42\n                _id: this.params._id                                   // 43\n            });                                                        //\n        }                                                              //\n    });                                                                //\n});                                                                    //\n                                                                       //\nif (Meteor.isClient) {                                                 // 49\n    /////                                                              //\n    // template helpers                                                //\n    /////                                                              //\n    Template.searchBox.helpers({                                       // 53\n        websitesIndex: function () {                                   // 54\n            return WebsitesIndex;                                      //\n        }                                                              //\n    });                                                                //\n    // helper function that returns all available websites             //\n    /*                                                                 //\n    Template.website_list.helpers({                                    //\n    \twebsites:function(){                                              //\n    \t\treturn Websites.find({});                                        //\n    \t}                                                                 //\n    });                                                                //\n    */                                                                 //\n    // format the date                                                 //\n    Template.registerHelper('formattedDate', function () {             // 65\n        return moment(this.createdOn).format(\"DD/MM/YYYY\");            // 66\n    });                                                                //\n    // helper function that returns the username for a given user ID   //\n    Template.registerHelper('getUser', function (userId) {             // 69\n        var user = Meteor.users.findOne({                              // 70\n            _id: userId                                                // 71\n        });                                                            //\n        if (user) {                                                    // 73\n            return user.username;                                      // 74\n        } else {                                                       //\n            return \"anonymous\";                                        // 77\n        }                                                              //\n    });                                                                //\n    Template.website_list.helpers({                                    // 80\n        websites: function () {                                        // 81\n            return Websites.find({}, {                                 // 82\n                sort: {                                                // 83\n                    up: -1                                             // 84\n                }                                                      //\n            });                                                        //\n        }                                                              //\n    });                                                                //\n    Template.comments_list.helpers({                                   // 89\n        comments: function () {                                        // 90\n            return Comments.find({                                     // 91\n                website: Router.current().params._id                   // 92\n            });                                                        //\n        }                                                              //\n    });                                                                //\n    //add username field                                               //\n    Accounts.ui.config({                                               // 97\n        passwordSignupFields: \"USERNAME_AND_EMAIL\"                     // 98\n    });                                                                //\n    /////                                                              //\n    // template events                                                 //\n    /////                                                              //\n    Template.ApplicationLayout.events({                                // 103\n        \"click .js-upvote\": function (event) {                         // 104\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)             //\n            var website_id = this._id;                                 // 107\n            console.log(\"Up voting website with id \" + website_id);    // 108\n            // put the code in here to add a vote to a website!        //\n            Websites.update({                                          // 110\n                _id: website_id                                        // 111\n            }, {                                                       //\n                $set: {                                                // 113\n                    up: this.up + 1                                    // 114\n                }                                                      //\n            });                                                        //\n            return false; // prevent the button from reloading the page\n        },                                                             //\n        \"click .js-downvote\": function (event) {                       // 119\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)             //\n            var website_id = this._id;                                 // 122\n            console.log(\"Down voting website with id \" + website_id);  // 123\n            // put the code in here to remove a vote from a website!   //\n            Websites.update({                                          // 125\n                _id: website_id                                        // 126\n            }, {                                                       //\n                $set: {                                                // 128\n                    down: this.down + 1                                // 129\n                }                                                      //\n            });                                                        //\n            return false; // prevent the button from reloading the page\n        }                                                              //\n    });                                                                //\n    /*                                                                 //\n    \tTemplate.website_item.events({                                    //\n    \t\t\"click .js-upvote\":function(event){                              //\n    \t\t\t// example of how you can access the id for the website in the database\n    \t\t\t// (this is the data context for the template)                  //\n    \t\t\tvar website_id = this._id;                                      //\n    \t\t\tconsole.log(\"Up voting website with id \"+website_id);           //\n    \t\t\t// put the code in here to add a vote to a website!             //\n    \t\t\tvar upvotes = $(event.currentTarget).data(\"+1\");                //\n    \t\t\tWebsites.update({_id:website_id},                               //\n                        {$set: {upvotes:upvotes+1}});                  //\n     \t\t\treturn false;// prevent the button from reloading the page     //\n    \t\t},                                                               //\n    \t\t\"click .js-downvote\":function(event){                            //\n     \t\t\t// example of how you can access the id for the website in the database\n    \t\t\t// (this is the data context for the template)                  //\n    \t\t\tvar website_id = this._id;                                      //\n    \t\t\tconsole.log(\"Down voting website with id \"+website_id);         //\n     \t\t\t// put the code in here to remove a vote from a website!       //\n     \t\t\treturn false;// prevent the button from reloading the page     //\n    \t\t}                                                                //\n    \t})                                                                //\n    */                                                                 //\n    Template.website_form.events({                                     // 162\n        \"click .js-toggle-website-form\": function (event) {            // 163\n            $(\"#website_form\").toggle('slow');                         // 164\n        },                                                             //\n        \"submit .js-save-website-form\": function (event) {             // 166\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;                          // 168\n            console.log(\"The url they entered is: \" + url);            // 169\n            //  put your website saving code in here!                  //\n            var title = event.target.title.value;                      // 171\n            var description = event.target.description.value;          // 172\n            if (Meteor.user()) {                                       // 173\n                Websites.insert({                                      // 174\n                    url: url,                                          // 175\n                    title: title,                                      // 176\n                    description: description,                          // 177\n                    createdOn: new Date(),                             // 178\n                    createdBy: Meteor.user()._id,                      // 179\n                    up: 0,                                             // 180\n                    down: 0                                            // 181\n                });                                                    //\n            }                                                          //\n            $(\"#website_form\").toggle('hide');                         // 184\n            return false; // stop the form submit from reloading the page\n        }                                                              //\n    });                                                                //\n    //commenting!                                                      //\n    Template.comment_form.events({                                     // 189\n        \"submit .js-save-comment-form\": function (event) {             // 190\n            if (Meteor.user()) {                                       // 191\n                // here is an example of how to get the comment out of the form:\n                var comment = event.target.comment.value;              // 193\n                console.log(\"The comment they entered is: \" + comment);\n                Comments.insert({                                      // 195\n                    website: Router.current().params._id,              // 196\n                    comment: comment,                                  // 197\n                    createdOn: new Date(),                             // 198\n                    user: Meteor.user().username                       // 199\n                });                                                    //\n            } else {                                                   //\n                alert('You need to be logged in to submit comments!');\n            }                                                          //\n            return false; // stop the form submit from reloading the page\n        }                                                              //\n    });                                                                //\n}                                                                      //\n                                                                       //\nif (Meteor.isServer) {                                                 // 210\n    // start up function that creates entries in the Websites databases.\n    Meteor.startup(function () {                                       // 212\n        // code to run on server at startup                            //\n        if (!Websites.findOne()) {                                     // 214\n            console.log(\"No websites yet. Creating starter data.\");    // 215\n            Websites.insert({                                          // 216\n                title: \"Goldsmiths Computing Department\",              // 217\n                url: \"http://www.gold.ac.uk/computing/\",               // 218\n                description: \"This is where this course was developed.\",\n                createdOn: new Date(),                                 // 220\n                user: \"Anonymous\",                                     // 221\n                up: 0,                                                 // 222\n                down: 0                                                // 223\n            });                                                        //\n            Websites.insert({                                          // 225\n                title: \"University of London\",                         // 226\n                url: \"http://www.londoninternational.ac.uk/courses/undergraduate/goldsmiths/bsc-creative-computing-bsc-diploma-work-entry-route\",\n                description: \"University of London International Programme.\",\n                createdOn: new Date(),                                 // 229\n                user: \"Anonymous\",                                     // 230\n                up: 0,                                                 // 231\n                down: 0                                                // 232\n            });                                                        //\n            Websites.insert({                                          // 234\n                title: \"Coursera\",                                     // 235\n                url: \"http://www.coursera.org\",                        // 236\n                description: \"Universal access to the world’s best education.\",\n                createdOn: new Date(),                                 // 238\n                user: \"Anonymous\",                                     // 239\n                up: 0,                                                 // 240\n                down: 0                                                // 241\n            });                                                        //\n            Websites.insert({                                          // 243\n                title: \"Google\",                                       // 244\n                url: \"http://www.google.com\",                          // 245\n                description: \"Popular search engine.\",                 // 246\n                createdOn: new Date(),                                 // 247\n                user: \"Anonymous\",                                     // 248\n                up: 0,                                                 // 249\n                down: 0                                                // 250\n            });                                                        //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/siteace.js","sourceMap":{"version":3,"sources":["meteor://💻app/siteace.js"],"names":[],"mappings":"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","file":"/siteace.js","sourcesContent":["const Websites = new Mongo.Collection(\"websites\")\n    , WebsitesIndex = new EasySearch.Index({\n        collection: Websites\n        , fields: ['title', 'description']\n        , engine: new EasySearch.Minimongo()\n    });\n\nComments = new Mongo.Collection(\"comments\");\n\n// meteor --release 1.3.4.4 reset\n\n//Routing stuff!\nRouter.configure({\n    layoutTemplate: 'ApplicationLayout'\n});\n\nRouter.route('/', function () {\n    this.render('navbar', {\n        to: 'navbar'\n    });\n    this.render('website_form', {\n        to: 'form'\n    });\n    this.render('website_list', {\n        to: 'main'\n    });\n    this.render('comments_list', {\n        to: 'comments'\n    });\n    this.render('comment_form', {\n        to: 'comment'\n    });\n});\n\nRouter.route('/:_id', function () {\n    this.render('navbar', {\n        to: 'navbar'\n    });\n    this.render('website_detail', {\n        to: 'main'\n        , data: function () {\n            return Websites.findOne({\n                _id: this.params._id\n            });\n        }\n    });\n});\n\nif (Meteor.isClient) {\n    /////\n    // template helpers\n    /////\n    Template.searchBox.helpers({\n        websitesIndex: () => WebsitesIndex\n    });\n    // helper function that returns all available websites\n    /*\n    Template.website_list.helpers({\n    \twebsites:function(){\n    \t\treturn Websites.find({});\n    \t}\n    });\n    */\n    // format the date\n    Template.registerHelper('formattedDate', function () {\n        return moment(this.createdOn).format(\"DD/MM/YYYY\");\n    });\n    // helper function that returns the username for a given user ID\n    Template.registerHelper('getUser', function (userId) {\n        var user = Meteor.users.findOne({\n            _id: userId\n        });\n        if (user) {\n            return user.username;\n        }\n        else {\n            return \"anonymous\";\n        }\n    });\n    Template.website_list.helpers({\n        websites: function () {\n            return Websites.find({}, {\n                sort: {\n                    up: -1\n                }\n            });\n        }\n    });\n    Template.comments_list.helpers({\n        comments: function () {\n            return Comments.find({\n                website: Router.current().params._id\n            });\n        }\n    });\n    //add username field\n    Accounts.ui.config({\n        passwordSignupFields: \"USERNAME_AND_EMAIL\"\n    });\n    /////\n    // template events\n    /////\n    Template.ApplicationLayout.events({\n            \"click .js-upvote\": function (event) {\n                // example of how you can access the id for the website in the database\n                // (this is the data context for the template)\n                var website_id = this._id;\n                console.log(\"Up voting website with id \" + website_id);\n                // put the code in here to add a vote to a website!\n                Websites.update({\n                    _id: website_id\n                }, {\n                    $set: {\n                        up: this.up + 1\n                    }\n                });\n                return false; // prevent the button from reloading the page\n            }\n            , \"click .js-downvote\": function (event) {\n                // example of how you can access the id for the website in the database\n                // (this is the data context for the template)\n                var website_id = this._id;\n                console.log(\"Down voting website with id \" + website_id);\n                // put the code in here to remove a vote from a website!\n                Websites.update({\n                    _id: website_id\n                }, {\n                    $set: {\n                        down: this.down + 1\n                    }\n                });\n                return false; // prevent the button from reloading the page\n            }\n        })\n        /*\n        \tTemplate.website_item.events({\n        \t\t\"click .js-upvote\":function(event){\n        \t\t\t// example of how you can access the id for the website in the database\n        \t\t\t// (this is the data context for the template)\n        \t\t\tvar website_id = this._id;\n        \t\t\tconsole.log(\"Up voting website with id \"+website_id);\n        \t\t\t// put the code in here to add a vote to a website!\n        \t\t\tvar upvotes = $(event.currentTarget).data(\"+1\");\n        \t\t\tWebsites.update({_id:website_id},\n                            {$set: {upvotes:upvotes+1}});\n\n        \t\t\treturn false;// prevent the button from reloading the page\n        \t\t},\n        \t\t\"click .js-downvote\":function(event){\n\n        \t\t\t// example of how you can access the id for the website in the database\n        \t\t\t// (this is the data context for the template)\n        \t\t\tvar website_id = this._id;\n        \t\t\tconsole.log(\"Down voting website with id \"+website_id);\n\n        \t\t\t// put the code in here to remove a vote from a website!\n\n        \t\t\treturn false;// prevent the button from reloading the page\n        \t\t}\n        \t})\n        */\n    Template.website_form.events({\n        \"click .js-toggle-website-form\": function (event) {\n            $(\"#website_form\").toggle('slow');\n        }\n        , \"submit .js-save-website-form\": function (event) {\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;\n            console.log(\"The url they entered is: \" + url);\n            //  put your website saving code in here!\n            var title = event.target.title.value;\n            var description = event.target.description.value;\n            if (Meteor.user()) {\n                Websites.insert({\n                    url: url\n                    , title: title\n                    , description: description\n                    , createdOn: new Date()\n                    , createdBy: Meteor.user()._id\n                    , up: 0\n                    , down: 0\n                });\n            }\n            $(\"#website_form\").toggle('hide');\n            return false; // stop the form submit from reloading the page\n        }\n    });\n    //commenting!\n    Template.comment_form.events({\n        \"submit .js-save-comment-form\": function (event) {\n            if (Meteor.user()) {\n                // here is an example of how to get the comment out of the form:\n                var comment = event.target.comment.value;\n                console.log(\"The comment they entered is: \" + comment);\n                Comments.insert({\n                    website: Router.current().params._id\n                    , comment: comment\n                    , createdOn: new Date()\n                    , user: Meteor.user().username\n                });\n            }\n            else {\n                alert('You need to be logged in to submit comments!');\n            }\n            return false; // stop the form submit from reloading the page\n        }\n    });\n}\n\nif (Meteor.isServer) {\n    // start up function that creates entries in the Websites databases.\n    Meteor.startup(function () {\n        // code to run on server at startup\n        if (!Websites.findOne()) {\n            console.log(\"No websites yet. Creating starter data.\");\n            Websites.insert({\n                title: \"Goldsmiths Computing Department\"\n                , url: \"http://www.gold.ac.uk/computing/\"\n                , description: \"This is where this course was developed.\"\n                , createdOn: new Date()\n                , user: \"Anonymous\"\n                , up: 0\n                , down: 0\n            });\n            Websites.insert({\n                title: \"University of London\"\n                , url: \"http://www.londoninternational.ac.uk/courses/undergraduate/goldsmiths/bsc-creative-computing-bsc-diploma-work-entry-route\"\n                , description: \"University of London International Programme.\"\n                , createdOn: new Date()\n                , user: \"Anonymous\"\n                , up: 0\n                , down: 0\n            });\n            Websites.insert({\n                title: \"Coursera\"\n                , url: \"http://www.coursera.org\"\n                , description: \"Universal access to the world’s best education.\"\n                , createdOn: new Date()\n                , user: \"Anonymous\"\n                , up: 0\n                , down: 0\n            });\n            Websites.insert({\n                title: \"Google\"\n                , url: \"http://www.google.com\"\n                , description: \"Popular search engine.\"\n                , createdOn: new Date()\n                , user: \"Anonymous\"\n                , up: 0\n                , down: 0\n            });\n        }\n    });\n}"]}}]