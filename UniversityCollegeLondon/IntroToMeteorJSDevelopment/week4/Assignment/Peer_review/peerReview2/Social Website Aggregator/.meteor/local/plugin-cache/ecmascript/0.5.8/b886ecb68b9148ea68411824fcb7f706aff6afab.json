{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_AND_EMAIL\"\n});\n\nRouter.configure({\n    layoutTemplate: 'ApplicationLayout'\n});\n\nRouter.route('/', function () {\n    this.render('navbar', {\n        to: 'navbar' // The name of the main placeholder in applicationLayout\n    });\n    this.render('website_form', {\n        to: 'form'\n    });\n\n    this.render('website_item', {\n        to: 'main',\n        data: function () {\n            function data() {\n                return Websites.findOne({ _id: this.params._id });\n            }\n\n            return data;\n        }()\n    });\n});\n\nTemplate.website_item.events({\n    \"click .js-upvote\": function () {\n        function clickJsUpvote(event) {\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Up voting website with id \" + website_id);\n            // put the code in here to add a vote to a website!\n\n            return false; // prevent the button from reloading the page\n        }\n\n        return clickJsUpvote;\n    }(),\n    \"click .js-downvote\": function () {\n        function clickJsDownvote(event) {\n\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Down voting website with id \" + website_id);\n\n            // put the code in here to remove a vote from a website!\n\n            return false; // prevent the button from reloading the page\n        }\n\n        return clickJsDownvote;\n    }()\n});\n\nTemplate.website_form.events({\n    \"click .js-toggle-website-form\": function () {\n        function clickJsToggleWebsiteForm(event) {\n            $(\"#website_form\").toggle('slow');\n        }\n\n        return clickJsToggleWebsiteForm;\n    }(),\n    \"submit .js-save-website-form\": function () {\n        function submitJsSaveWebsiteForm(event) {\n\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;\n            console.log(\"The url they entered is: \" + url);\n\n            //  put your website saving code in here!\n            Meteor.call(\"getWebsiteData\", url, function (error, results) {\n\n                // Dump the markup into a dummy element for jQuery manipulation\n                var el = $('');\n                el.html(results.content);\n\n                // Get the meta data\n                var title = $('title', el).text();\n                var description = $('meta[name=\"description\"]', el).attr('content');\n\n                // Add the new website in the Websites collection\n                Websites.insert({\n                    title: title,\n                    url: url,\n                    description: description,\n                    createdOn: new Date(),\n                    user: \"Anonymous\", // Use Meteor.user()._id in main.js\n                    up: 0,\n                    down: 0\n                });\n            });\n\n            return false; // stop the form submit from reloading the page\n        }\n\n        return submitJsSaveWebsiteForm;\n    }()\n});\n\nTemplate.ApplicationLayout.events({\n    \"click .js-upvote\": function () {\n        function clickJsUpvote(event) {\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Up voting website with id \" + website_id);\n\n            // put the code in here to add a vote to a website!\n            Websites.update({ _id: website_id }, { $set: { up: this.up + 1 } });\n\n            return false; // prevent the button from reloading the page\n        }\n\n        return clickJsUpvote;\n    }(),\n    \"click .js-downvote\": function () {\n        function clickJsDownvote(event) {\n\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Down voting website with id \" + website_id);\n\n            // put the code in here to remove a vote from a website!\n            Websites.update({ _id: website_id }, { $set: { down: this.down + 1 } });\n\n            return false; // prevent the button from reloading the page\n        }\n\n        return clickJsDownvote;\n    }()\n});\n\n// format the date\nTemplate.registerHelper('formattedDate', function () {\n    return moment(this.createdOn).format(\"MM/DD/YYYY\"); // or whatever format you prefer\n});\n\nTemplate.website_list.helpers({\n    websites: function () {\n        function websites() {\n            return Websites.find({}, { sort: { up: -1 } });\n        }\n\n        return websites;\n    }()\n});","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":"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","file":"/client/main.js.map","sourcesContent":["Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_AND_EMAIL\"\n});\n\n\nRouter.configure({\n    layoutTemplate: 'ApplicationLayout'\n});\n\nRouter.route('/', function () {\n    this.render('navbar', {\n        to: 'navbar' // The name of the main placeholder in applicationLayout\n    });\n    this.render('website_form', {\n        to: 'form'\n    });\n    \n    this.render('website_item', {\n        to: 'main',\n        data: function() {\n            return Websites.findOne({_id: this.params._id});\n        }\n    });\n});\n\nTemplate.website_item.events({\n        \"click .js-upvote\":function(event){\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Up voting website with id \"+website_id);\n            // put the code in here to add a vote to a website!\n\n            return false;// prevent the button from reloading the page\n        }, \n        \"click .js-downvote\":function(event){\n\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Down voting website with id \"+website_id);\n\n            // put the code in here to remove a vote from a website!\n\n            return false;// prevent the button from reloading the page\n        }\n    })\n\nTemplate.website_form.events({\n        \"click .js-toggle-website-form\":function(event){\n            $(\"#website_form\").toggle('slow');\n        }, \n        \"submit .js-save-website-form\":function(event){\n\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;\n            console.log(\"The url they entered is: \"+url);\n            \n            //  put your website saving code in here! \n         Meteor.call(\"getWebsiteData\", url, function(error, results) {\n\n            // Dump the markup into a dummy element for jQuery manipulation\n            var el = $('');\n            el.html(results.content);\n\n            // Get the meta data\n            var title = $('title', el).text();\n            var description = $('meta[name=\"description\"]', el).attr('content');\n\n            // Add the new website in the Websites collection\n            Websites.insert({\n                title: title, \n                url: url, \n                description: description, \n                createdOn:new Date(),\n                user: \"Anonymous\", // Use Meteor.user()._id in main.js\n                up: 0,\n                down: 0\n            })\n        });             \n\n            return false;// stop the form submit from reloading the page\n\n        }\n    });\n\nTemplate.ApplicationLayout.events({\n    \"click .js-upvote\":function(event){\n        // example of how you can access the id for the website in the database\n        // (this is the data context for the template)\n        var website_id = this._id;\n        console.log(\"Up voting website with id \"+website_id);\n\n        // put the code in here to add a vote to a website!\n        Websites.update({_id: website_id},\n                        {$set: {up: this.up + 1}});\n\n        return false;// prevent the button from reloading the page\n    }, \n    \"click .js-downvote\":function(event){\n\n        // example of how you can access the id for the website in the database\n        // (this is the data context for the template)\n        var website_id = this._id;\n        console.log(\"Down voting website with id \"+website_id);\n\n        // put the code in here to remove a vote from a website!\n        Websites.update({_id: website_id},\n                        {$set: {down: this.down + 1}});\n\n        return false;// prevent the button from reloading the page\n    }\n})\n   \n// format the date\nTemplate.registerHelper('formattedDate', function() {\n     return moment(this.createdOn).format(\"MM/DD/YYYY\");  // or whatever format you prefer\n});\n\nTemplate.website_list.helpers({\n    websites:function(){\n        return Websites.find({}, {sort: {up:-1}});\n    }\n});"]},"hash":"b886ecb68b9148ea68411824fcb7f706aff6afab"}
