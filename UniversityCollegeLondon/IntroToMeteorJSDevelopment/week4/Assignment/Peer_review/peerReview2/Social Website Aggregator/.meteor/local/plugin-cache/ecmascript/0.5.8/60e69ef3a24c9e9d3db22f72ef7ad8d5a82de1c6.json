{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"Router.configure({\n    layoutTemplate: 'AppLayout'\n});\n\nRouter.route('/', function () {\n    this.render('navbar', {\n        to: 'navbar'\n    });\n\n    this.render('welcome', {\n        to: 'main'\n    });\n\n    this.render('website_list', {\n        to: 'list'\n    });\n\n    this.render('website_form', {\n        to: 'form'\n    });\n});\n\nRouter.route('/website_item/:_id', function () {\n    this.render('navbar', {\n        to: 'navbar'\n    });\n\n    this.render('website', {\n        to: 'main',\n        data: function () {\n            function data() {\n                return Websites.findOne({ _id: this.params._id });\n            }\n\n            return data;\n        }()\n    });\n});\n\n// helper function that returns all available websites\nTemplate.website_list.helpers({\n    websites: function () {\n        function websites() {\n            return Websites.find({}, { sort: { ratingUp: -1 } });\n        }\n\n        return websites;\n    }()\n});\n\n//helper function that returns loggedin user's username\nTemplate.welcome.helpers({\n    username: function () {\n        function username() {\n            if (Meteor.user()) {\n                return Meteor.user().emails[0].address;\n            } else {\n                return 'anonymous internet user';\n            }\n        }\n\n        return username;\n    }()\n});\n\nTemplate.website_list.helpers({\n    comments: function () {\n        function comments() {\n            return Websites.find({});\n        }\n\n        return comments;\n    }()\n});\n\n/////\n// template events\n/////\n\nTemplate.website_item.events({\n    \"click .js-upvote\": function () {\n        function clickJsUpvote(event) {\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            // put the code in here to add a vote to a website!\n            var ratingUp = this.ratingUp;\n            if (Meteor.user()) {\n                Websites.update({ _id: website_id }, { $inc: { ratingUp: 1 } });\n            }\n            return false; // prevent the button from reloading the page\n        }\n\n        return clickJsUpvote;\n    }(),\n    \"click .js-downvote\": function () {\n        function clickJsDownvote(event) {\n\n            var website_id = this._id;\n            // put the code in here to remove a vote from a website!\n            var ratingDown = this.ratingDown;\n            if (Meteor.user()) {\n                Websites.update({ _id: website_id }, { $inc: { ratingDown: 1 } });\n            }\n            return false;\n        }\n\n        return clickJsDownvote;\n    }()\n});\n\nTemplate.website.events({\n    \"click .js-add-comment\": function () {\n        function clickJsAddComment(event) {\n            var commentForm = $('#comment');\n            var website_id = this._id;\n            // put the code in here to add a comment to a website!\n            var comment = $('textarea')[0].value;\n            if (Meteor.user()) {\n                Websites.update({ _id: website_id }, { $push: { comments: { comment: comment, createdOn: new Date().toLocaleString() } } });\n                commentForm.reset();\n            }\n            return false;\n        }\n\n        return clickJsAddComment;\n    }(),\n    \"click .js-upvote\": function () {\n        function clickJsUpvote(event) {\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            // put the code in here to add a vote to a website!\n            var ratingUp = this.ratingUp;\n            if (Meteor.user()) {\n                Websites.update({ _id: website_id }, { $inc: { ratingUp: 1 } });\n            }\n            return false; // prevent the button from reloading the page\n        }\n\n        return clickJsUpvote;\n    }(),\n    \"click .js-downvote\": function () {\n        function clickJsDownvote(event) {\n\n            var website_id = this._id;\n            // put the code in here to remove a vote from a website!\n            var ratingDown = this.ratingDown;\n            if (Meteor.user()) {\n                Websites.update({ _id: website_id }, { $inc: { ratingDown: 1 } });\n            }\n            return false;\n        }\n\n        return clickJsDownvote;\n    }()\n});\n\nTemplate.website_form.events({\n    \"click .js-toggle-website-form\": function () {\n        function clickJsToggleWebsiteForm(event) {\n            $(\"#website_form\").toggle('slow');\n        }\n\n        return clickJsToggleWebsiteForm;\n    }(),\n\n    \"click .js-toggle-website-form-submit\": function () {\n        function clickJsToggleWebsiteFormSubmit(event) {\n            $(\"#website_form\").toggle('slow');\n        }\n\n        return clickJsToggleWebsiteFormSubmit;\n    }(),\n\n    \"submit .js-save-website-form\": function () {\n        function submitJsSaveWebsiteForm(event) {\n\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;\n            var title = event.target.title.value;\n            var description = event.target.description.value;\n            //  put your website saving code in here!\n            if (Meteor.user()) {\n                Websites.insert({\n                    title: title,\n                    url: url,\n                    description: description,\n                    createdOn: new Date().toLocaleString(),\n                    ratingUp: 0,\n                    ratingDown: 0\n                });\n            }\n            return false; // stop the form submit from reloading the page\n        }\n\n        return submitJsSaveWebsiteForm;\n    }()\n});","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":"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","file":"/client/main.js.map","sourcesContent":["Router.configure({\n        layoutTemplate: 'AppLayout'\n    });\n\n    Router.route('/', function () {\n        this.render('navbar', {\n            to:'navbar'\n        });\n\n        this.render('welcome', {\n        to:'main'\n      });\n\n        this.render('website_list', {\n            to:'list'\n        });\n\n        this.render('website_form', {\n        to:'form'\n      });\n    });\n\n    Router.route('/website_item/:_id', function () {\n        this.render('navbar', {\n            to:'navbar'\n        });\n\n        this.render('website', {\n            to:'main',\n            data: function() {\n                return Websites.findOne({_id: this.params._id});\n            }\n        });\n    });\n\n    // helper function that returns all available websites\n    Template.website_list.helpers({\n        websites:function(){\n            return Websites.find({}, {sort: {ratingUp:-1}});\n        },\n    });\n\n    //helper function that returns loggedin user's username\n  Template.welcome.helpers({\n            username: function() {\n                if(Meteor.user()) {\n                    return Meteor.user().emails[0].address;\n                } else {\n                    return 'anonymous internet user';\n                }\n        }\n    });\n\n    Template.website_list.helpers({\n        comments:function(){\n            return Websites.find({});\n        },\n    });\n\n    /////\n    // template events\n    /////\n\n    Template.website_item.events({\n        \"click .js-upvote\":function(event){\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            // put the code in here to add a vote to a website!\n            var ratingUp = this.ratingUp;\n            if(Meteor.user()) {\n                Websites.update({_id:website_id}, {$inc: {ratingUp: 1}});\n          }\n            return false;// prevent the button from reloading the page\n        },\n        \"click .js-downvote\":function(event){\n\n\n            var website_id = this._id;\n            // put the code in here to remove a vote from a website!\n            var ratingDown = this.ratingDown;\n            if(Meteor.user()) {\n                Websites.update({_id:website_id}, {$inc: {ratingDown: 1}});\n          }\n            return false;\n        }\n    });\n\n    Template.website.events({\n        \"click .js-add-comment\":function(event){\n            var commentForm = $('#comment');\n            var website_id = this._id;\n            // put the code in here to add a comment to a website!\n            var comment = $('textarea')[0].value;\n            if(Meteor.user()) {\n                Websites.update({_id:website_id}, {$push: {comments: {comment:comment, createdOn:new Date().toLocaleString()}}});\n                commentForm.reset();        \n            }\n            return false;\n        },\n        \"click .js-upvote\":function(event){\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            // put the code in here to add a vote to a website!\n            var ratingUp = this.ratingUp;\n            if(Meteor.user()) {\n                Websites.update({_id:website_id}, {$inc: {ratingUp: 1}});\n          }\n            return false;// prevent the button from reloading the page\n        },\n        \"click .js-downvote\":function(event){\n\n\n            var website_id = this._id;\n            // put the code in here to remove a vote from a website!\n            var ratingDown = this.ratingDown;\n            if(Meteor.user()) {\n                Websites.update({_id:website_id}, {$inc: {ratingDown: 1}});\n          }\n            return false;\n        }\n    });\n\n\n\n    Template.website_form.events({\n        \"click .js-toggle-website-form\":function(event){\n            $(\"#website_form\").toggle('slow');\n        },\n\n        \"click .js-toggle-website-form-submit\":function(event){\n            $(\"#website_form\").toggle('slow');\n        },\n\n        \"submit .js-save-website-form\":function(event){\n\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;\n            var title = event.target.title.value;\n            var description = event.target.description.value;\n            //  put your website saving code in here!\n            if(Meteor.user()) {\n                Websites.insert({\n                    title: title,\n                    url: url,\n                    description: description,\n                    createdOn:new Date().toLocaleString(),\n                    ratingUp:0,\n                    ratingDown:0\n                });\n            }\n            return false;// stop the form submit from reloading the page\n\n        }\n    });\n\n\n\n"]},"hash":"60e69ef3a24c9e9d3db22f72ef7ad8d5a82de1c6"}
