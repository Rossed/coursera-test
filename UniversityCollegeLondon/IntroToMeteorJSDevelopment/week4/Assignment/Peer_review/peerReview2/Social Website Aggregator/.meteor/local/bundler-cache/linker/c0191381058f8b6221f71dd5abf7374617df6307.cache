[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nHTTP = Package.http.HTTP;\nmoment = Package['momentjs:moment'].moment;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// client/template.main.js                                                                         //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\n                                                                                                   // 1\nTemplate.body.addContent((function() {                                                             // 2\n  var view = this;                                                                                 // 3\n  return \"\";                                                                                       // 4\n}));                                                                                               // 5\nMeteor.startup(Template.body.renderToDocument);                                                    // 6\n                                                                                                   // 7\nTemplate.__checkName(\"ApplicationLayout\");                                                         // 8\nTemplate[\"ApplicationLayout\"] = new Template(\"Template.ApplicationLayout\", (function() {           // 9\n  var view = this;                                                                                 // 10\n  return [ Blaze._TemplateWith(function() {                                                        // 11\n    return \"navbar\";                                                                               // 12\n  }, function() {                                                                                  // 13\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                        // 14\n  }), \"\\n    \", HTML.DIV({                                                                         // 15\n    \"class\": \"container\"                                                                           // 16\n  }, \"\\n        \", Blaze._TemplateWith(function() {                                                // 17\n    return \"form\";                                                                                 // 18\n  }, function() {                                                                                  // 19\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                        // 20\n  }), \"\\n        \", Blaze._TemplateWith(function() {                                               // 21\n    return \"main\";                                                                                 // 22\n  }, function() {                                                                                  // 23\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                        // 24\n  }), \"\\n        \", Blaze._TemplateWith(function() {                                               // 25\n    return \"comments\";                                                                             // 26\n  }, function() {                                                                                  // 27\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                        // 28\n  }), \"\\n        \", Blaze._TemplateWith(function() {                                               // 29\n    return \"comment\";                                                                              // 30\n  }, function() {                                                                                  // 31\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                        // 32\n  }), \"\\n    \") ];                                                                                 // 33\n}));                                                                                               // 34\n                                                                                                   // 35\nTemplate.__checkName(\"navbar\");                                                                    // 36\nTemplate[\"navbar\"] = new Template(\"Template.navbar\", (function() {                                 // 37\n  var view = this;                                                                                 // 38\n  return HTML.NAV({                                                                                // 39\n    \"class\": \"navbar navbar-default\"                                                               // 40\n  }, \"\\n      \", HTML.DIV({                                                                        // 41\n    \"class\": \"container-fluid\"                                                                     // 42\n  }, \"\\n        \", HTML.Raw('<div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"/\">Site Ace </a>\\n        </div>'), \"\\n          \", Blaze._TemplateWith(function() {\n    return {                                                                                       // 44\n      align: Spacebars.call(\"right\")                                                               // 45\n    };                                                                                             // 46\n  }, function() {                                                                                  // 47\n    return Spacebars.include(view.lookupTemplate(\"loginButtons\"));                                 // 48\n  }), \"\\n      \"), \"\\n    \");                                                                      // 49\n}));                                                                                               // 50\n                                                                                                   // 51\nTemplate.__checkName(\"website_form\");                                                              // 52\nTemplate[\"website_form\"] = new Template(\"Template.website_form\", (function() {                     // 53\n  var view = this;                                                                                 // 54\n  return HTML.Raw('<a class=\"btn btn-default toggle-website-form js-toggle-website-form\" href=\"#\">\\n          <span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\\n    </a>\\n    <div id=\"website_form\" class=\"hidden_div\">\\n        <form class=\"js-save-website-form\">\\n          <div class=\"form-group\">\\n            <label for=\"url\">Site address</label>\\n            <input type=\"text\" class=\"form-control\" id=\"url\" placeholder=\"http://www.mysite.com\">\\n          </div>\\n          <button type=\"submit\" class=\"btn btn-default\">Submit</button>\\n        </form>\\n    </div>');\n}));                                                                                               // 56\n                                                                                                   // 57\nTemplate.__checkName(\"website_list\");                                                              // 58\nTemplate[\"website_list\"] = new Template(\"Template.website_list\", (function() {                     // 59\n  var view = this;                                                                                 // 60\n  return HTML.OL(\"\\n    \", Blaze.Each(function() {                                                 // 61\n    return Spacebars.call(view.lookup(\"websites\"));                                                // 62\n  }, function() {                                                                                  // 63\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"website_item\")), \"\\n    \" ];         // 64\n  }), \"\\n    \");                                                                                   // 65\n}));                                                                                               // 66\n                                                                                                   // 67\nTemplate.__checkName(\"website_item\");                                                              // 68\nTemplate[\"website_item\"] = new Template(\"Template.website_item\", (function() {                     // 69\n  var view = this;                                                                                 // 70\n  return HTML.LI(\"\\n    \", HTML.A({                                                                // 71\n    href: function() {                                                                             // 72\n      return Spacebars.mustache(view.lookup(\"_id\"));                                               // 73\n    }                                                                                              // 74\n  }, Blaze.View(\"lookup:title\", function() {                                                       // 75\n    return Spacebars.mustache(view.lookup(\"title\"));                                               // 76\n  }), \" \"), \"\\n    \", HTML.P(\"\\n        \", Blaze.View(\"lookup:description\", function() {           // 77\n    return Spacebars.mustache(view.lookup(\"description\"));                                         // 78\n  }), \"\\n    \"), HTML.Raw('\\n    <a href=\"#\" class=\"btn btn-default js-upvote\">\\n        <span class=\"glyphicon glyphicon-arrow-up\" aria-hidden=\"true\"></span>\\n    </a>\\n    <a href=\"#\" class=\"btn btn-default js-downvote\">\\n        <span class=\"glyphicon glyphicon-arrow-down\" aria-hidden=\"true\"></span>\\n    </a>\\n    <!-- you will be putting your up and down vote buttons in here! -->\\n    '), HTML.P({\n    \"class\": \"website-meta\"                                                                        // 80\n  }, \"Votes: \", HTML.SPAN({                                                                        // 81\n    \"class\": \"js-votes-up\"                                                                         // 82\n  }, Blaze.View(\"lookup:up\", function() {                                                          // 83\n    return Spacebars.mustache(view.lookup(\"up\"));                                                  // 84\n  })), \"↑, \", HTML.SPAN({                                                                          // 85\n    \"class\": \"js-votes-down\"                                                                       // 86\n  }, Blaze.View(\"lookup:down\", function() {                                                        // 87\n    return Spacebars.mustache(view.lookup(\"down\"));                                                // 88\n  })), \"↓\"), \"\\n\");                                                                                // 89\n}));                                                                                               // 90\n                                                                                                   // 91\nTemplate.__checkName(\"comments_list\");                                                             // 92\nTemplate[\"comments_list\"] = new Template(\"Template.comments_list\", (function() {                   // 93\n  var view = this;                                                                                 // 94\n  return [ HTML.Raw(\"<h3>Comments</h3>\\n    \"), HTML.OL(\"\\n        \", Blaze.Each(function() {      // 95\n    return Spacebars.call(view.lookup(\"comments\"));                                                // 96\n  }, function() {                                                                                  // 97\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"comment_item\")), \"\\n        \" ];\n  }), \"\\n    \") ];                                                                                 // 99\n}));                                                                                               // 100\n                                                                                                   // 101\nTemplate.__checkName(\"comment_item\");                                                              // 102\nTemplate[\"comment_item\"] = new Template(\"Template.comment_item\", (function() {                     // 103\n  var view = this;                                                                                 // 104\n  return HTML.LI(\"\\n        \", Blaze.View(\"lookup:comment\", function() {                           // 105\n    return Spacebars.mustache(view.lookup(\"comment\"));                                             // 106\n  }), \"\\n        \", HTML.P({                                                                       // 107\n    \"class\": \"comment-meta\"                                                                        // 108\n  }, Blaze.View(\"lookup:formattedDate\", function() {                                               // 109\n    return Spacebars.mustache(view.lookup(\"formattedDate\"));                                       // 110\n  }), \" by \", Blaze.View(\"lookup:getUser\", function() {                                            // 111\n    return Spacebars.mustache(view.lookup(\"getUser\"), view.lookup(\"user\"));                        // 112\n  })), \"\\n    \");                                                                                  // 113\n}));                                                                                               // 114\n                                                                                                   // 115\nTemplate.__checkName(\"comment_form\");                                                              // 116\nTemplate[\"comment_form\"] = new Template(\"Template.comment_form\", (function() {                     // 117\n  var view = this;                                                                                 // 118\n  return HTML.Raw('<div id=\"comment_form\">\\n        <form class=\"js-save-comment-form\">\\n          <div class=\"form-group\">\\n            <input type=\"text\" class=\"form-control\" id=\"comment\" placeholder=\"Type your comment here...\">\\n          </div>\\n\\n          <button type=\"submit\" class=\"btn btn-default\">Submit</button>\\n        </form>\\n    </div>');\n}));                                                                                               // 120\n                                                                                                   // 121\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// client/main.js                                                                                  //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nAccounts.ui.config({                                                                               // 1\n    passwordSignupFields: \"USERNAME_AND_EMAIL\"                                                     // 2\n});                                                                                                // 1\n                                                                                                   //\nRouter.configure({                                                                                 // 6\n    layoutTemplate: 'ApplicationLayout'                                                            // 7\n});                                                                                                // 6\n                                                                                                   //\nRouter.route('/', function () {                                                                    // 10\n    this.render('navbar', {                                                                        // 11\n        to: 'navbar' // The name of the main placeholder in applicationLayout                      // 12\n    });                                                                                            // 11\n    this.render('website_form', {                                                                  // 14\n        to: 'form'                                                                                 // 15\n    });                                                                                            // 14\n                                                                                                   //\n    this.render('website_item', {                                                                  // 18\n        to: 'main',                                                                                // 19\n        data: function () {                                                                        // 20\n            function data() {                                                                      // 20\n                return Websites.findOne({ _id: this.params._id });                                 // 21\n            }                                                                                      // 22\n                                                                                                   //\n            return data;                                                                           // 20\n        }()                                                                                        // 20\n    });                                                                                            // 18\n    this.render('comments_list', {                                                                 // 24\n        to: 'comments'                                                                             // 25\n    });                                                                                            // 24\n    this.render('comment_form', {                                                                  // 27\n        to: 'comment'                                                                              // 28\n    });                                                                                            // 27\n});                                                                                                // 30\n                                                                                                   //\nTemplate.website_item.events({                                                                     // 32\n    \"click .js-upvote\": function () {                                                              // 33\n        function clickJsUpvote(event) {                                                            // 33\n            // example of how you can access the id for the website in the database                //\n            // (this is the data context for the template)                                         //\n            var website_id = this._id;                                                             // 36\n            console.log(\"Up voting website with id \" + website_id);                                // 37\n            // put the code in here to add a vote to a website!                                    //\n                                                                                                   //\n            return false; // prevent the button from reloading the page                            // 40\n        }                                                                                          // 41\n                                                                                                   //\n        return clickJsUpvote;                                                                      // 33\n    }(),                                                                                           // 33\n    \"click .js-downvote\": function () {                                                            // 42\n        function clickJsDownvote(event) {                                                          // 42\n                                                                                                   //\n            // example of how you can access the id for the website in the database                //\n            // (this is the data context for the template)                                         //\n            var website_id = this._id;                                                             // 46\n            console.log(\"Down voting website with id \" + website_id);                              // 47\n                                                                                                   //\n            // put the code in here to remove a vote from a website!                               //\n                                                                                                   //\n            return false; // prevent the button from reloading the page                            // 51\n        }                                                                                          // 52\n                                                                                                   //\n        return clickJsDownvote;                                                                    // 42\n    }()                                                                                            // 42\n});                                                                                                // 32\n                                                                                                   //\nTemplate.website_form.events({                                                                     // 55\n    \"click .js-toggle-website-form\": function () {                                                 // 56\n        function clickJsToggleWebsiteForm(event) {                                                 // 56\n            $(\"#website_form\").toggle('slow');                                                     // 57\n        }                                                                                          // 58\n                                                                                                   //\n        return clickJsToggleWebsiteForm;                                                           // 56\n    }(),                                                                                           // 56\n    \"submit .js-save-website-form\": function () {                                                  // 59\n        function submitJsSaveWebsiteForm(event) {                                                  // 59\n                                                                                                   //\n            if (Meteor.user()) {                                                                   // 61\n                Meteor.user().username;                                                            // 62\n            } else {                                                                               // 63\n                alert('You need to be logged in to submit websites!');                             // 65\n            }                                                                                      // 66\n                                                                                                   //\n            return false;                                                                          // 68\n                                                                                                   //\n            // here is an example of how to get the url out of the form:                           //\n            var url = event.target.url.value;                                                      // 72\n            console.log(\"The url they entered is: \" + url);                                        // 73\n                                                                                                   //\n            //  put your website saving code in here!                                              //\n            Meteor.call(\"getWebsiteData\", url, function (error, results) {                         // 76\n                                                                                                   //\n                // Dump the markup into a dummy element for jQuery manipulation                    //\n                var el = $('');                                                                    // 79\n                el.html(results.content);                                                          // 80\n                                                                                                   //\n                // Get the meta data                                                               //\n                var title = $('title', el).text();                                                 // 83\n                var description = $('meta[name=\"description\"]', el).attr('content');               // 84\n                                                                                                   //\n                // Add the new website in the Websites collection                                  //\n                Websites.insert({                                                                  // 87\n                    title: title,                                                                  // 88\n                    url: url,                                                                      // 89\n                    description: description,                                                      // 90\n                    createdOn: new Date(),                                                         // 91\n                    user: \"Anonymous\", // Use Meteor.user()._id in main.js                         // 92\n                    up: 0,                                                                         // 93\n                    down: 0                                                                        // 94\n                });                                                                                // 87\n            });                                                                                    // 96\n                                                                                                   //\n            return false; // stop the form submit from reloading the page                          // 98\n        }                                                                                          // 100\n                                                                                                   //\n        return submitJsSaveWebsiteForm;                                                            // 59\n    }()                                                                                            // 59\n});                                                                                                // 55\n                                                                                                   //\nTemplate.ApplicationLayout.events({                                                                // 103\n    \"click .js-upvote\": function () {                                                              // 104\n        function clickJsUpvote(event) {                                                            // 104\n            // example of how you can access the id for the website in the database                //\n            // (this is the data context for the template)                                         //\n            var website_id = this._id;                                                             // 107\n            console.log(\"Up voting website with id \" + website_id);                                // 108\n                                                                                                   //\n            // put the code in here to add a vote to a website!                                    //\n            Websites.update({ _id: website_id }, { $set: { up: this.up + 1 } });                   // 111\n                                                                                                   //\n            return false; // prevent the button from reloading the page                            // 114\n        }                                                                                          // 115\n                                                                                                   //\n        return clickJsUpvote;                                                                      // 104\n    }(),                                                                                           // 104\n    \"click .js-downvote\": function () {                                                            // 116\n        function clickJsDownvote(event) {                                                          // 116\n                                                                                                   //\n            // example of how you can access the id for the website in the database                //\n            // (this is the data context for the template)                                         //\n            var website_id = this._id;                                                             // 120\n            console.log(\"Down voting website with id \" + website_id);                              // 121\n                                                                                                   //\n            // put the code in here to remove a vote from a website!                               //\n            Websites.update({ _id: website_id }, { $set: { down: this.down + 1 } });               // 124\n                                                                                                   //\n            return false; // prevent the button from reloading the page                            // 127\n        }                                                                                          // 128\n                                                                                                   //\n        return clickJsDownvote;                                                                    // 116\n    }()                                                                                            // 116\n});                                                                                                // 103\n                                                                                                   //\n// format the date                                                                                 //\nTemplate.registerHelper('formattedDate', function () {                                             // 132\n    return moment(this.createdOn).format(\"MM/DD/YYYY\"); // or whatever format you prefer           // 133\n});                                                                                                // 134\n                                                                                                   //\nTemplate.website_list.helpers({                                                                    // 136\n    websites: function () {                                                                        // 137\n        function websites() {                                                                      // 137\n            return Websites.find({}, { sort: { up: -1 } });                                        // 138\n        }                                                                                          // 139\n                                                                                                   //\n        return websites;                                                                           // 137\n    }()                                                                                            // 137\n});                                                                                                // 136\n                                                                                                   //\nTemplate.registerHelper('getUser', function (userId) {                                             // 142\n    var user = Meteor.users.findOne({ _id: userId });                                              // 143\n    if (user) {                                                                                    // 144\n        return user.username;                                                                      // 145\n    } else {                                                                                       // 146\n        return \"anonymous\";                                                                        // 148\n    }                                                                                              // 149\n});                                                                                                // 150\nTemplate.comment_form.events({                                                                     // 151\n    \"submit .js-save-comment-form\": function () {                                                  // 152\n        function submitJsSaveCommentForm(event) {                                                  // 152\n                                                                                                   //\n            if (Meteor.user()) {                                                                   // 154\n                                                                                                   //\n                // here is an example of how to get the comment out of the form:                   //\n                var comment = event.target.comment.value;                                          // 157\n                console.log(\"The comment they entered is: \" + comment);                            // 158\n                                                                                                   //\n                Comments.insert({                                                                  // 160\n                    website: Router.current().params._id,                                          // 161\n                    comment: comment,                                                              // 162\n                    createdOn: new Date(),                                                         // 163\n                    user: Meteor.user().username                                                   // 164\n                });                                                                                // 160\n            } else {                                                                               // 166\n                alert('You need to be logged in to submit comments!');                             // 168\n            }                                                                                      // 169\n                                                                                                   //\n            return false; // stop the form submit from reloading the page                          // 171\n        }                                                                                          // 173\n                                                                                                   //\n        return submitJsSaveCommentForm;                                                            // 152\n    }()                                                                                            // 152\n});                                                                                                // 151\n                                                                                                   //\nTemplate.comments_list.helpers({                                                                   // 176\n    comments: function () {                                                                        // 177\n        function comments() {                                                                      // 177\n            return Comments.find({ website: Router.current().params._id });                        // 178\n        }                                                                                          // 179\n                                                                                                   //\n        return comments;                                                                           // 177\n    }()                                                                                            // 177\n});                                                                                                // 176\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lib\":{\"collections.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// lib/collections.js                                                                              //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nWebsites = new Mongo.Collection(\"websites\");                                                       // 1\n                                                                                                   //\nComments = new Mongo.Collection(\"comments\");                                                       // 3\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./lib/collections.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/template.main.js","/client/main.js","/lib/collections.js"],"names":[],"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","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return \"\";\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"ApplicationLayout\");\nTemplate[\"ApplicationLayout\"] = new Template(\"Template.ApplicationLayout\", (function() {\n  var view = this;\n  return [ Blaze._TemplateWith(function() {\n    return \"navbar\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n    \", HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n        \", Blaze._TemplateWith(function() {\n    return \"form\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n        \", Blaze._TemplateWith(function() {\n    return \"main\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n        \", Blaze._TemplateWith(function() {\n    return \"comments\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n        \", Blaze._TemplateWith(function() {\n    return \"comment\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"navbar\");\nTemplate[\"navbar\"] = new Template(\"Template.navbar\", (function() {\n  var view = this;\n  return HTML.NAV({\n    \"class\": \"navbar navbar-default\"\n  }, \"\\n      \", HTML.DIV({\n    \"class\": \"container-fluid\"\n  }, \"\\n        \", HTML.Raw('<div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"/\">Site Ace </a>\\n        </div>'), \"\\n          \", Blaze._TemplateWith(function() {\n    return {\n      align: Spacebars.call(\"right\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"loginButtons\"));\n  }), \"\\n      \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"website_form\");\nTemplate[\"website_form\"] = new Template(\"Template.website_form\", (function() {\n  var view = this;\n  return HTML.Raw('<a class=\"btn btn-default toggle-website-form js-toggle-website-form\" href=\"#\">\\n          <span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span>\\n    </a>\\n    <div id=\"website_form\" class=\"hidden_div\">\\n        <form class=\"js-save-website-form\">\\n          <div class=\"form-group\">\\n            <label for=\"url\">Site address</label>\\n            <input type=\"text\" class=\"form-control\" id=\"url\" placeholder=\"http://www.mysite.com\">\\n          </div>\\n          <button type=\"submit\" class=\"btn btn-default\">Submit</button>\\n        </form>\\n    </div>');\n}));\n\nTemplate.__checkName(\"website_list\");\nTemplate[\"website_list\"] = new Template(\"Template.website_list\", (function() {\n  var view = this;\n  return HTML.OL(\"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"websites\"));\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"website_item\")), \"\\n    \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"website_item\");\nTemplate[\"website_item\"] = new Template(\"Template.website_item\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"_id\"));\n    }\n  }, Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  }), \" \"), \"\\n    \", HTML.P(\"\\n        \", Blaze.View(\"lookup:description\", function() {\n    return Spacebars.mustache(view.lookup(\"description\"));\n  }), \"\\n    \"), HTML.Raw('\\n    <a href=\"#\" class=\"btn btn-default js-upvote\">\\n        <span class=\"glyphicon glyphicon-arrow-up\" aria-hidden=\"true\"></span>\\n    </a>\\n    <a href=\"#\" class=\"btn btn-default js-downvote\">\\n        <span class=\"glyphicon glyphicon-arrow-down\" aria-hidden=\"true\"></span>\\n    </a>\\n    <!-- you will be putting your up and down vote buttons in here! -->\\n    '), HTML.P({\n    \"class\": \"website-meta\"\n  }, \"Votes: \", HTML.SPAN({\n    \"class\": \"js-votes-up\"\n  }, Blaze.View(\"lookup:up\", function() {\n    return Spacebars.mustache(view.lookup(\"up\"));\n  })), \"↑, \", HTML.SPAN({\n    \"class\": \"js-votes-down\"\n  }, Blaze.View(\"lookup:down\", function() {\n    return Spacebars.mustache(view.lookup(\"down\"));\n  })), \"↓\"), \"\\n\");\n}));\n\nTemplate.__checkName(\"comments_list\");\nTemplate[\"comments_list\"] = new Template(\"Template.comments_list\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h3>Comments</h3>\\n    \"), HTML.OL(\"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"comments\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"comment_item\")), \"\\n        \" ];\n  }), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"comment_item\");\nTemplate[\"comment_item\"] = new Template(\"Template.comment_item\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", Blaze.View(\"lookup:comment\", function() {\n    return Spacebars.mustache(view.lookup(\"comment\"));\n  }), \"\\n        \", HTML.P({\n    \"class\": \"comment-meta\"\n  }, Blaze.View(\"lookup:formattedDate\", function() {\n    return Spacebars.mustache(view.lookup(\"formattedDate\"));\n  }), \" by \", Blaze.View(\"lookup:getUser\", function() {\n    return Spacebars.mustache(view.lookup(\"getUser\"), view.lookup(\"user\"));\n  })), \"\\n    \");\n}));\n\nTemplate.__checkName(\"comment_form\");\nTemplate[\"comment_form\"] = new Template(\"Template.comment_form\", (function() {\n  var view = this;\n  return HTML.Raw('<div id=\"comment_form\">\\n        <form class=\"js-save-comment-form\">\\n          <div class=\"form-group\">\\n            <input type=\"text\" class=\"form-control\" id=\"comment\" placeholder=\"Type your comment here...\">\\n          </div>\\n\\n          <button type=\"submit\" class=\"btn btn-default\">Submit</button>\\n        </form>\\n    </div>');\n}));\n","Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_AND_EMAIL\"\n});\n\n\nRouter.configure({\n    layoutTemplate: 'ApplicationLayout'\n});\n\nRouter.route('/', function () {\n    this.render('navbar', {\n        to: 'navbar' // The name of the main placeholder in applicationLayout\n    });\n    this.render('website_form', {\n        to: 'form'\n    });\n    \n    this.render('website_item', {\n        to: 'main',\n        data: function() {\n            return Websites.findOne({_id: this.params._id});\n        }\n    });\n    this.render('comments_list', {\n    to: 'comments'\n});\nthis.render('comment_form', {\n    to: 'comment'\n});\n});\n\nTemplate.website_item.events({\n        \"click .js-upvote\":function(event){\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Up voting website with id \"+website_id);\n            // put the code in here to add a vote to a website!\n\n            return false;// prevent the button from reloading the page\n        }, \n        \"click .js-downvote\":function(event){\n\n            // example of how you can access the id for the website in the database\n            // (this is the data context for the template)\n            var website_id = this._id;\n            console.log(\"Down voting website with id \"+website_id);\n\n            // put the code in here to remove a vote from a website!\n\n            return false;// prevent the button from reloading the page\n        }\n    })\n\nTemplate.website_form.events({\n        \"click .js-toggle-website-form\":function(event){\n            $(\"#website_form\").toggle('slow');\n        }, \n        \"submit .js-save-website-form\":function(event){\n\n            if (Meteor.user()) {\n    Meteor.user().username;\n}\nelse {\n        alert('You need to be logged in to submit websites!');\n    }\n\n    return false;\n\n\n            // here is an example of how to get the url out of the form:\n            var url = event.target.url.value;\n            console.log(\"The url they entered is: \"+url);\n            \n            //  put your website saving code in here! \n         Meteor.call(\"getWebsiteData\", url, function(error, results) {\n\n            // Dump the markup into a dummy element for jQuery manipulation\n            var el = $('');\n            el.html(results.content);\n\n            // Get the meta data\n            var title = $('title', el).text();\n            var description = $('meta[name=\"description\"]', el).attr('content');\n\n            // Add the new website in the Websites collection\n            Websites.insert({\n                title: title, \n                url: url, \n                description: description, \n                createdOn:new Date(),\n                user: \"Anonymous\", // Use Meteor.user()._id in main.js\n                up: 0,\n                down: 0\n            })\n        });             \n\n            return false;// stop the form submit from reloading the page\n\n        }\n    });\n\nTemplate.ApplicationLayout.events({\n    \"click .js-upvote\":function(event){\n        // example of how you can access the id for the website in the database\n        // (this is the data context for the template)\n        var website_id = this._id;\n        console.log(\"Up voting website with id \"+website_id);\n\n        // put the code in here to add a vote to a website!\n        Websites.update({_id: website_id},\n                        {$set: {up: this.up + 1}});\n\n        return false;// prevent the button from reloading the page\n    }, \n    \"click .js-downvote\":function(event){\n\n        // example of how you can access the id for the website in the database\n        // (this is the data context for the template)\n        var website_id = this._id;\n        console.log(\"Down voting website with id \"+website_id);\n\n        // put the code in here to remove a vote from a website!\n        Websites.update({_id: website_id},\n                        {$set: {down: this.down + 1}});\n\n        return false;// prevent the button from reloading the page\n    }\n})\n   \n// format the date\nTemplate.registerHelper('formattedDate', function() {\n     return moment(this.createdOn).format(\"MM/DD/YYYY\");  // or whatever format you prefer\n});\n\nTemplate.website_list.helpers({\n    websites:function(){\n        return Websites.find({}, {sort: {up:-1}});\n    }\n});\n\nTemplate.registerHelper('getUser', function(userId) {\n     var user = Meteor.users.findOne({_id: userId});\n    if (user) {\n        return user.username;\n    }\n    else {\n        return \"anonymous\";\n    }\n});\nTemplate.comment_form.events({\n    \"submit .js-save-comment-form\":function(event){\n\n        if (Meteor.user()) {\n\n            // here is an example of how to get the comment out of the form:\n            var comment = event.target.comment.value;\n            console.log(\"The comment they entered is: \"+comment);\n\n            Comments.insert({\n                website: Router.current().params._id, \n                comment: comment, \n                createdOn: new Date(),\n                user: Meteor.user().username\n            });\n        }\n        else {\n            alert('You need to be logged in to submit comments!');\n        }\n\n        return false; // stop the form submit from reloading the page\n\n    }\n});\n\nTemplate.comments_list.helpers({\n    comments:function(){\n        return Comments.find({website: Router.current().params._id});\n    }\n});","Websites = new Mongo.Collection(\"websites\");\r\n\r\nComments = new Mongo.Collection(\"comments\");\r\n\r\n"]}}]